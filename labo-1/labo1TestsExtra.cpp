/**
 * @file labo1TestExtra.cpp
 *
 * @brief Unit tests for a simple linear algebra library.
 *
 * Nom: William Lebel
 * Email : william.lebel.1@ens.etsmtl.ca
 *
 */

#include "Matrix.h"
#include "Math3D.h"
#include "Vector.h"
#include "Operators.h"

#include <gtest/gtest.h>
#include <chrono>

using namespace gti320;

TEST(TestLabo1Extra, DotAndNorm){
  {
    Vector3d u; u(0) = 81.74804972455644; u(1) = -74.09304417781078; u(2) = -91.38202093790602;
    Vector3d v; v(0) = 81.1462118959985; v(1) = 29.763442976156085; v(2) = 39.00787276684184;
    EXPECT_NEAR(u.dot(v), 863.662223794679, 1e-4) << "(u=(81.74804972455644, -74.09304417781078, -91.38202093790602), v= (81.1462118959985, 29.763442976156085, 39.00787276684184))";
    EXPECT_NEAR(u.norm(), 143.25919370148452, 1e-4) << "(u=(81.74804972455644, -74.09304417781078, -91.38202093790602))";
    u = v;
    EXPECT_NEAR(u.norm(), 94.82712892764025, 1e-4) << "u=(81.74804972455644, -74.09304417781078, -91.38202093790602)";
  }
  {
    Vector3d u; u(0) = 13.087936541928485; u(1) = -26.541934227528046; u(2) = -48.13859302157102;
    Vector3d v; v(0) = -66.28108277028942; v(1) = 11.919000480625243; v(2) = -96.21367167640467;
    EXPECT_NEAR(u.dot(v), 3447.7548518990116, 1e-4) << "(u=(13.087936541928485, -26.541934227528046, -48.13859302157102), v= (-66.28108277028942, 11.919000480625243, -96.21367167640467))";
    EXPECT_NEAR(u.norm(), 56.50745520336602, 1e-4) << "(u=(13.087936541928485, -26.541934227528046, -48.13859302157102))";
    u = v;
    EXPECT_NEAR(u.norm(), 117.44068768154457, 1e-4) << "u=(13.087936541928485, -26.541934227528046, -48.13859302157102)";
  }
  {
    Vector3d u; u(0) = -79.56972852806103; u(1) = -64.04761691711548; u(2) = 75.76398532227091;
    Vector3d v; v(0) = 68.1521534060019; v(1) = -38.02548546805114; v(2) = 44.66242384133133;
    EXPECT_NEAR(u.dot(v), 396.3966055984092, 1e-4) << "(u=(-79.56972852806103, -64.04761691711548, 75.76398532227091), v= (68.1521534060019, -38.02548546805114, 44.66242384133133))";
    EXPECT_NEAR(u.norm(), 127.17554954748255, 1e-4) << "(u=(-79.56972852806103, -64.04761691711548, 75.76398532227091))";
    u = v;
    EXPECT_NEAR(u.norm(), 89.91877258025103, 1e-4) << "u=(-79.56972852806103, -64.04761691711548, 75.76398532227091)";
  }
  {
    Vector3d u; u(0) = -27.829925590795995; u(1) = 97.52374799957443; u(2) = -71.29949583706774;
    Vector3d v; v(0) = 15.413123773966177; v(1) = -25.9678191712148; v(2) = -70.46329734352945;
    EXPECT_NEAR(u.dot(v), 2062.5724349077673, 1e-4) << "(u=(-27.829925590795995, 97.52374799957443, -71.29949583706774), v= (15.413123773966177, -25.9678191712148, -70.46329734352945))";
    EXPECT_NEAR(u.norm(), 123.97178827819569, 1e-4) << "(u=(-27.829925590795995, 97.52374799957443, -71.29949583706774))";
    u = v;
    EXPECT_NEAR(u.norm(), 76.66138721353245, 1e-4) << "u=(-27.829925590795995, 97.52374799957443, -71.29949583706774)";
  }
  {
    Vector3d u; u(0) = 46.94969707999718; u(1) = 92.7292896206543; u(2) = 61.3890905084975;
    Vector3d v; v(0) = 91.40236621394195; v(1) = -23.911909695536067; v(2) = -66.18706904017846;
    EXPECT_NEAR(u.dot(v), -1989.1849652004407, 1e-4) << "(u=(46.94969707999718, 92.7292896206543, 61.3890905084975), v= (91.40236621394195, -23.911909695536067, -66.18706904017846))";
    EXPECT_NEAR(u.norm(), 120.71294728783312, 1e-4) << "(u=(46.94969707999718, 92.7292896206543, 61.3890905084975))";
    u = v;
    EXPECT_NEAR(u.norm(), 115.3555377211011, 1e-4) << "u=(46.94969707999718, 92.7292896206543, 61.3890905084975)";
  }
  {
    Vector3d u; u(0) = 9.836648455487577; u(1) = 27.373779624683323; u(2) = 33.47163213808042;
    Vector3d v; v(0) = -17.904556153169437; v(1) = -10.39159035574184; v(2) = 36.045191146582226;
    EXPECT_NEAR(u.dot(v), 745.913449426867, 1e-4) << "(u=(9.836648455487577, 27.373779624683323, 33.47163213808042), v= (-17.904556153169437, -10.39159035574184, 36.045191146582226))";
    EXPECT_NEAR(u.norm(), 44.344488065198725, 1e-4) << "(u=(9.836648455487577, 27.373779624683323, 33.47163213808042))";
    u = v;
    EXPECT_NEAR(u.norm(), 41.566983123113395, 1e-4) << "u=(9.836648455487577, 27.373779624683323, 33.47163213808042)";
  }
  {
    Vector3d u; u(0) = 77.34524968701723; u(1) = -86.53838659054598; u(2) = 52.511893628372974;
    Vector3d v; v(0) = 39.390038592378005; v(1) = -53.13512176642368; v(2) = 60.23922457130902;
    EXPECT_NEAR(u.dot(v), 10808.13583201148, 1e-4) << "(u=(77.34524968701723, -86.53838659054598, 52.511893628372974), v= (39.390038592378005, -53.13512176642368, 60.23922457130902))";
    EXPECT_NEAR(u.norm(), 127.39183245121873, 1e-4) << "(u=(77.34524968701723, -86.53838659054598, 52.511893628372974))";
    u = v;
    EXPECT_NEAR(u.norm(), 89.4632912562147, 1e-4) << "u=(77.34524968701723, -86.53838659054598, 52.511893628372974)";
  }
  {
    Vector3d u; u(0) = 72.58764125601218; u(1) = 13.004884623782146; u(2) = 6.688195585248067;
    Vector3d v; v(0) = -41.68110389567836; v(1) = 65.83906651972734; v(2) = 64.45916748876758;
    EXPECT_NEAR(u.dot(v), -1738.1880334803595, 1e-4) << "(u=(72.58764125601218, 13.004884623782146, 6.688195585248067), v= (-41.68110389567836, 65.83906651972734, 64.45916748876758))";
    EXPECT_NEAR(u.norm(), 74.04609812391155, 1e-4) << "(u=(72.58764125601218, 13.004884623782146, 6.688195585248067))";
    u = v;
    EXPECT_NEAR(u.norm(), 101.12903329655835, 1e-4) << "u=(72.58764125601218, 13.004884623782146, 6.688195585248067)";
  }
  {
    Vector3d u; u(0) = 44.123038783178856; u(1) = 59.032307289173275; u(2) = -96.45920641599031;
    Vector3d v; v(0) = -23.433056105942327; v(1) = -95.82287577132844; v(2) = -87.71884659805113;
    EXPECT_NEAR(u.dot(v), 1770.7072393377675, 1e-4) << "(u=(44.123038783178856, 59.032307289173275, -96.45920641599031), v= (-23.433056105942327, -95.82287577132844, -87.71884659805113))";
    EXPECT_NEAR(u.norm(), 121.39206875965131, 1e-4) << "(u=(44.123038783178856, 59.032307289173275, -96.45920641599031))";
    u = v;
    EXPECT_NEAR(u.norm(), 132.006544110677, 1e-4) << "u=(44.123038783178856, 59.032307289173275, -96.45920641599031)";
  }
  {
    Vector3d u; u(0) = -7.594864170286073; u(1) = -92.12702535387345; u(2) = 10.61833019724412;
    Vector3d v; v(0) = -57.88532008253067; v(1) = -61.95047768934079; v(2) = -50.9801175870505;
    EXPECT_NEAR(u.dot(v), 5605.620650217189, 1e-4) << "(u=(-7.594864170286073, -92.12702535387345, 10.61833019724412), v= (-57.88532008253067, -61.95047768934079, -50.9801175870505))";
    EXPECT_NEAR(u.norm(), 93.04740565161417, 1e-4) << "(u=(-7.594864170286073, -92.12702535387345, 10.61833019724412))";
    u = v;
    EXPECT_NEAR(u.norm(), 98.9320188623685, 1e-4) << "u=(-7.594864170286073, -92.12702535387345, 10.61833019724412)";
  }
  {
    Vector3d u; u(0) = 28.01623276831728; u(1) = -35.47111447521442; u(2) = -80.09707278049716;
    Vector3d v; v(0) = 62.23810927998369; v(1) = -69.45561657190204; v(2) = -17.998932897185853;
    EXPECT_NEAR(u.dot(v), 5649.007321253708, 1e-4) << "(u=(28.01623276831728, -35.47111447521442, -80.09707278049716), v= (62.23810927998369, -69.45561657190204, -17.998932897185853))";
    EXPECT_NEAR(u.norm(), 91.97092110361056, 1e-4) << "(u=(28.01623276831728, -35.47111447521442, -80.09707278049716))";
    u = v;
    EXPECT_NEAR(u.norm(), 94.98224310663369, 1e-4) << "u=(28.01623276831728, -35.47111447521442, -80.09707278049716)";
  }
  {
    Vector3d u; u(0) = 17.056114318144637; u(1) = -47.87236586884536; u(2) = -66.233990996889;
    Vector3d v; v(0) = -16.5274983107699; v(1) = -61.98159750757431; v(2) = -95.73085862430288;
    EXPECT_NEAR(u.dot(v), 9025.947640683207, 1e-4) << "(u=(17.056114318144637, -47.87236586884536, -66.233990996889), v= (-16.5274983107699, -61.98159750757431, -95.73085862430288))";
    EXPECT_NEAR(u.norm(), 83.48422613218729, 1e-4) << "(u=(17.056114318144637, -47.87236586884536, -66.233990996889))";
    u = v;
    EXPECT_NEAR(u.norm(), 115.23573197124973, 1e-4) << "u=(17.056114318144637, -47.87236586884536, -66.233990996889)";
  }
  {
    Vector3d u; u(0) = 53.68514451573557; u(1) = 40.487633535881685; u(2) = -34.39102876903675;
    Vector3d v; v(0) = 5.723467714467617; v(1) = -11.984939376053532; v(2) = 71.57117734380691;
    EXPECT_NEAR(u.dot(v), -2639.3830610897676, 1e-4) << "(u=(53.68514451573557, 40.487633535881685, -34.39102876903675), v= (5.723467714467617, -11.984939376053532, 71.57117734380691))";
    EXPECT_NEAR(u.norm(), 75.52540016977055, 1e-4) << "(u=(53.68514451573557, 40.487633535881685, -34.39102876903675))";
    u = v;
    EXPECT_NEAR(u.norm(), 72.79306478576713, 1e-4) << "u=(53.68514451573557, 40.487633535881685, -34.39102876903675)";
  }
  {
    Vector3d u; u(0) = -19.41880304735801; u(1) = 80.15388147841654; u(2) = 18.762371448279836;
    Vector3d v; v(0) = 56.544323419883455; v(1) = 37.75922627098413; v(2) = -45.767718603712495;
    EXPECT_NEAR(u.dot(v), 1069.8145305211428, 1e-4) << "(u=(-19.41880304735801, 80.15388147841654, 18.762371448279836), v= (56.544323419883455, 37.75922627098413, -45.767718603712495))";
    EXPECT_NEAR(u.norm(), 84.57991020455952, 1e-4) << "(u=(-19.41880304735801, 80.15388147841654, 18.762371448279836))";
    u = v;
    EXPECT_NEAR(u.norm(), 81.96159921441485, 1e-4) << "u=(-19.41880304735801, 80.15388147841654, 18.762371448279836)";
  }
  {
    Vector3d u; u(0) = 14.53101118226931; u(1) = -87.12123268098249; u(2) = -12.733552633138217;
    Vector3d v; v(0) = -96.36370344463752; v(1) = -81.8797705320039; v(2) = -25.593956628649764;
    EXPECT_NEAR(u.dot(v), 6059.106481886422, 1e-4) << "(u=(14.53101118226931, -87.12123268098249, -12.733552633138217), v= (-96.36370344463752, -81.8797705320039, -25.593956628649764))";
    EXPECT_NEAR(u.norm(), 89.23790020217884, 1e-4) << "(u=(14.53101118226931, -87.12123268098249, -12.733552633138217))";
    u = v;
    EXPECT_NEAR(u.norm(), 129.01670736710366, 1e-4) << "u=(14.53101118226931, -87.12123268098249, -12.733552633138217)";
  }
  {
    Vector3d u; u(0) = -68.15128360202914; u(1) = -35.22142681790423; u(2) = -80.20820520692742;
    Vector3d v; v(0) = -71.59083714955358; v(1) = -22.11220916087268; v(2) = -41.412146034892785;
    EXPECT_NEAR(u.dot(v), 8979.424909853704, 1e-4) << "(u=(-68.15128360202914, -35.22142681790423, -80.20820520692742), v= (-71.59083714955358, -22.11220916087268, -41.412146034892785))";
    EXPECT_NEAR(u.norm(), 110.98874963801407, 1e-4) << "(u=(-68.15128360202914, -35.22142681790423, -80.20820520692742))";
    u = v;
    EXPECT_NEAR(u.norm(), 85.61053438078382, 1e-4) << "u=(-68.15128360202914, -35.22142681790423, -80.20820520692742)";
  }
  {
    Vector3d u; u(0) = 32.15880264107108; u(1) = -27.044272757999167; u(2) = -21.93384224298498;
    Vector3d v; v(0) = 94.98651607465004; v(1) = 96.25601423462368; v(2) = -4.364871517549744;
    EXPECT_NEAR(u.dot(v), 547.2171237254174, 1e-4) << "(u=(32.15880264107108, -27.044272757999167, -21.93384224298498), v= (94.98651607465004, 96.25601423462368, -4.364871517549744))";
    EXPECT_NEAR(u.norm(), 47.399100327501664, 1e-4) << "(u=(32.15880264107108, -27.044272757999167, -21.93384224298498))";
    u = v;
    EXPECT_NEAR(u.norm(), 135.3022934606082, 1e-4) << "u=(32.15880264107108, -27.044272757999167, -21.93384224298498)";
  }
  {
    Vector3d u; u(0) = -38.55884639660741; u(1) = -32.44768663392304; u(2) = -86.51014461651837;
    Vector3d v; v(0) = -32.975270310868936; v(1) = -48.59524328395069; v(2) = -92.16520328196806;
    EXPECT_NEAR(u.dot(v), 10821.51667331416, 1e-4) << "(u=(-38.55884639660741, -32.44768663392304, -86.51014461651837), v= (-32.975270310868936, -48.59524328395069, -92.16520328196806))";
    EXPECT_NEAR(u.norm(), 100.1181408382185, 1e-4) << "(u=(-38.55884639660741, -32.44768663392304, -86.51014461651837))";
    u = v;
    EXPECT_NEAR(u.norm(), 109.2853641523316, 1e-4) << "u=(-38.55884639660741, -32.44768663392304, -86.51014461651837)";
  }
  {
    Vector3d u; u(0) = -93.94403064987613; u(1) = -22.806019440495206; u(2) = -6.186803379242534;
    Vector3d v; v(0) = 99.58719003758503; v(1) = 11.426147026760503; v(2) = 89.17338366240898;
    EXPECT_NEAR(u.dot(v), -10167.905155829267, 1e-4) << "(u=(-93.94403064987613, -22.806019440495206, -6.186803379242534), v= (99.58719003758503, 11.426147026760503, 89.17338366240898))";
    EXPECT_NEAR(u.norm(), 96.87038739221866, 1e-4) << "(u=(-93.94403064987613, -22.806019440495206, -6.186803379242534))";
    u = v;
    EXPECT_NEAR(u.norm(), 134.1642933468604, 1e-4) << "u=(-93.94403064987613, -22.806019440495206, -6.186803379242534)";
  }
  {
    Vector3d u; u(0) = 49.70172009239852; u(1) = 35.23095832735339; u(2) = -95.645812626239;
    Vector3d v; v(0) = -26.17330847186834; v(1) = -13.328976428902024; v(2) = 43.288466758804674;
    EXPECT_NEAR(u.dot(v), -5910.811645163534, 1e-4) << "(u=(49.70172009239852, 35.23095832735339, -95.645812626239), v= (-26.17330847186834, -13.328976428902024, 43.288466758804674))";
    EXPECT_NEAR(u.norm(), 113.40018905513546, 1e-4) << "(u=(49.70172009239852, 35.23095832735339, -95.645812626239))";
    u = v;
    EXPECT_NEAR(u.norm(), 52.31247502588592, 1e-4) << "u=(49.70172009239852, 35.23095832735339, -95.645812626239)";
  }
}
TEST(TestLabo1Extra, Transpose){
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,18);
    m(0,0)=-53.34082116633647; m(0,1)=-46.03453300915996; m(0,2)=23.870504778711222; m(0,3)=-84.38584434135912; m(0,4)=27.60925669479238; m(0,5)=12.522954739116472; m(0,6)=-5.13387256788198; m(0,7)=-74.64964175761908; m(0,8)=88.42295263504246; m(0,9)=-86.7874919064486; m(0,10)=-79.88708494735097; m(0,11)=-17.17722096059542; m(0,12)=85.6897894474686; m(0,13)=-82.41674556782277; m(0,14)=78.3128266236711; m(0,15)=85.25612877640819; m(0,16)=-38.0873284708495; m(0,17)=-58.04754165817074; m(1,0)=68.78057200370648; m(1,1)=75.90146773584507; m(1,2)=26.415843809219268; m(1,3)=85.974355132668; m(1,4)=-54.547172162064996; m(1,5)=-9.850761895114914; m(1,6)=-20.08352800477165; m(1,7)=72.38091356402956; m(1,8)=-69.22976569802486; m(1,9)=-87.21077200064953; m(1,10)=-87.63519136239961; m(1,11)=73.4581502775847; m(1,12)=2.53103023142846; m(1,13)=-68.86709090041496; m(1,14)=-58.79099188247776; m(1,15)=-24.928915270896383; m(1,16)=-13.203584532953869; m(1,17)=87.65227222384465; m(2,0)=-11.227218979873996; m(2,1)=15.505206761251799; m(2,2)=44.279309998458956; m(2,3)=58.34181142684304; m(2,4)=1.573993682369263; m(2,5)=-79.31465575205246; m(2,6)=73.20612700709674; m(2,7)=98.58368163461643; m(2,8)=71.70261300592779; m(2,9)=11.966641841584448; m(2,10)=68.6628697548895; m(2,11)=79.0263145676746; m(2,12)=-82.33610024223475; m(2,13)=70.24757027549975; m(2,14)=-8.685930630026036; m(2,15)=49.159487747817195; m(2,16)=24.63859030001963; m(2,17)=-38.62847909657376;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), -53.34082116633647); EXPECT_DOUBLE_EQ(mtr(0,1), 68.78057200370648); EXPECT_DOUBLE_EQ(mtr(0,2), -11.227218979873996); EXPECT_DOUBLE_EQ(mtr(1,0), -46.03453300915996); EXPECT_DOUBLE_EQ(mtr(1,1), 75.90146773584507); EXPECT_DOUBLE_EQ(mtr(1,2), 15.505206761251799); EXPECT_DOUBLE_EQ(mtr(2,0), 23.870504778711222); EXPECT_DOUBLE_EQ(mtr(2,1), 26.415843809219268); EXPECT_DOUBLE_EQ(mtr(2,2), 44.279309998458956); EXPECT_DOUBLE_EQ(mtr(3,0), -84.38584434135912); EXPECT_DOUBLE_EQ(mtr(3,1), 85.974355132668); EXPECT_DOUBLE_EQ(mtr(3,2), 58.34181142684304); EXPECT_DOUBLE_EQ(mtr(4,0), 27.60925669479238); EXPECT_DOUBLE_EQ(mtr(4,1), -54.547172162064996); EXPECT_DOUBLE_EQ(mtr(4,2), 1.573993682369263); EXPECT_DOUBLE_EQ(mtr(5,0), 12.522954739116472); EXPECT_DOUBLE_EQ(mtr(5,1), -9.850761895114914); EXPECT_DOUBLE_EQ(mtr(5,2), -79.31465575205246); EXPECT_DOUBLE_EQ(mtr(6,0), -5.13387256788198); EXPECT_DOUBLE_EQ(mtr(6,1), -20.08352800477165); EXPECT_DOUBLE_EQ(mtr(6,2), 73.20612700709674); EXPECT_DOUBLE_EQ(mtr(7,0), -74.64964175761908); EXPECT_DOUBLE_EQ(mtr(7,1), 72.38091356402956); EXPECT_DOUBLE_EQ(mtr(7,2), 98.58368163461643); EXPECT_DOUBLE_EQ(mtr(8,0), 88.42295263504246); EXPECT_DOUBLE_EQ(mtr(8,1), -69.22976569802486); EXPECT_DOUBLE_EQ(mtr(8,2), 71.70261300592779); EXPECT_DOUBLE_EQ(mtr(9,0), -86.7874919064486); EXPECT_DOUBLE_EQ(mtr(9,1), -87.21077200064953); EXPECT_DOUBLE_EQ(mtr(9,2), 11.966641841584448); EXPECT_DOUBLE_EQ(mtr(10,0), -79.88708494735097); EXPECT_DOUBLE_EQ(mtr(10,1), -87.63519136239961); EXPECT_DOUBLE_EQ(mtr(10,2), 68.6628697548895); EXPECT_DOUBLE_EQ(mtr(11,0), -17.17722096059542); EXPECT_DOUBLE_EQ(mtr(11,1), 73.4581502775847); EXPECT_DOUBLE_EQ(mtr(11,2), 79.0263145676746); EXPECT_DOUBLE_EQ(mtr(12,0), 85.6897894474686); EXPECT_DOUBLE_EQ(mtr(12,1), 2.53103023142846); EXPECT_DOUBLE_EQ(mtr(12,2), -82.33610024223475); EXPECT_DOUBLE_EQ(mtr(13,0), -82.41674556782277); EXPECT_DOUBLE_EQ(mtr(13,1), -68.86709090041496); EXPECT_DOUBLE_EQ(mtr(13,2), 70.24757027549975); EXPECT_DOUBLE_EQ(mtr(14,0), 78.3128266236711); EXPECT_DOUBLE_EQ(mtr(14,1), -58.79099188247776); EXPECT_DOUBLE_EQ(mtr(14,2), -8.685930630026036); EXPECT_DOUBLE_EQ(mtr(15,0), 85.25612877640819); EXPECT_DOUBLE_EQ(mtr(15,1), -24.928915270896383); EXPECT_DOUBLE_EQ(mtr(15,2), 49.159487747817195); EXPECT_DOUBLE_EQ(mtr(16,0), -38.0873284708495); EXPECT_DOUBLE_EQ(mtr(16,1), -13.203584532953869); EXPECT_DOUBLE_EQ(mtr(16,2), 24.63859030001963); EXPECT_DOUBLE_EQ(mtr(17,0), -58.04754165817074); EXPECT_DOUBLE_EQ(mtr(17,1), 87.65227222384465); EXPECT_DOUBLE_EQ(mtr(17,2), -38.62847909657376);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), -53.34082116633647); EXPECT_DOUBLE_EQ(mtc(0,1), 68.78057200370648); EXPECT_DOUBLE_EQ(mtc(0,2), -11.227218979873996); EXPECT_DOUBLE_EQ(mtc(1,0), -46.03453300915996); EXPECT_DOUBLE_EQ(mtc(1,1), 75.90146773584507); EXPECT_DOUBLE_EQ(mtc(1,2), 15.505206761251799); EXPECT_DOUBLE_EQ(mtc(2,0), 23.870504778711222); EXPECT_DOUBLE_EQ(mtc(2,1), 26.415843809219268); EXPECT_DOUBLE_EQ(mtc(2,2), 44.279309998458956); EXPECT_DOUBLE_EQ(mtc(3,0), -84.38584434135912); EXPECT_DOUBLE_EQ(mtc(3,1), 85.974355132668); EXPECT_DOUBLE_EQ(mtc(3,2), 58.34181142684304); EXPECT_DOUBLE_EQ(mtc(4,0), 27.60925669479238); EXPECT_DOUBLE_EQ(mtc(4,1), -54.547172162064996); EXPECT_DOUBLE_EQ(mtc(4,2), 1.573993682369263); EXPECT_DOUBLE_EQ(mtc(5,0), 12.522954739116472); EXPECT_DOUBLE_EQ(mtc(5,1), -9.850761895114914); EXPECT_DOUBLE_EQ(mtc(5,2), -79.31465575205246); EXPECT_DOUBLE_EQ(mtc(6,0), -5.13387256788198); EXPECT_DOUBLE_EQ(mtc(6,1), -20.08352800477165); EXPECT_DOUBLE_EQ(mtc(6,2), 73.20612700709674); EXPECT_DOUBLE_EQ(mtc(7,0), -74.64964175761908); EXPECT_DOUBLE_EQ(mtc(7,1), 72.38091356402956); EXPECT_DOUBLE_EQ(mtc(7,2), 98.58368163461643); EXPECT_DOUBLE_EQ(mtc(8,0), 88.42295263504246); EXPECT_DOUBLE_EQ(mtc(8,1), -69.22976569802486); EXPECT_DOUBLE_EQ(mtc(8,2), 71.70261300592779); EXPECT_DOUBLE_EQ(mtc(9,0), -86.7874919064486); EXPECT_DOUBLE_EQ(mtc(9,1), -87.21077200064953); EXPECT_DOUBLE_EQ(mtc(9,2), 11.966641841584448); EXPECT_DOUBLE_EQ(mtc(10,0), -79.88708494735097); EXPECT_DOUBLE_EQ(mtc(10,1), -87.63519136239961); EXPECT_DOUBLE_EQ(mtc(10,2), 68.6628697548895); EXPECT_DOUBLE_EQ(mtc(11,0), -17.17722096059542); EXPECT_DOUBLE_EQ(mtc(11,1), 73.4581502775847); EXPECT_DOUBLE_EQ(mtc(11,2), 79.0263145676746); EXPECT_DOUBLE_EQ(mtc(12,0), 85.6897894474686); EXPECT_DOUBLE_EQ(mtc(12,1), 2.53103023142846); EXPECT_DOUBLE_EQ(mtc(12,2), -82.33610024223475); EXPECT_DOUBLE_EQ(mtc(13,0), -82.41674556782277); EXPECT_DOUBLE_EQ(mtc(13,1), -68.86709090041496); EXPECT_DOUBLE_EQ(mtc(13,2), 70.24757027549975); EXPECT_DOUBLE_EQ(mtc(14,0), 78.3128266236711); EXPECT_DOUBLE_EQ(mtc(14,1), -58.79099188247776); EXPECT_DOUBLE_EQ(mtc(14,2), -8.685930630026036); EXPECT_DOUBLE_EQ(mtc(15,0), 85.25612877640819); EXPECT_DOUBLE_EQ(mtc(15,1), -24.928915270896383); EXPECT_DOUBLE_EQ(mtc(15,2), 49.159487747817195); EXPECT_DOUBLE_EQ(mtc(16,0), -38.0873284708495); EXPECT_DOUBLE_EQ(mtc(16,1), -13.203584532953869); EXPECT_DOUBLE_EQ(mtc(16,2), 24.63859030001963); EXPECT_DOUBLE_EQ(mtc(17,0), -58.04754165817074); EXPECT_DOUBLE_EQ(mtc(17,1), 87.65227222384465); EXPECT_DOUBLE_EQ(mtc(17,2), -38.62847909657376);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,2);
    m(0,0)=96.65562704596559; m(0,1)=-5.374125981819006; m(1,0)=64.81364389648456; m(1,1)=-69.97868420900502; m(2,0)=-48.298014749653696; m(2,1)=81.5535983882881;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), 96.65562704596559); EXPECT_DOUBLE_EQ(mtr(0,1), 64.81364389648456); EXPECT_DOUBLE_EQ(mtr(0,2), -48.298014749653696); EXPECT_DOUBLE_EQ(mtr(1,0), -5.374125981819006); EXPECT_DOUBLE_EQ(mtr(1,1), -69.97868420900502); EXPECT_DOUBLE_EQ(mtr(1,2), 81.5535983882881);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), 96.65562704596559); EXPECT_DOUBLE_EQ(mtc(0,1), 64.81364389648456); EXPECT_DOUBLE_EQ(mtc(0,2), -48.298014749653696); EXPECT_DOUBLE_EQ(mtc(1,0), -5.374125981819006); EXPECT_DOUBLE_EQ(mtc(1,1), -69.97868420900502); EXPECT_DOUBLE_EQ(mtc(1,2), 81.5535983882881);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,9);
    m(0,0)=-28.460223863032084; m(0,1)=-92.25789689735883; m(0,2)=-43.14614194149491; m(0,3)=-40.101775141244445; m(0,4)=39.72205415555169; m(0,5)=34.48176307840737; m(0,6)=-70.41477781325358; m(0,7)=31.292131242834557; m(0,8)=-77.78666526803981; m(1,0)=-95.74572778113553; m(1,1)=69.51734738633962; m(1,2)=35.202317107730096; m(1,3)=36.352233427548896; m(1,4)=-56.947774200948565; m(1,5)=-44.47310878353563; m(1,6)=-52.93834327432918; m(1,7)=7.786855661378354; m(1,8)=-45.40916719576622; m(2,0)=16.713951754654957; m(2,1)=62.32485766076482; m(2,2)=-41.11227725909406; m(2,3)=48.40501479731836; m(2,4)=-93.386341582453; m(2,5)=-17.61233965622378; m(2,6)=-76.82141809368453; m(2,7)=-55.475406166347184; m(2,8)=-71.02454570197418;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), -28.460223863032084); EXPECT_DOUBLE_EQ(mtr(0,1), -95.74572778113553); EXPECT_DOUBLE_EQ(mtr(0,2), 16.713951754654957); EXPECT_DOUBLE_EQ(mtr(1,0), -92.25789689735883); EXPECT_DOUBLE_EQ(mtr(1,1), 69.51734738633962); EXPECT_DOUBLE_EQ(mtr(1,2), 62.32485766076482); EXPECT_DOUBLE_EQ(mtr(2,0), -43.14614194149491); EXPECT_DOUBLE_EQ(mtr(2,1), 35.202317107730096); EXPECT_DOUBLE_EQ(mtr(2,2), -41.11227725909406); EXPECT_DOUBLE_EQ(mtr(3,0), -40.101775141244445); EXPECT_DOUBLE_EQ(mtr(3,1), 36.352233427548896); EXPECT_DOUBLE_EQ(mtr(3,2), 48.40501479731836); EXPECT_DOUBLE_EQ(mtr(4,0), 39.72205415555169); EXPECT_DOUBLE_EQ(mtr(4,1), -56.947774200948565); EXPECT_DOUBLE_EQ(mtr(4,2), -93.386341582453); EXPECT_DOUBLE_EQ(mtr(5,0), 34.48176307840737); EXPECT_DOUBLE_EQ(mtr(5,1), -44.47310878353563); EXPECT_DOUBLE_EQ(mtr(5,2), -17.61233965622378); EXPECT_DOUBLE_EQ(mtr(6,0), -70.41477781325358); EXPECT_DOUBLE_EQ(mtr(6,1), -52.93834327432918); EXPECT_DOUBLE_EQ(mtr(6,2), -76.82141809368453); EXPECT_DOUBLE_EQ(mtr(7,0), 31.292131242834557); EXPECT_DOUBLE_EQ(mtr(7,1), 7.786855661378354); EXPECT_DOUBLE_EQ(mtr(7,2), -55.475406166347184); EXPECT_DOUBLE_EQ(mtr(8,0), -77.78666526803981); EXPECT_DOUBLE_EQ(mtr(8,1), -45.40916719576622); EXPECT_DOUBLE_EQ(mtr(8,2), -71.02454570197418);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), -28.460223863032084); EXPECT_DOUBLE_EQ(mtc(0,1), -95.74572778113553); EXPECT_DOUBLE_EQ(mtc(0,2), 16.713951754654957); EXPECT_DOUBLE_EQ(mtc(1,0), -92.25789689735883); EXPECT_DOUBLE_EQ(mtc(1,1), 69.51734738633962); EXPECT_DOUBLE_EQ(mtc(1,2), 62.32485766076482); EXPECT_DOUBLE_EQ(mtc(2,0), -43.14614194149491); EXPECT_DOUBLE_EQ(mtc(2,1), 35.202317107730096); EXPECT_DOUBLE_EQ(mtc(2,2), -41.11227725909406); EXPECT_DOUBLE_EQ(mtc(3,0), -40.101775141244445); EXPECT_DOUBLE_EQ(mtc(3,1), 36.352233427548896); EXPECT_DOUBLE_EQ(mtc(3,2), 48.40501479731836); EXPECT_DOUBLE_EQ(mtc(4,0), 39.72205415555169); EXPECT_DOUBLE_EQ(mtc(4,1), -56.947774200948565); EXPECT_DOUBLE_EQ(mtc(4,2), -93.386341582453); EXPECT_DOUBLE_EQ(mtc(5,0), 34.48176307840737); EXPECT_DOUBLE_EQ(mtc(5,1), -44.47310878353563); EXPECT_DOUBLE_EQ(mtc(5,2), -17.61233965622378); EXPECT_DOUBLE_EQ(mtc(6,0), -70.41477781325358); EXPECT_DOUBLE_EQ(mtc(6,1), -52.93834327432918); EXPECT_DOUBLE_EQ(mtc(6,2), -76.82141809368453); EXPECT_DOUBLE_EQ(mtc(7,0), 31.292131242834557); EXPECT_DOUBLE_EQ(mtc(7,1), 7.786855661378354); EXPECT_DOUBLE_EQ(mtc(7,2), -55.475406166347184); EXPECT_DOUBLE_EQ(mtc(8,0), -77.78666526803981); EXPECT_DOUBLE_EQ(mtc(8,1), -45.40916719576622); EXPECT_DOUBLE_EQ(mtc(8,2), -71.02454570197418);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,11);
    m(0,0)=-93.11774348806081; m(0,1)=-98.38480859022877; m(0,2)=-70.06261616604155; m(0,3)=84.87535684986423; m(0,4)=-99.9818642210925; m(0,5)=-25.11185567441916; m(0,6)=8.85590979917103; m(0,7)=32.717509759851936; m(0,8)=12.677927494307738; m(0,9)=-76.92757015087707; m(0,10)=-80.99502606313347; m(1,0)=-14.108330840223957; m(1,1)=-94.81883611699344; m(1,2)=-45.060719301725285; m(1,3)=-41.383939879963094; m(1,4)=80.36741308691853; m(1,5)=-87.50961508738959; m(1,6)=-32.65290161505921; m(1,7)=18.529868291798238; m(1,8)=-46.169755352790595; m(1,9)=83.67078184672366; m(1,10)=-30.02053885691531; m(2,0)=5.8022044043901815; m(2,1)=-39.507965223996266; m(2,2)=38.099939917456425; m(2,3)=-11.891042873050296; m(2,4)=53.89070563872062; m(2,5)=23.280098882479578; m(2,6)=-5.0318917624474295; m(2,7)=31.50255873280196; m(2,8)=22.629046207699318; m(2,9)=3.5102931218199416; m(2,10)=-95.03021938861154;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), -93.11774348806081); EXPECT_DOUBLE_EQ(mtr(0,1), -14.108330840223957); EXPECT_DOUBLE_EQ(mtr(0,2), 5.8022044043901815); EXPECT_DOUBLE_EQ(mtr(1,0), -98.38480859022877); EXPECT_DOUBLE_EQ(mtr(1,1), -94.81883611699344); EXPECT_DOUBLE_EQ(mtr(1,2), -39.507965223996266); EXPECT_DOUBLE_EQ(mtr(2,0), -70.06261616604155); EXPECT_DOUBLE_EQ(mtr(2,1), -45.060719301725285); EXPECT_DOUBLE_EQ(mtr(2,2), 38.099939917456425); EXPECT_DOUBLE_EQ(mtr(3,0), 84.87535684986423); EXPECT_DOUBLE_EQ(mtr(3,1), -41.383939879963094); EXPECT_DOUBLE_EQ(mtr(3,2), -11.891042873050296); EXPECT_DOUBLE_EQ(mtr(4,0), -99.9818642210925); EXPECT_DOUBLE_EQ(mtr(4,1), 80.36741308691853); EXPECT_DOUBLE_EQ(mtr(4,2), 53.89070563872062); EXPECT_DOUBLE_EQ(mtr(5,0), -25.11185567441916); EXPECT_DOUBLE_EQ(mtr(5,1), -87.50961508738959); EXPECT_DOUBLE_EQ(mtr(5,2), 23.280098882479578); EXPECT_DOUBLE_EQ(mtr(6,0), 8.85590979917103); EXPECT_DOUBLE_EQ(mtr(6,1), -32.65290161505921); EXPECT_DOUBLE_EQ(mtr(6,2), -5.0318917624474295); EXPECT_DOUBLE_EQ(mtr(7,0), 32.717509759851936); EXPECT_DOUBLE_EQ(mtr(7,1), 18.529868291798238); EXPECT_DOUBLE_EQ(mtr(7,2), 31.50255873280196); EXPECT_DOUBLE_EQ(mtr(8,0), 12.677927494307738); EXPECT_DOUBLE_EQ(mtr(8,1), -46.169755352790595); EXPECT_DOUBLE_EQ(mtr(8,2), 22.629046207699318); EXPECT_DOUBLE_EQ(mtr(9,0), -76.92757015087707); EXPECT_DOUBLE_EQ(mtr(9,1), 83.67078184672366); EXPECT_DOUBLE_EQ(mtr(9,2), 3.5102931218199416); EXPECT_DOUBLE_EQ(mtr(10,0), -80.99502606313347); EXPECT_DOUBLE_EQ(mtr(10,1), -30.02053885691531); EXPECT_DOUBLE_EQ(mtr(10,2), -95.03021938861154);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), -93.11774348806081); EXPECT_DOUBLE_EQ(mtc(0,1), -14.108330840223957); EXPECT_DOUBLE_EQ(mtc(0,2), 5.8022044043901815); EXPECT_DOUBLE_EQ(mtc(1,0), -98.38480859022877); EXPECT_DOUBLE_EQ(mtc(1,1), -94.81883611699344); EXPECT_DOUBLE_EQ(mtc(1,2), -39.507965223996266); EXPECT_DOUBLE_EQ(mtc(2,0), -70.06261616604155); EXPECT_DOUBLE_EQ(mtc(2,1), -45.060719301725285); EXPECT_DOUBLE_EQ(mtc(2,2), 38.099939917456425); EXPECT_DOUBLE_EQ(mtc(3,0), 84.87535684986423); EXPECT_DOUBLE_EQ(mtc(3,1), -41.383939879963094); EXPECT_DOUBLE_EQ(mtc(3,2), -11.891042873050296); EXPECT_DOUBLE_EQ(mtc(4,0), -99.9818642210925); EXPECT_DOUBLE_EQ(mtc(4,1), 80.36741308691853); EXPECT_DOUBLE_EQ(mtc(4,2), 53.89070563872062); EXPECT_DOUBLE_EQ(mtc(5,0), -25.11185567441916); EXPECT_DOUBLE_EQ(mtc(5,1), -87.50961508738959); EXPECT_DOUBLE_EQ(mtc(5,2), 23.280098882479578); EXPECT_DOUBLE_EQ(mtc(6,0), 8.85590979917103); EXPECT_DOUBLE_EQ(mtc(6,1), -32.65290161505921); EXPECT_DOUBLE_EQ(mtc(6,2), -5.0318917624474295); EXPECT_DOUBLE_EQ(mtc(7,0), 32.717509759851936); EXPECT_DOUBLE_EQ(mtc(7,1), 18.529868291798238); EXPECT_DOUBLE_EQ(mtc(7,2), 31.50255873280196); EXPECT_DOUBLE_EQ(mtc(8,0), 12.677927494307738); EXPECT_DOUBLE_EQ(mtc(8,1), -46.169755352790595); EXPECT_DOUBLE_EQ(mtc(8,2), 22.629046207699318); EXPECT_DOUBLE_EQ(mtc(9,0), -76.92757015087707); EXPECT_DOUBLE_EQ(mtc(9,1), 83.67078184672366); EXPECT_DOUBLE_EQ(mtc(9,2), 3.5102931218199416); EXPECT_DOUBLE_EQ(mtc(10,0), -80.99502606313347); EXPECT_DOUBLE_EQ(mtc(10,1), -30.02053885691531); EXPECT_DOUBLE_EQ(mtc(10,2), -95.03021938861154);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,19);
    m(0,0)=50.864090811708934; m(0,1)=86.72545584739655; m(0,2)=-59.41096188367827; m(0,3)=-81.01855448213378; m(0,4)=-44.75527142333435; m(0,5)=6.881484559867502; m(0,6)=75.66386662485408; m(0,7)=-56.002568995946575; m(0,8)=-44.600865729883445; m(0,9)=-18.413408652944696; m(0,10)=-97.11569037525811; m(0,11)=53.19666636708692; m(0,12)=-64.58909530248837; m(0,13)=-13.336152508799714; m(0,14)=-69.12350514623267; m(0,15)=56.52730125536351; m(0,16)=89.92552663330136; m(0,17)=94.33106257780301; m(0,18)=76.55814809986282; m(1,0)=14.747374583026797; m(1,1)=-12.087041962746213; m(1,2)=-63.3966872965287; m(1,3)=-11.386504830855642; m(1,4)=-76.29669292020178; m(1,5)=-66.38097797841678; m(1,6)=-20.191218640024687; m(1,7)=-48.05245125934678; m(1,8)=-83.87380388512868; m(1,9)=-21.25569067138788; m(1,10)=4.889708648539596; m(1,11)=-85.80217867074691; m(1,12)=-85.26796006798745; m(1,13)=3.8169098134350605; m(1,14)=73.4920467291056; m(1,15)=98.24187210950205; m(1,16)=-9.878913280704495; m(1,17)=-63.027946780158196; m(1,18)=55.64310458734482; m(2,0)=-75.20410363410058; m(2,1)=45.30781974344674; m(2,2)=-43.85391331821933; m(2,3)=67.45134132003074; m(2,4)=55.35009554124747; m(2,5)=-24.1599830304106; m(2,6)=89.85022708733555; m(2,7)=63.770995127367826; m(2,8)=-7.388429976036122; m(2,9)=8.073425560498507; m(2,10)=76.76129649290999; m(2,11)=-50.19697292034915; m(2,12)=-25.310526646715076; m(2,13)=14.496228473119118; m(2,14)=46.35572803496012; m(2,15)=-43.2905212948518; m(2,16)=72.28250601709692; m(2,17)=59.72857548888601; m(2,18)=39.776820197984875;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), 50.864090811708934); EXPECT_DOUBLE_EQ(mtr(0,1), 14.747374583026797); EXPECT_DOUBLE_EQ(mtr(0,2), -75.20410363410058); EXPECT_DOUBLE_EQ(mtr(1,0), 86.72545584739655); EXPECT_DOUBLE_EQ(mtr(1,1), -12.087041962746213); EXPECT_DOUBLE_EQ(mtr(1,2), 45.30781974344674); EXPECT_DOUBLE_EQ(mtr(2,0), -59.41096188367827); EXPECT_DOUBLE_EQ(mtr(2,1), -63.3966872965287); EXPECT_DOUBLE_EQ(mtr(2,2), -43.85391331821933); EXPECT_DOUBLE_EQ(mtr(3,0), -81.01855448213378); EXPECT_DOUBLE_EQ(mtr(3,1), -11.386504830855642); EXPECT_DOUBLE_EQ(mtr(3,2), 67.45134132003074); EXPECT_DOUBLE_EQ(mtr(4,0), -44.75527142333435); EXPECT_DOUBLE_EQ(mtr(4,1), -76.29669292020178); EXPECT_DOUBLE_EQ(mtr(4,2), 55.35009554124747); EXPECT_DOUBLE_EQ(mtr(5,0), 6.881484559867502); EXPECT_DOUBLE_EQ(mtr(5,1), -66.38097797841678); EXPECT_DOUBLE_EQ(mtr(5,2), -24.1599830304106); EXPECT_DOUBLE_EQ(mtr(6,0), 75.66386662485408); EXPECT_DOUBLE_EQ(mtr(6,1), -20.191218640024687); EXPECT_DOUBLE_EQ(mtr(6,2), 89.85022708733555); EXPECT_DOUBLE_EQ(mtr(7,0), -56.002568995946575); EXPECT_DOUBLE_EQ(mtr(7,1), -48.05245125934678); EXPECT_DOUBLE_EQ(mtr(7,2), 63.770995127367826); EXPECT_DOUBLE_EQ(mtr(8,0), -44.600865729883445); EXPECT_DOUBLE_EQ(mtr(8,1), -83.87380388512868); EXPECT_DOUBLE_EQ(mtr(8,2), -7.388429976036122); EXPECT_DOUBLE_EQ(mtr(9,0), -18.413408652944696); EXPECT_DOUBLE_EQ(mtr(9,1), -21.25569067138788); EXPECT_DOUBLE_EQ(mtr(9,2), 8.073425560498507); EXPECT_DOUBLE_EQ(mtr(10,0), -97.11569037525811); EXPECT_DOUBLE_EQ(mtr(10,1), 4.889708648539596); EXPECT_DOUBLE_EQ(mtr(10,2), 76.76129649290999); EXPECT_DOUBLE_EQ(mtr(11,0), 53.19666636708692); EXPECT_DOUBLE_EQ(mtr(11,1), -85.80217867074691); EXPECT_DOUBLE_EQ(mtr(11,2), -50.19697292034915); EXPECT_DOUBLE_EQ(mtr(12,0), -64.58909530248837); EXPECT_DOUBLE_EQ(mtr(12,1), -85.26796006798745); EXPECT_DOUBLE_EQ(mtr(12,2), -25.310526646715076); EXPECT_DOUBLE_EQ(mtr(13,0), -13.336152508799714); EXPECT_DOUBLE_EQ(mtr(13,1), 3.8169098134350605); EXPECT_DOUBLE_EQ(mtr(13,2), 14.496228473119118); EXPECT_DOUBLE_EQ(mtr(14,0), -69.12350514623267); EXPECT_DOUBLE_EQ(mtr(14,1), 73.4920467291056); EXPECT_DOUBLE_EQ(mtr(14,2), 46.35572803496012); EXPECT_DOUBLE_EQ(mtr(15,0), 56.52730125536351); EXPECT_DOUBLE_EQ(mtr(15,1), 98.24187210950205); EXPECT_DOUBLE_EQ(mtr(15,2), -43.2905212948518); EXPECT_DOUBLE_EQ(mtr(16,0), 89.92552663330136); EXPECT_DOUBLE_EQ(mtr(16,1), -9.878913280704495); EXPECT_DOUBLE_EQ(mtr(16,2), 72.28250601709692); EXPECT_DOUBLE_EQ(mtr(17,0), 94.33106257780301); EXPECT_DOUBLE_EQ(mtr(17,1), -63.027946780158196); EXPECT_DOUBLE_EQ(mtr(17,2), 59.72857548888601); EXPECT_DOUBLE_EQ(mtr(18,0), 76.55814809986282); EXPECT_DOUBLE_EQ(mtr(18,1), 55.64310458734482); EXPECT_DOUBLE_EQ(mtr(18,2), 39.776820197984875);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), 50.864090811708934); EXPECT_DOUBLE_EQ(mtc(0,1), 14.747374583026797); EXPECT_DOUBLE_EQ(mtc(0,2), -75.20410363410058); EXPECT_DOUBLE_EQ(mtc(1,0), 86.72545584739655); EXPECT_DOUBLE_EQ(mtc(1,1), -12.087041962746213); EXPECT_DOUBLE_EQ(mtc(1,2), 45.30781974344674); EXPECT_DOUBLE_EQ(mtc(2,0), -59.41096188367827); EXPECT_DOUBLE_EQ(mtc(2,1), -63.3966872965287); EXPECT_DOUBLE_EQ(mtc(2,2), -43.85391331821933); EXPECT_DOUBLE_EQ(mtc(3,0), -81.01855448213378); EXPECT_DOUBLE_EQ(mtc(3,1), -11.386504830855642); EXPECT_DOUBLE_EQ(mtc(3,2), 67.45134132003074); EXPECT_DOUBLE_EQ(mtc(4,0), -44.75527142333435); EXPECT_DOUBLE_EQ(mtc(4,1), -76.29669292020178); EXPECT_DOUBLE_EQ(mtc(4,2), 55.35009554124747); EXPECT_DOUBLE_EQ(mtc(5,0), 6.881484559867502); EXPECT_DOUBLE_EQ(mtc(5,1), -66.38097797841678); EXPECT_DOUBLE_EQ(mtc(5,2), -24.1599830304106); EXPECT_DOUBLE_EQ(mtc(6,0), 75.66386662485408); EXPECT_DOUBLE_EQ(mtc(6,1), -20.191218640024687); EXPECT_DOUBLE_EQ(mtc(6,2), 89.85022708733555); EXPECT_DOUBLE_EQ(mtc(7,0), -56.002568995946575); EXPECT_DOUBLE_EQ(mtc(7,1), -48.05245125934678); EXPECT_DOUBLE_EQ(mtc(7,2), 63.770995127367826); EXPECT_DOUBLE_EQ(mtc(8,0), -44.600865729883445); EXPECT_DOUBLE_EQ(mtc(8,1), -83.87380388512868); EXPECT_DOUBLE_EQ(mtc(8,2), -7.388429976036122); EXPECT_DOUBLE_EQ(mtc(9,0), -18.413408652944696); EXPECT_DOUBLE_EQ(mtc(9,1), -21.25569067138788); EXPECT_DOUBLE_EQ(mtc(9,2), 8.073425560498507); EXPECT_DOUBLE_EQ(mtc(10,0), -97.11569037525811); EXPECT_DOUBLE_EQ(mtc(10,1), 4.889708648539596); EXPECT_DOUBLE_EQ(mtc(10,2), 76.76129649290999); EXPECT_DOUBLE_EQ(mtc(11,0), 53.19666636708692); EXPECT_DOUBLE_EQ(mtc(11,1), -85.80217867074691); EXPECT_DOUBLE_EQ(mtc(11,2), -50.19697292034915); EXPECT_DOUBLE_EQ(mtc(12,0), -64.58909530248837); EXPECT_DOUBLE_EQ(mtc(12,1), -85.26796006798745); EXPECT_DOUBLE_EQ(mtc(12,2), -25.310526646715076); EXPECT_DOUBLE_EQ(mtc(13,0), -13.336152508799714); EXPECT_DOUBLE_EQ(mtc(13,1), 3.8169098134350605); EXPECT_DOUBLE_EQ(mtc(13,2), 14.496228473119118); EXPECT_DOUBLE_EQ(mtc(14,0), -69.12350514623267); EXPECT_DOUBLE_EQ(mtc(14,1), 73.4920467291056); EXPECT_DOUBLE_EQ(mtc(14,2), 46.35572803496012); EXPECT_DOUBLE_EQ(mtc(15,0), 56.52730125536351); EXPECT_DOUBLE_EQ(mtc(15,1), 98.24187210950205); EXPECT_DOUBLE_EQ(mtc(15,2), -43.2905212948518); EXPECT_DOUBLE_EQ(mtc(16,0), 89.92552663330136); EXPECT_DOUBLE_EQ(mtc(16,1), -9.878913280704495); EXPECT_DOUBLE_EQ(mtc(16,2), 72.28250601709692); EXPECT_DOUBLE_EQ(mtc(17,0), 94.33106257780301); EXPECT_DOUBLE_EQ(mtc(17,1), -63.027946780158196); EXPECT_DOUBLE_EQ(mtc(17,2), 59.72857548888601); EXPECT_DOUBLE_EQ(mtc(18,0), 76.55814809986282); EXPECT_DOUBLE_EQ(mtc(18,1), 55.64310458734482); EXPECT_DOUBLE_EQ(mtc(18,2), 39.776820197984875);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,12);
    m(0,0)=-32.75375661346618; m(0,1)=-13.6098421772042; m(0,2)=-46.86521220477553; m(0,3)=59.00702831249865; m(0,4)=-4.564740481250126; m(0,5)=16.232920948792312; m(0,6)=-65.0828541930055; m(0,7)=-57.88248367433246; m(0,8)=-81.72734394349992; m(0,9)=28.080964462881383; m(0,10)=36.6937632974539; m(0,11)=41.35837714070166; m(1,0)=-47.68004182743719; m(1,1)=-64.19046526329765; m(1,2)=-75.66374889412242; m(1,3)=-82.35155489863575; m(1,4)=-75.40948179339736; m(1,5)=-21.839837867220055; m(1,6)=-7.047883213897393; m(1,7)=-28.576424866142986; m(1,8)=36.45450614900494; m(1,9)=-9.122226758045997; m(1,10)=39.94779111587877; m(1,11)=9.684112064820866; m(2,0)=34.000255287178476; m(2,1)=64.99966038549962; m(2,2)=-11.973673265362649; m(2,3)=80.2812674443403; m(2,4)=95.91223898270886; m(2,5)=-27.634369350449873; m(2,6)=-75.21066302899243; m(2,7)=-20.700089950120855; m(2,8)=86.68513293601455; m(2,9)=75.43854998281424; m(2,10)=-88.06922362937304; m(2,11)=-92.34886576586136;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), -32.75375661346618); EXPECT_DOUBLE_EQ(mtr(0,1), -47.68004182743719); EXPECT_DOUBLE_EQ(mtr(0,2), 34.000255287178476); EXPECT_DOUBLE_EQ(mtr(1,0), -13.6098421772042); EXPECT_DOUBLE_EQ(mtr(1,1), -64.19046526329765); EXPECT_DOUBLE_EQ(mtr(1,2), 64.99966038549962); EXPECT_DOUBLE_EQ(mtr(2,0), -46.86521220477553); EXPECT_DOUBLE_EQ(mtr(2,1), -75.66374889412242); EXPECT_DOUBLE_EQ(mtr(2,2), -11.973673265362649); EXPECT_DOUBLE_EQ(mtr(3,0), 59.00702831249865); EXPECT_DOUBLE_EQ(mtr(3,1), -82.35155489863575); EXPECT_DOUBLE_EQ(mtr(3,2), 80.2812674443403); EXPECT_DOUBLE_EQ(mtr(4,0), -4.564740481250126); EXPECT_DOUBLE_EQ(mtr(4,1), -75.40948179339736); EXPECT_DOUBLE_EQ(mtr(4,2), 95.91223898270886); EXPECT_DOUBLE_EQ(mtr(5,0), 16.232920948792312); EXPECT_DOUBLE_EQ(mtr(5,1), -21.839837867220055); EXPECT_DOUBLE_EQ(mtr(5,2), -27.634369350449873); EXPECT_DOUBLE_EQ(mtr(6,0), -65.0828541930055); EXPECT_DOUBLE_EQ(mtr(6,1), -7.047883213897393); EXPECT_DOUBLE_EQ(mtr(6,2), -75.21066302899243); EXPECT_DOUBLE_EQ(mtr(7,0), -57.88248367433246); EXPECT_DOUBLE_EQ(mtr(7,1), -28.576424866142986); EXPECT_DOUBLE_EQ(mtr(7,2), -20.700089950120855); EXPECT_DOUBLE_EQ(mtr(8,0), -81.72734394349992); EXPECT_DOUBLE_EQ(mtr(8,1), 36.45450614900494); EXPECT_DOUBLE_EQ(mtr(8,2), 86.68513293601455); EXPECT_DOUBLE_EQ(mtr(9,0), 28.080964462881383); EXPECT_DOUBLE_EQ(mtr(9,1), -9.122226758045997); EXPECT_DOUBLE_EQ(mtr(9,2), 75.43854998281424); EXPECT_DOUBLE_EQ(mtr(10,0), 36.6937632974539); EXPECT_DOUBLE_EQ(mtr(10,1), 39.94779111587877); EXPECT_DOUBLE_EQ(mtr(10,2), -88.06922362937304); EXPECT_DOUBLE_EQ(mtr(11,0), 41.35837714070166); EXPECT_DOUBLE_EQ(mtr(11,1), 9.684112064820866); EXPECT_DOUBLE_EQ(mtr(11,2), -92.34886576586136);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), -32.75375661346618); EXPECT_DOUBLE_EQ(mtc(0,1), -47.68004182743719); EXPECT_DOUBLE_EQ(mtc(0,2), 34.000255287178476); EXPECT_DOUBLE_EQ(mtc(1,0), -13.6098421772042); EXPECT_DOUBLE_EQ(mtc(1,1), -64.19046526329765); EXPECT_DOUBLE_EQ(mtc(1,2), 64.99966038549962); EXPECT_DOUBLE_EQ(mtc(2,0), -46.86521220477553); EXPECT_DOUBLE_EQ(mtc(2,1), -75.66374889412242); EXPECT_DOUBLE_EQ(mtc(2,2), -11.973673265362649); EXPECT_DOUBLE_EQ(mtc(3,0), 59.00702831249865); EXPECT_DOUBLE_EQ(mtc(3,1), -82.35155489863575); EXPECT_DOUBLE_EQ(mtc(3,2), 80.2812674443403); EXPECT_DOUBLE_EQ(mtc(4,0), -4.564740481250126); EXPECT_DOUBLE_EQ(mtc(4,1), -75.40948179339736); EXPECT_DOUBLE_EQ(mtc(4,2), 95.91223898270886); EXPECT_DOUBLE_EQ(mtc(5,0), 16.232920948792312); EXPECT_DOUBLE_EQ(mtc(5,1), -21.839837867220055); EXPECT_DOUBLE_EQ(mtc(5,2), -27.634369350449873); EXPECT_DOUBLE_EQ(mtc(6,0), -65.0828541930055); EXPECT_DOUBLE_EQ(mtc(6,1), -7.047883213897393); EXPECT_DOUBLE_EQ(mtc(6,2), -75.21066302899243); EXPECT_DOUBLE_EQ(mtc(7,0), -57.88248367433246); EXPECT_DOUBLE_EQ(mtc(7,1), -28.576424866142986); EXPECT_DOUBLE_EQ(mtc(7,2), -20.700089950120855); EXPECT_DOUBLE_EQ(mtc(8,0), -81.72734394349992); EXPECT_DOUBLE_EQ(mtc(8,1), 36.45450614900494); EXPECT_DOUBLE_EQ(mtc(8,2), 86.68513293601455); EXPECT_DOUBLE_EQ(mtc(9,0), 28.080964462881383); EXPECT_DOUBLE_EQ(mtc(9,1), -9.122226758045997); EXPECT_DOUBLE_EQ(mtc(9,2), 75.43854998281424); EXPECT_DOUBLE_EQ(mtc(10,0), 36.6937632974539); EXPECT_DOUBLE_EQ(mtc(10,1), 39.94779111587877); EXPECT_DOUBLE_EQ(mtc(10,2), -88.06922362937304); EXPECT_DOUBLE_EQ(mtc(11,0), 41.35837714070166); EXPECT_DOUBLE_EQ(mtc(11,1), 9.684112064820866); EXPECT_DOUBLE_EQ(mtc(11,2), -92.34886576586136);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,4);
    m(0,0)=22.388181434139725; m(0,1)=93.58190844668906; m(0,2)=97.5344976392665; m(0,3)=-15.951366725448551; m(1,0)=85.1299035781376; m(1,1)=-45.306199650749754; m(1,2)=-74.3191797133263; m(1,3)=5.358432554579821; m(2,0)=-77.05101934769516; m(2,1)=-41.93156826654785; m(2,2)=-39.80924000570967; m(2,3)=53.52327883467342;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), 22.388181434139725); EXPECT_DOUBLE_EQ(mtr(0,1), 85.1299035781376); EXPECT_DOUBLE_EQ(mtr(0,2), -77.05101934769516); EXPECT_DOUBLE_EQ(mtr(1,0), 93.58190844668906); EXPECT_DOUBLE_EQ(mtr(1,1), -45.306199650749754); EXPECT_DOUBLE_EQ(mtr(1,2), -41.93156826654785); EXPECT_DOUBLE_EQ(mtr(2,0), 97.5344976392665); EXPECT_DOUBLE_EQ(mtr(2,1), -74.3191797133263); EXPECT_DOUBLE_EQ(mtr(2,2), -39.80924000570967); EXPECT_DOUBLE_EQ(mtr(3,0), -15.951366725448551); EXPECT_DOUBLE_EQ(mtr(3,1), 5.358432554579821); EXPECT_DOUBLE_EQ(mtr(3,2), 53.52327883467342);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), 22.388181434139725); EXPECT_DOUBLE_EQ(mtc(0,1), 85.1299035781376); EXPECT_DOUBLE_EQ(mtc(0,2), -77.05101934769516); EXPECT_DOUBLE_EQ(mtc(1,0), 93.58190844668906); EXPECT_DOUBLE_EQ(mtc(1,1), -45.306199650749754); EXPECT_DOUBLE_EQ(mtc(1,2), -41.93156826654785); EXPECT_DOUBLE_EQ(mtc(2,0), 97.5344976392665); EXPECT_DOUBLE_EQ(mtc(2,1), -74.3191797133263); EXPECT_DOUBLE_EQ(mtc(2,2), -39.80924000570967); EXPECT_DOUBLE_EQ(mtc(3,0), -15.951366725448551); EXPECT_DOUBLE_EQ(mtc(3,1), 5.358432554579821); EXPECT_DOUBLE_EQ(mtc(3,2), 53.52327883467342);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,17);
    m(0,0)=41.19222807334356; m(0,1)=-9.647827035990119; m(0,2)=79.08578232010518; m(0,3)=-81.30050511004372; m(0,4)=5.2008331502779725; m(0,5)=-94.16930980955891; m(0,6)=-13.738166181380976; m(0,7)=31.708028058804274; m(0,8)=-98.07812519655093; m(0,9)=-51.718134217817926; m(0,10)=-81.49405897174573; m(0,11)=86.09136014594006; m(0,12)=-23.14506976740256; m(0,13)=76.3616884219812; m(0,14)=60.28344358729666; m(0,15)=-35.34123633864937; m(0,16)=-87.33936780992902; m(1,0)=25.563530352835954; m(1,1)=-43.62388501728416; m(1,2)=0.5379451108277209; m(1,3)=40.11963964000961; m(1,4)=-63.945471933511236; m(1,5)=25.47334071885645; m(1,6)=20.998951793092573; m(1,7)=23.964236092014318; m(1,8)=-53.69611952912465; m(1,9)=-48.45849352784126; m(1,10)=0.03386109792266723; m(1,11)=-43.90344163766924; m(1,12)=-6.698621092523396; m(1,13)=-99.37831178796779; m(1,14)=-9.64088536276411; m(1,15)=3.118955974716698; m(1,16)=-81.5481380106742; m(2,0)=62.07279507925867; m(2,1)=90.29145840318458; m(2,2)=-25.71415288702252; m(2,3)=74.7395459171091; m(2,4)=24.394997421168824; m(2,5)=-58.2301634354434; m(2,6)=-4.768291835922895; m(2,7)=49.704487303266575; m(2,8)=18.65157355854312; m(2,9)=98.9073219636636; m(2,10)=-45.19000115648366; m(2,11)=-45.249286237965315; m(2,12)=97.09143831741096; m(2,13)=-31.80834068260583; m(2,14)=-78.03982967131924; m(2,15)=-14.844621355572116; m(2,16)=-66.64707457523824;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), 41.19222807334356); EXPECT_DOUBLE_EQ(mtr(0,1), 25.563530352835954); EXPECT_DOUBLE_EQ(mtr(0,2), 62.07279507925867); EXPECT_DOUBLE_EQ(mtr(1,0), -9.647827035990119); EXPECT_DOUBLE_EQ(mtr(1,1), -43.62388501728416); EXPECT_DOUBLE_EQ(mtr(1,2), 90.29145840318458); EXPECT_DOUBLE_EQ(mtr(2,0), 79.08578232010518); EXPECT_DOUBLE_EQ(mtr(2,1), 0.5379451108277209); EXPECT_DOUBLE_EQ(mtr(2,2), -25.71415288702252); EXPECT_DOUBLE_EQ(mtr(3,0), -81.30050511004372); EXPECT_DOUBLE_EQ(mtr(3,1), 40.11963964000961); EXPECT_DOUBLE_EQ(mtr(3,2), 74.7395459171091); EXPECT_DOUBLE_EQ(mtr(4,0), 5.2008331502779725); EXPECT_DOUBLE_EQ(mtr(4,1), -63.945471933511236); EXPECT_DOUBLE_EQ(mtr(4,2), 24.394997421168824); EXPECT_DOUBLE_EQ(mtr(5,0), -94.16930980955891); EXPECT_DOUBLE_EQ(mtr(5,1), 25.47334071885645); EXPECT_DOUBLE_EQ(mtr(5,2), -58.2301634354434); EXPECT_DOUBLE_EQ(mtr(6,0), -13.738166181380976); EXPECT_DOUBLE_EQ(mtr(6,1), 20.998951793092573); EXPECT_DOUBLE_EQ(mtr(6,2), -4.768291835922895); EXPECT_DOUBLE_EQ(mtr(7,0), 31.708028058804274); EXPECT_DOUBLE_EQ(mtr(7,1), 23.964236092014318); EXPECT_DOUBLE_EQ(mtr(7,2), 49.704487303266575); EXPECT_DOUBLE_EQ(mtr(8,0), -98.07812519655093); EXPECT_DOUBLE_EQ(mtr(8,1), -53.69611952912465); EXPECT_DOUBLE_EQ(mtr(8,2), 18.65157355854312); EXPECT_DOUBLE_EQ(mtr(9,0), -51.718134217817926); EXPECT_DOUBLE_EQ(mtr(9,1), -48.45849352784126); EXPECT_DOUBLE_EQ(mtr(9,2), 98.9073219636636); EXPECT_DOUBLE_EQ(mtr(10,0), -81.49405897174573); EXPECT_DOUBLE_EQ(mtr(10,1), 0.03386109792266723); EXPECT_DOUBLE_EQ(mtr(10,2), -45.19000115648366); EXPECT_DOUBLE_EQ(mtr(11,0), 86.09136014594006); EXPECT_DOUBLE_EQ(mtr(11,1), -43.90344163766924); EXPECT_DOUBLE_EQ(mtr(11,2), -45.249286237965315); EXPECT_DOUBLE_EQ(mtr(12,0), -23.14506976740256); EXPECT_DOUBLE_EQ(mtr(12,1), -6.698621092523396); EXPECT_DOUBLE_EQ(mtr(12,2), 97.09143831741096); EXPECT_DOUBLE_EQ(mtr(13,0), 76.3616884219812); EXPECT_DOUBLE_EQ(mtr(13,1), -99.37831178796779); EXPECT_DOUBLE_EQ(mtr(13,2), -31.80834068260583); EXPECT_DOUBLE_EQ(mtr(14,0), 60.28344358729666); EXPECT_DOUBLE_EQ(mtr(14,1), -9.64088536276411); EXPECT_DOUBLE_EQ(mtr(14,2), -78.03982967131924); EXPECT_DOUBLE_EQ(mtr(15,0), -35.34123633864937); EXPECT_DOUBLE_EQ(mtr(15,1), 3.118955974716698); EXPECT_DOUBLE_EQ(mtr(15,2), -14.844621355572116); EXPECT_DOUBLE_EQ(mtr(16,0), -87.33936780992902); EXPECT_DOUBLE_EQ(mtr(16,1), -81.5481380106742); EXPECT_DOUBLE_EQ(mtr(16,2), -66.64707457523824);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), 41.19222807334356); EXPECT_DOUBLE_EQ(mtc(0,1), 25.563530352835954); EXPECT_DOUBLE_EQ(mtc(0,2), 62.07279507925867); EXPECT_DOUBLE_EQ(mtc(1,0), -9.647827035990119); EXPECT_DOUBLE_EQ(mtc(1,1), -43.62388501728416); EXPECT_DOUBLE_EQ(mtc(1,2), 90.29145840318458); EXPECT_DOUBLE_EQ(mtc(2,0), 79.08578232010518); EXPECT_DOUBLE_EQ(mtc(2,1), 0.5379451108277209); EXPECT_DOUBLE_EQ(mtc(2,2), -25.71415288702252); EXPECT_DOUBLE_EQ(mtc(3,0), -81.30050511004372); EXPECT_DOUBLE_EQ(mtc(3,1), 40.11963964000961); EXPECT_DOUBLE_EQ(mtc(3,2), 74.7395459171091); EXPECT_DOUBLE_EQ(mtc(4,0), 5.2008331502779725); EXPECT_DOUBLE_EQ(mtc(4,1), -63.945471933511236); EXPECT_DOUBLE_EQ(mtc(4,2), 24.394997421168824); EXPECT_DOUBLE_EQ(mtc(5,0), -94.16930980955891); EXPECT_DOUBLE_EQ(mtc(5,1), 25.47334071885645); EXPECT_DOUBLE_EQ(mtc(5,2), -58.2301634354434); EXPECT_DOUBLE_EQ(mtc(6,0), -13.738166181380976); EXPECT_DOUBLE_EQ(mtc(6,1), 20.998951793092573); EXPECT_DOUBLE_EQ(mtc(6,2), -4.768291835922895); EXPECT_DOUBLE_EQ(mtc(7,0), 31.708028058804274); EXPECT_DOUBLE_EQ(mtc(7,1), 23.964236092014318); EXPECT_DOUBLE_EQ(mtc(7,2), 49.704487303266575); EXPECT_DOUBLE_EQ(mtc(8,0), -98.07812519655093); EXPECT_DOUBLE_EQ(mtc(8,1), -53.69611952912465); EXPECT_DOUBLE_EQ(mtc(8,2), 18.65157355854312); EXPECT_DOUBLE_EQ(mtc(9,0), -51.718134217817926); EXPECT_DOUBLE_EQ(mtc(9,1), -48.45849352784126); EXPECT_DOUBLE_EQ(mtc(9,2), 98.9073219636636); EXPECT_DOUBLE_EQ(mtc(10,0), -81.49405897174573); EXPECT_DOUBLE_EQ(mtc(10,1), 0.03386109792266723); EXPECT_DOUBLE_EQ(mtc(10,2), -45.19000115648366); EXPECT_DOUBLE_EQ(mtc(11,0), 86.09136014594006); EXPECT_DOUBLE_EQ(mtc(11,1), -43.90344163766924); EXPECT_DOUBLE_EQ(mtc(11,2), -45.249286237965315); EXPECT_DOUBLE_EQ(mtc(12,0), -23.14506976740256); EXPECT_DOUBLE_EQ(mtc(12,1), -6.698621092523396); EXPECT_DOUBLE_EQ(mtc(12,2), 97.09143831741096); EXPECT_DOUBLE_EQ(mtc(13,0), 76.3616884219812); EXPECT_DOUBLE_EQ(mtc(13,1), -99.37831178796779); EXPECT_DOUBLE_EQ(mtc(13,2), -31.80834068260583); EXPECT_DOUBLE_EQ(mtc(14,0), 60.28344358729666); EXPECT_DOUBLE_EQ(mtc(14,1), -9.64088536276411); EXPECT_DOUBLE_EQ(mtc(14,2), -78.03982967131924); EXPECT_DOUBLE_EQ(mtc(15,0), -35.34123633864937); EXPECT_DOUBLE_EQ(mtc(15,1), 3.118955974716698); EXPECT_DOUBLE_EQ(mtc(15,2), -14.844621355572116); EXPECT_DOUBLE_EQ(mtc(16,0), -87.33936780992902); EXPECT_DOUBLE_EQ(mtc(16,1), -81.5481380106742); EXPECT_DOUBLE_EQ(mtc(16,2), -66.64707457523824);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,11);
    m(0,0)=-44.385915446696366; m(0,1)=28.793505461441015; m(0,2)=71.2114986465838; m(0,3)=51.14773880111491; m(0,4)=-7.958682467368476; m(0,5)=-83.09905041318346; m(0,6)=-22.191719125506793; m(0,7)=-2.2844026553076873; m(0,8)=-85.89049887253955; m(0,9)=7.359151344016439; m(0,10)=-12.836173824817394; m(1,0)=60.864624834962456; m(1,1)=55.31797716120735; m(1,2)=54.86505134841502; m(1,3)=1.2088001265842365; m(1,4)=51.71783583087824; m(1,5)=-97.7984372019131; m(1,6)=-21.276052450577225; m(1,7)=-38.9853136735308; m(1,8)=-83.47696130822689; m(1,9)=3.197398523431062; m(1,10)=-81.03476411018644; m(2,0)=78.17495315633076; m(2,1)=-81.81693970564498; m(2,2)=-30.34183030075195; m(2,3)=-15.609525205781651; m(2,4)=-27.0093291175411; m(2,5)=42.95413233280735; m(2,6)=-72.61359152573652; m(2,7)=78.95917814822454; m(2,8)=-83.12124753315223; m(2,9)=74.1286028999458; m(2,10)=-87.09605709830836;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), -44.385915446696366); EXPECT_DOUBLE_EQ(mtr(0,1), 60.864624834962456); EXPECT_DOUBLE_EQ(mtr(0,2), 78.17495315633076); EXPECT_DOUBLE_EQ(mtr(1,0), 28.793505461441015); EXPECT_DOUBLE_EQ(mtr(1,1), 55.31797716120735); EXPECT_DOUBLE_EQ(mtr(1,2), -81.81693970564498); EXPECT_DOUBLE_EQ(mtr(2,0), 71.2114986465838); EXPECT_DOUBLE_EQ(mtr(2,1), 54.86505134841502); EXPECT_DOUBLE_EQ(mtr(2,2), -30.34183030075195); EXPECT_DOUBLE_EQ(mtr(3,0), 51.14773880111491); EXPECT_DOUBLE_EQ(mtr(3,1), 1.2088001265842365); EXPECT_DOUBLE_EQ(mtr(3,2), -15.609525205781651); EXPECT_DOUBLE_EQ(mtr(4,0), -7.958682467368476); EXPECT_DOUBLE_EQ(mtr(4,1), 51.71783583087824); EXPECT_DOUBLE_EQ(mtr(4,2), -27.0093291175411); EXPECT_DOUBLE_EQ(mtr(5,0), -83.09905041318346); EXPECT_DOUBLE_EQ(mtr(5,1), -97.7984372019131); EXPECT_DOUBLE_EQ(mtr(5,2), 42.95413233280735); EXPECT_DOUBLE_EQ(mtr(6,0), -22.191719125506793); EXPECT_DOUBLE_EQ(mtr(6,1), -21.276052450577225); EXPECT_DOUBLE_EQ(mtr(6,2), -72.61359152573652); EXPECT_DOUBLE_EQ(mtr(7,0), -2.2844026553076873); EXPECT_DOUBLE_EQ(mtr(7,1), -38.9853136735308); EXPECT_DOUBLE_EQ(mtr(7,2), 78.95917814822454); EXPECT_DOUBLE_EQ(mtr(8,0), -85.89049887253955); EXPECT_DOUBLE_EQ(mtr(8,1), -83.47696130822689); EXPECT_DOUBLE_EQ(mtr(8,2), -83.12124753315223); EXPECT_DOUBLE_EQ(mtr(9,0), 7.359151344016439); EXPECT_DOUBLE_EQ(mtr(9,1), 3.197398523431062); EXPECT_DOUBLE_EQ(mtr(9,2), 74.1286028999458); EXPECT_DOUBLE_EQ(mtr(10,0), -12.836173824817394); EXPECT_DOUBLE_EQ(mtr(10,1), -81.03476411018644); EXPECT_DOUBLE_EQ(mtr(10,2), -87.09605709830836);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), -44.385915446696366); EXPECT_DOUBLE_EQ(mtc(0,1), 60.864624834962456); EXPECT_DOUBLE_EQ(mtc(0,2), 78.17495315633076); EXPECT_DOUBLE_EQ(mtc(1,0), 28.793505461441015); EXPECT_DOUBLE_EQ(mtc(1,1), 55.31797716120735); EXPECT_DOUBLE_EQ(mtc(1,2), -81.81693970564498); EXPECT_DOUBLE_EQ(mtc(2,0), 71.2114986465838); EXPECT_DOUBLE_EQ(mtc(2,1), 54.86505134841502); EXPECT_DOUBLE_EQ(mtc(2,2), -30.34183030075195); EXPECT_DOUBLE_EQ(mtc(3,0), 51.14773880111491); EXPECT_DOUBLE_EQ(mtc(3,1), 1.2088001265842365); EXPECT_DOUBLE_EQ(mtc(3,2), -15.609525205781651); EXPECT_DOUBLE_EQ(mtc(4,0), -7.958682467368476); EXPECT_DOUBLE_EQ(mtc(4,1), 51.71783583087824); EXPECT_DOUBLE_EQ(mtc(4,2), -27.0093291175411); EXPECT_DOUBLE_EQ(mtc(5,0), -83.09905041318346); EXPECT_DOUBLE_EQ(mtc(5,1), -97.7984372019131); EXPECT_DOUBLE_EQ(mtc(5,2), 42.95413233280735); EXPECT_DOUBLE_EQ(mtc(6,0), -22.191719125506793); EXPECT_DOUBLE_EQ(mtc(6,1), -21.276052450577225); EXPECT_DOUBLE_EQ(mtc(6,2), -72.61359152573652); EXPECT_DOUBLE_EQ(mtc(7,0), -2.2844026553076873); EXPECT_DOUBLE_EQ(mtc(7,1), -38.9853136735308); EXPECT_DOUBLE_EQ(mtc(7,2), 78.95917814822454); EXPECT_DOUBLE_EQ(mtc(8,0), -85.89049887253955); EXPECT_DOUBLE_EQ(mtc(8,1), -83.47696130822689); EXPECT_DOUBLE_EQ(mtc(8,2), -83.12124753315223); EXPECT_DOUBLE_EQ(mtc(9,0), 7.359151344016439); EXPECT_DOUBLE_EQ(mtc(9,1), 3.197398523431062); EXPECT_DOUBLE_EQ(mtc(9,2), 74.1286028999458); EXPECT_DOUBLE_EQ(mtc(10,0), -12.836173824817394); EXPECT_DOUBLE_EQ(mtc(10,1), -81.03476411018644); EXPECT_DOUBLE_EQ(mtc(10,2), -87.09605709830836);
  }
  {
    Matrix<double, 3, -1, ColumnStorage> m; m.resize(3,13);
    m(0,0)=34.31779800584553; m(0,1)=55.012671528082535; m(0,2)=-65.60345720231766; m(0,3)=-49.33507330341831; m(0,4)=35.740472597306024; m(0,5)=-27.244537951759142; m(0,6)=-81.37232307786655; m(0,7)=-87.31193616540006; m(0,8)=-5.83409003190927; m(0,9)=-45.378839818473146; m(0,10)=13.591067289968066; m(0,11)=-1.8050737816002709; m(0,12)=-10.17822356404281; m(1,0)=40.228268179061644; m(1,1)=58.01140683613005; m(1,2)=29.372511191065428; m(1,3)=-37.3106613209734; m(1,4)=18.023315391960494; m(1,5)=-55.244525355517226; m(1,6)=69.99758013964228; m(1,7)=82.02623771984915; m(1,8)=-64.53475570928768; m(1,9)=-97.60369460707761; m(1,10)=-48.10912690487281; m(1,11)=16.579050141498982; m(1,12)=-90.38293447062478; m(2,0)=64.59094074464039; m(2,1)=-89.43102363362598; m(2,2)=-17.926705119412233; m(2,3)=17.91871856018419; m(2,4)=2.0478456339645135; m(2,5)=10.226792439717272; m(2,6)=54.74936789970178; m(2,7)=9.05745310427855; m(2,8)=-12.151078723792182; m(2,9)=-39.87407068066251; m(2,10)=-84.05092290948681; m(2,11)=22.862379023254604; m(2,12)=10.207549229939204;
    Matrix<double, -1, 3, RowStorage> mtr = m.transpose<double, -1, 3, RowStorage>();
    EXPECT_DOUBLE_EQ(mtr(0,0), 34.31779800584553); EXPECT_DOUBLE_EQ(mtr(0,1), 40.228268179061644); EXPECT_DOUBLE_EQ(mtr(0,2), 64.59094074464039); EXPECT_DOUBLE_EQ(mtr(1,0), 55.012671528082535); EXPECT_DOUBLE_EQ(mtr(1,1), 58.01140683613005); EXPECT_DOUBLE_EQ(mtr(1,2), -89.43102363362598); EXPECT_DOUBLE_EQ(mtr(2,0), -65.60345720231766); EXPECT_DOUBLE_EQ(mtr(2,1), 29.372511191065428); EXPECT_DOUBLE_EQ(mtr(2,2), -17.926705119412233); EXPECT_DOUBLE_EQ(mtr(3,0), -49.33507330341831); EXPECT_DOUBLE_EQ(mtr(3,1), -37.3106613209734); EXPECT_DOUBLE_EQ(mtr(3,2), 17.91871856018419); EXPECT_DOUBLE_EQ(mtr(4,0), 35.740472597306024); EXPECT_DOUBLE_EQ(mtr(4,1), 18.023315391960494); EXPECT_DOUBLE_EQ(mtr(4,2), 2.0478456339645135); EXPECT_DOUBLE_EQ(mtr(5,0), -27.244537951759142); EXPECT_DOUBLE_EQ(mtr(5,1), -55.244525355517226); EXPECT_DOUBLE_EQ(mtr(5,2), 10.226792439717272); EXPECT_DOUBLE_EQ(mtr(6,0), -81.37232307786655); EXPECT_DOUBLE_EQ(mtr(6,1), 69.99758013964228); EXPECT_DOUBLE_EQ(mtr(6,2), 54.74936789970178); EXPECT_DOUBLE_EQ(mtr(7,0), -87.31193616540006); EXPECT_DOUBLE_EQ(mtr(7,1), 82.02623771984915); EXPECT_DOUBLE_EQ(mtr(7,2), 9.05745310427855); EXPECT_DOUBLE_EQ(mtr(8,0), -5.83409003190927); EXPECT_DOUBLE_EQ(mtr(8,1), -64.53475570928768); EXPECT_DOUBLE_EQ(mtr(8,2), -12.151078723792182); EXPECT_DOUBLE_EQ(mtr(9,0), -45.378839818473146); EXPECT_DOUBLE_EQ(mtr(9,1), -97.60369460707761); EXPECT_DOUBLE_EQ(mtr(9,2), -39.87407068066251); EXPECT_DOUBLE_EQ(mtr(10,0), 13.591067289968066); EXPECT_DOUBLE_EQ(mtr(10,1), -48.10912690487281); EXPECT_DOUBLE_EQ(mtr(10,2), -84.05092290948681); EXPECT_DOUBLE_EQ(mtr(11,0), -1.8050737816002709); EXPECT_DOUBLE_EQ(mtr(11,1), 16.579050141498982); EXPECT_DOUBLE_EQ(mtr(11,2), 22.862379023254604); EXPECT_DOUBLE_EQ(mtr(12,0), -10.17822356404281); EXPECT_DOUBLE_EQ(mtr(12,1), -90.38293447062478); EXPECT_DOUBLE_EQ(mtr(12,2), 10.207549229939204);
    Matrix<double, -1, 3, ColumnStorage> mtc = m.transpose<double, -1, 3, ColumnStorage>();
    EXPECT_DOUBLE_EQ(mtc(0,0), 34.31779800584553); EXPECT_DOUBLE_EQ(mtc(0,1), 40.228268179061644); EXPECT_DOUBLE_EQ(mtc(0,2), 64.59094074464039); EXPECT_DOUBLE_EQ(mtc(1,0), 55.012671528082535); EXPECT_DOUBLE_EQ(mtc(1,1), 58.01140683613005); EXPECT_DOUBLE_EQ(mtc(1,2), -89.43102363362598); EXPECT_DOUBLE_EQ(mtc(2,0), -65.60345720231766); EXPECT_DOUBLE_EQ(mtc(2,1), 29.372511191065428); EXPECT_DOUBLE_EQ(mtc(2,2), -17.926705119412233); EXPECT_DOUBLE_EQ(mtc(3,0), -49.33507330341831); EXPECT_DOUBLE_EQ(mtc(3,1), -37.3106613209734); EXPECT_DOUBLE_EQ(mtc(3,2), 17.91871856018419); EXPECT_DOUBLE_EQ(mtc(4,0), 35.740472597306024); EXPECT_DOUBLE_EQ(mtc(4,1), 18.023315391960494); EXPECT_DOUBLE_EQ(mtc(4,2), 2.0478456339645135); EXPECT_DOUBLE_EQ(mtc(5,0), -27.244537951759142); EXPECT_DOUBLE_EQ(mtc(5,1), -55.244525355517226); EXPECT_DOUBLE_EQ(mtc(5,2), 10.226792439717272); EXPECT_DOUBLE_EQ(mtc(6,0), -81.37232307786655); EXPECT_DOUBLE_EQ(mtc(6,1), 69.99758013964228); EXPECT_DOUBLE_EQ(mtc(6,2), 54.74936789970178); EXPECT_DOUBLE_EQ(mtc(7,0), -87.31193616540006); EXPECT_DOUBLE_EQ(mtc(7,1), 82.02623771984915); EXPECT_DOUBLE_EQ(mtc(7,2), 9.05745310427855); EXPECT_DOUBLE_EQ(mtc(8,0), -5.83409003190927); EXPECT_DOUBLE_EQ(mtc(8,1), -64.53475570928768); EXPECT_DOUBLE_EQ(mtc(8,2), -12.151078723792182); EXPECT_DOUBLE_EQ(mtc(9,0), -45.378839818473146); EXPECT_DOUBLE_EQ(mtc(9,1), -97.60369460707761); EXPECT_DOUBLE_EQ(mtc(9,2), -39.87407068066251); EXPECT_DOUBLE_EQ(mtc(10,0), 13.591067289968066); EXPECT_DOUBLE_EQ(mtc(10,1), -48.10912690487281); EXPECT_DOUBLE_EQ(mtc(10,2), -84.05092290948681); EXPECT_DOUBLE_EQ(mtc(11,0), -1.8050737816002709); EXPECT_DOUBLE_EQ(mtc(11,1), 16.579050141498982); EXPECT_DOUBLE_EQ(mtc(11,2), 22.862379023254604); EXPECT_DOUBLE_EQ(mtc(12,0), -10.17822356404281); EXPECT_DOUBLE_EQ(mtc(12,1), -90.38293447062478); EXPECT_DOUBLE_EQ(mtc(12,2), 10.207549229939204);
  }
}
TEST(TestLabo1Extra, AffectationBySubMatrix)
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m.setIdentity();
    EXPECT_DOUBLE_EQ(m(0,0),1); EXPECT_DOUBLE_EQ(m(0,1),0); EXPECT_DOUBLE_EQ(m(0,2),0); EXPECT_DOUBLE_EQ(m(0,3),0); EXPECT_DOUBLE_EQ(m(1,0),0); EXPECT_DOUBLE_EQ(m(1,1),1); EXPECT_DOUBLE_EQ(m(1,2),0); EXPECT_DOUBLE_EQ(m(1,3),0); EXPECT_DOUBLE_EQ(m(2,0),0); EXPECT_DOUBLE_EQ(m(2,1),0); EXPECT_DOUBLE_EQ(m(2,2),1); EXPECT_DOUBLE_EQ(m(2,3),0); EXPECT_DOUBLE_EQ(m(3,0),0); EXPECT_DOUBLE_EQ(m(3,1),0); EXPECT_DOUBLE_EQ(m(3,2),0); EXPECT_DOUBLE_EQ(m(3,3),1);
    Matrix<double, 4, 1, ColumnStorage> c;
    c(0,0) = 1.0; c(1,0) = 2.0; c(2,0) = 3.0; c(3,0) = 4.0;
    m.block(0,0,4,1) = c;
    m.block(0,1,4,1) = c;
    m.block(0,2,4,1) = c;
    m.block(0,3,4,1) = c;
    EXPECT_DOUBLE_EQ(m(0,0),1); EXPECT_DOUBLE_EQ(m(0,1),1); EXPECT_DOUBLE_EQ(m(0,2),1); EXPECT_DOUBLE_EQ(m(0,3),1); EXPECT_DOUBLE_EQ(m(1,0),2); EXPECT_DOUBLE_EQ(m(1,1),2); EXPECT_DOUBLE_EQ(m(1,2),2); EXPECT_DOUBLE_EQ(m(1,3),2); EXPECT_DOUBLE_EQ(m(2,0),3); EXPECT_DOUBLE_EQ(m(2,1),3); EXPECT_DOUBLE_EQ(m(2,2),3); EXPECT_DOUBLE_EQ(m(2,3),3); EXPECT_DOUBLE_EQ(m(3,0),4); EXPECT_DOUBLE_EQ(m(3,1),4); EXPECT_DOUBLE_EQ(m(3,2),4); EXPECT_DOUBLE_EQ(m(3,3),4);
    Matrix<double, 2, 2, ColumnStorage> b;
    b(0,0) = 0.0; b(1,0) = 1.0; b(0,1) = 2.0; b(1,1) = 3.0;
    m.block(0,0,2,2) = b;
    m.block(2,0,2,2) = b;
    m.block(0,2,2,2) = b;
    m.block(2,2,2,2) = b;
    EXPECT_DOUBLE_EQ(m(0,0),0); EXPECT_DOUBLE_EQ(m(0,1),2); EXPECT_DOUBLE_EQ(m(0,2),0); EXPECT_DOUBLE_EQ(m(0,3),2); EXPECT_DOUBLE_EQ(m(1,0),1); EXPECT_DOUBLE_EQ(m(1,1),3); EXPECT_DOUBLE_EQ(m(1,2),1); EXPECT_DOUBLE_EQ(m(1,3),3); EXPECT_DOUBLE_EQ(m(2,0),0); EXPECT_DOUBLE_EQ(m(2,1),2); EXPECT_DOUBLE_EQ(m(2,2),0); EXPECT_DOUBLE_EQ(m(2,3),2); EXPECT_DOUBLE_EQ(m(3,0),1); EXPECT_DOUBLE_EQ(m(3,1),3); EXPECT_DOUBLE_EQ(m(3,2),1); EXPECT_DOUBLE_EQ(m(3,3),3);
  }
TEST(TestLabo1Extra, ProductMatrixMatrix){
  {
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-42.85853815815028; m33(0,1)=66.54907256064595; m33(0,2)=88.20800998997993; m33(1,0)=78.78655471073938; m33(1,1)=-93.23301540329196; m33(1,2)=-7.765917970369074; m33(2,0)=-68.83995705708816; m33(2,1)=95.7827812371988; m33(2,2)=55.56967487929728;
    Matrix<double, 3,-1, ColumnStorage> m3n; m3n.resize(3, 17);
    m3n(0,0)=98.84849177151472; m3n(0,1)=7.616459277345598; m3n(0,2)=-66.25405738311306; m3n(0,3)=23.168945978514714; m3n(0,4)=43.111670478613064; m3n(0,5)=-91.26472722151308; m3n(0,6)=58.799921549502045; m3n(0,7)=-79.00590009301997; m3n(0,8)=8.175644916169446; m3n(0,9)=-9.246750810010894; m3n(0,10)=-92.31747578992069; m3n(0,11)=-77.14763902860831; m3n(0,12)=30.60013582619169; m3n(0,13)=-81.21738381059589; m3n(0,14)=9.01104917267756; m3n(0,15)=69.8520925048092; m3n(0,16)=-68.44398850399287; m3n(1,0)=91.06123834199835; m3n(1,1)=88.26282996012128; m3n(1,2)=-78.19439306157841; m3n(1,3)=85.31799207676045; m3n(1,4)=98.39056524349868; m3n(1,5)=50.66397250379288; m3n(1,6)=-38.178869856553874; m3n(1,7)=46.914583875717454; m3n(1,8)=-57.64634980444183; m3n(1,9)=-85.23707366097094; m3n(1,10)=-58.73432466348816; m3n(1,11)=-97.11588169308361; m3n(1,12)=91.37234777548545; m3n(1,13)=-15.305838304523945; m3n(1,14)=-54.32748707938187; m3n(1,15)=63.25957176670843; m3n(1,16)=-20.157582821972; m3n(2,0)=-55.37589619232166; m3n(2,1)=-85.19018928563406; m3n(2,2)=65.07835681188135; m3n(2,3)=-45.12845473673901; m3n(2,4)=55.97276353112065; m3n(2,5)=-65.21832541713073; m3n(2,6)=-95.45291500172213; m3n(2,7)=-66.39650172855067; m3n(2,8)=43.89239679211968; m3n(2,9)=97.4566997349209; m3n(2,10)=-65.4978919639202; m3n(2,11)=-9.960700506808678; m3n(2,12)=49.88010716382348; m3n(2,13)=-7.9972564273441265; m3n(2,14)=65.31402843529702; m3n(2,15)=-65.64401302836522; m3n(2,16)=-77.78229500169263;
    Matrix<double,-1, 3, ColumnStorage> mn3; mn3.resize(17, 3);
    mn3(0,0)=-70.06495803116024; mn3(0,1)=-38.4052971681502; mn3(0,2)=70.00505328857432; mn3(1,0)=-7.712731705623426; mn3(1,1)=96.2504558520979; mn3(1,2)=68.21833316488889; mn3(2,0)=-52.365205166752645; mn3(2,1)=93.5774089480552; mn3(2,2)=55.0627474373438; mn3(3,0)=-37.35275380230454; mn3(3,1)=-98.75396899795616; mn3(3,2)=-41.33822205424082; mn3(4,0)=5.532115269200162; mn3(4,1)=-47.86474218475245; mn3(4,2)=-19.75569424708938; mn3(5,0)=-71.4996663689414; mn3(5,1)=-69.79079068760774; mn3(5,2)=-53.30539201408524; mn3(6,0)=-90.72900451637426; mn3(6,1)=58.60873643632874; mn3(6,2)=-47.47421380061001; mn3(7,0)=90.31636261457794; mn3(7,1)=-31.085103323381702; mn3(7,2)=16.60245817495023; mn3(8,0)=-0.3433411187488531; mn3(8,1)=78.20068622396025; mn3(8,2)=-74.283846658339; mn3(9,0)=-65.3376828056848; mn3(9,1)=52.148554540439505; mn3(9,2)=97.05571085188092; mn3(10,0)=-18.161241511542286; mn3(10,1)=79.57012773110202; mn3(10,2)=-51.97347813795974; mn3(11,0)=-30.3051081489661; mn3(11,1)=61.43661493037595; mn3(11,2)=3.182556381678367; mn3(12,0)=0.29231377711404605; mn3(12,1)=-77.8737699159633; mn3(12,2)=90.21085369002415; mn3(13,0)=76.36781301329302; mn3(13,1)=-49.9298460978546; mn3(13,2)=-59.56374099116963; mn3(14,0)=-86.73178311153507; mn3(14,1)=-72.46273083964854; mn3(14,2)=87.70236334913108; mn3(15,0)=-69.97691465430029; mn3(15,1)=-6.083155148477289; mn3(15,2)=67.14950349479145; mn3(16,0)=-4.539481426385606; mn3(16,1)=-35.20945344901385; mn3(16,2)=29.294188819583127;
    Matrix<double, 3, -1, ColumnStorage> A = m33 * m3n;
    EXPECT_NEAR(A(0,0), -3061.058503117544, 1e-3);
    EXPECT_NEAR(A(0,1), -1967.0779026995376, 1e-3);
    EXPECT_NEAR(A(0,2), 3376.220056589686, 1e-3);
    EXPECT_NEAR(A(0,3), 704.1549038900209, 1e-3);
    EXPECT_NEAR(A(0,4), 9637.343776123198, 1e-3);
    EXPECT_NEAR(A(0,5), 1530.3344765578493, 1e-3);
    EXPECT_NEAR(A(0,6), -13480.558741837449, 1e-3);
    EXPECT_NEAR(A(0,7), 651.49614258162, 1e-3);
    EXPECT_NEAR(A(0,8), -315.0463308758582, 1e-3);
    EXPECT_NEAR(A(0,9), 3320.3155663170573, 1e-3);
    EXPECT_NEAR(A(0,10), -5729.561483700679, 1e-3);
    EXPECT_NEAR(A(0,11), -4035.1503962770935, 1e-3);
    EXPECT_NEAR(A(0,12), 9169.092904203751, 1e-3);
    EXPECT_NEAR(A(0,13), 1756.8469243866807, 1e-3);
    EXPECT_NEAR(A(0,14), 1759.5761982110032, 1e-3);
    EXPECT_NEAR(A(0,15), -4574.220497374351, 1e-3);
    EXPECT_NEAR(A(0,16), -5269.080603425136, 1e-3);
    EXPECT_NEAR(A(1,0), -271.9370645866128, 1e-3);
    EXPECT_NEAR(A(1,1), -6967.35517778097, 1e-3);
    EXPECT_NEAR(A(1,2), 1564.976955290622, 1e-3);
    EXPECT_NEAR(A(1,3), -5778.588361929104, 1e-3);
    EXPECT_NEAR(A(1,4), -6211.308990208648, 1e-3);
    EXPECT_NEAR(A(1,5), -11407.508187882253, 1e-3);
    EXPECT_NEAR(A(1,6), 8933.453905499378, 1e-3);
    EXPECT_NEAR(A(1,7), -10082.961005330333, 1e-3);
    EXPECT_NEAR(A(1,8), 5677.809161733952, 1e-3);
    EXPECT_NEAR(A(1,9), 6461.549027171052, 1e-3);
    EXPECT_NEAR(A(1,10), -1288.7464048031022, 1e-3);
    EXPECT_NEAR(A(1,11), 3053.563793727012, 1e-3);
    EXPECT_NEAR(A(1,12), -6495.4050527479485, 1e-3);
    EXPECT_NEAR(A(1,13), -4909.722357247894, 1e-3);
    EXPECT_NEAR(A(1,14), 5267.841571195608, 1e-3);
    EXPECT_NEAR(A(1,15), 115.3110992827214, 1e-3);
    EXPECT_NEAR(A(1,16), -2909.0628926268096, 1e-3);
    EXPECT_NEAR(A(2,0), -1159.847804965988, 1e-3);
    EXPECT_NEAR(A(2,1), 3195.7514823583624, 1e-3);
    EXPECT_NEAR(A(2,2), 687.6331502338052, 1e-3);
    EXPECT_NEAR(A(2,3), 4069.2717669407884, 1e-3);
    EXPECT_NEAR(A(2,4), 9566.704713635474, 1e-3);
    EXPECT_NEAR(A(2,5), 7511.23495809191, 1e-3);
    EXPECT_NEAR(A(2,6), -13008.949866708554, 1e-3);
    EXPECT_NEAR(A(2,7), 6242.740079683891, 1e-3);
    EXPECT_NEAR(A(2,8), -3645.252537973794, 1e-3);
    EXPECT_NEAR(A(2,9), -2112.060932010182, 1e-3);
    EXPECT_NEAR(A(2,10), -2910.302463074964, 1e-3);
    EXPECT_NEAR(A(2,11), -4544.701981814583, 1e-3);
    EXPECT_NEAR(A(2,12), 9417.206899930648, 1e-3);
    EXPECT_NEAR(A(2,13), 3680.5605122424286, 1e-3);
    EXPECT_NEAR(A(2,14), -2194.478722970978, 1e-3);
    EXPECT_NEAR(A(2,15), -2397.2537864479136, 1e-3);
    EXPECT_NEAR(A(2,16), -1541.4049608866055, 1e-3);
    Matrix<double, -1, 3, ColumnStorage> B = mn3 * m33;
    EXPECT_NEAR(B(0,0), -4842.084231357614, 1e-3);
    EXPECT_NEAR(B(0,1), 5623.162391109814, 1e-3);
    EXPECT_NEAR(B(0,2), -1991.8800793706498, 1e-3);
    EXPECT_NEAR(B(1,0), 3217.65108645687, 1e-3);
    EXPECT_NEAR(B(1,1), -2952.8536930519476, 1e-3);
    EXPECT_NEAR(B(1,2), 2363.0727346827703, 1e-3);
    EXPECT_NEAR(B(2,0), 5826.420624541781, 1e-3);
    EXPECT_NEAR(B(2,1), -6935.296756039285, 1e-3);
    EXPECT_NEAR(B(2,2), -2285.9260491924883, 1e-3);
    EXPECT_NEAR(B(3,0), -3333.879126181759, 1e-3);
    EXPECT_NEAR(B(3,1), 2761.8493098370586, 1e-3);
    EXPECT_NEAR(B(3,2), -4825.0484177028, 1e-3);
    EXPECT_NEAR(B(4,0), -2648.2153586121385, 1e-3);
    EXPECT_NEAR(B(4,1), 2938.4760455915334, 1e-3);
    EXPECT_NEAR(B(4,2), -238.1269659145804, 1e-3);
    EXPECT_NEAR(B(5,0), 1235.3361277142003, 1e-3);
    EXPECT_NEAR(B(5,1), -3357.1693241112525, 1e-3);
    EXPECT_NEAR(B(5,2), -8727.017033320863, 1e-3);
    EXPECT_NEAR(B(6,0), 11774.215761237148, 1e-3);
    EXPECT_NEAR(B(6,1), -16049.412566722915, 1e-3);
    EXPECT_NEAR(B(6,2), -11096.302202322931, 1e-3);
    EXPECT_NEAR(B(7,0), -7462.8279749045005, 1e-3);
    EXPECT_NEAR(B(7,1), 10498.857705383929, 1e-3);
    EXPECT_NEAR(B(7,2), 9130.624181254285, 1e-3);
    EXPECT_NEAR(B(8,0), 11289.574556035945, 1e-3);
    EXPECT_NEAR(B(8,1), -14428.848250224464, 1e-3);
    EXPECT_NEAR(B(8,2), -4765.514758861888, 1e-3);
    EXPECT_NEAR(B(9,0), 227.57154989022771, 1e-3);
    EXPECT_NEAR(B(9,1), 86.13673763833692, 1e-3);
    EXPECT_NEAR(B(9,2), -774.9340772622483, 1e-3);
    EXPECT_NEAR(B(10,0), 10625.272487273467, 1e-3);
    EXPECT_NEAR(B(10,1), -13605.34101016332, 1e-3);
    EXPECT_NEAR(B(10,2), -5108.051340004776, 1e-3);
    EXPECT_NEAR(B(11,0), 5920.124812797527, 1e-3);
    EXPECT_NEAR(B(11,1), -7439.863605612276, 1e-3);
    EXPECT_NEAR(B(11,2), -2973.411370862976, 1e-3);
    EXPECT_NEAR(B(12,0), -12358.045469290693, 1e-3);
    EXPECT_NEAR(B(12,1), 15920.50606506359, 1e-3);
    EXPECT_NEAR(B(12,2), 5643.533535921148, 1e-3);
    EXPECT_NEAR(B(13,0), -3106.448007380484, 1e-3);
    EXPECT_NEAR(B(13,1), 4032.1364668183815, 1e-3);
    EXPECT_NEAR(B(13,2), 3814.066180784592, 1e-3);
    EXPECT_NEAR(B(14,0), -8029.318398536738, 1e-3);
    EXPECT_NEAR(B(14,1), 9384.375455588943, 1e-3);
    EXPECT_NEAR(B(14,2), -2214.1065500842024, 1e-3);
    EXPECT_NEAR(B(15,0), -2102.7315060047017, 1e-3);
    EXPECT_NEAR(B(15,1), 2342.0183301875645, 1e-3);
    EXPECT_NEAR(B(15,2), -2393.807025498593, 1e-3);
    EXPECT_NEAR(B(16,0), -4596.086692927333, 1e-3);
    EXPECT_NEAR(B(16,1), 5786.464116148485, 1e-3);
    EXPECT_NEAR(B(16,2), 1500.8836528155998, 1e-3);
    Matrix<double, -1, -1, ColumnStorage> C = mn3 * m3n;
    EXPECT_NEAR(C(0,0), -14299.641910284905, 1e-3);
    EXPECT_NEAR(C(0,1), -9887.150853738174, 1e-3);
    EXPECT_NEAR(C(0,2), 12200.980488903568, 1e-3);
    EXPECT_NEAR(C(0,3), -8059.21394578515, 1e-3);
    EXPECT_NEAR(C(0,4), -2880.9599857512017, 1e-3);
    EXPECT_NEAR(C(0,5), -116.91798344437113, 1e-3);
    EXPECT_NEAR(C(0,6), -9335.729594461605, 1e-3);
    EXPECT_NEAR(C(0,7), -914.3141027176589, 1e-3);
    EXPECT_NEAR(C(0,8), 4713.788553365232, 1e-3);
    EXPECT_NEAR(C(0,9), 10743.889809392831, 1e-3);
    EXPECT_NEAR(C(0,10), 4138.745842211804, 1e-3);
    EXPECT_NEAR(C(0,11), 8437.811017141663, 1e-3);
    EXPECT_NEAR(C(0,12), -2161.3198416357495, 1e-3);
    EXPECT_NEAR(C(0,13), 5718.469494224314, 1e-3);
    EXPECT_NEAR(C(0,14), 6027.416544686553, 1e-3);
    EXPECT_NEAR(C(0,15), -11919.099212295116, 1e-3);
    EXPECT_NEAR(C(0,16), 124.52943398580862, 1e-3);
    EXPECT_NEAR(C(1,0), 4224.642468582558, 1e-3);
    EXPECT_NEAR(C(1,1), 2625.0611964375717, 1e-3);
    EXPECT_NEAR(C(1,2), -2575.709181433675, 1e-3);
    EXPECT_NEAR(C(1,3), 4954.611805092034, 1e-3);
    EXPECT_NEAR(C(1,4), 12955.99663917507, 1e-3);
    EXPECT_NEAR(C(1,5), 1131.2453522526905, 1e-3);
    EXPECT_NEAR(C(1,6), -10639.880403981546, 1e-3);
    EXPECT_NEAR(C(1,7), 595.4427188266482, 1e-3);
    EXPECT_NEAR(C(1,8), -2617.277854875559, 1e-3);
    EXPECT_NEAR(C(1,9), -1484.455875553557, 1e-3);
    EXPECT_NEAR(C(1,10), -9409.342616110414, 1e-3);
    EXPECT_NEAR(C(1,11), -9431.93122761692, 1e-3);
    EXPECT_NEAR(C(1,12), 11961.357256685918, 1e-3);
    EXPECT_NEAR(C(1,13), -1392.3455262107718, 1e-3);
    EXPECT_NEAR(C(1,14), -842.931049204387, 1e-3);
    EXPECT_NEAR(C(1,15), 1071.8870199388805, 1e-3);
    EXPECT_NEAR(C(1,16), -6718.4649300522915, 1e-3);
    EXPECT_NEAR(C(2,0), 295.90420145169855, 1e-3);
    EXPECT_NEAR(C(2,1), 3169.763604614128, 1e-3);
    EXPECT_NEAR(C(2,2), -264.4282642018087, 1e-3);
    EXPECT_NEAR(C(2,3), 4285.693320124952, 1e-3);
    EXPECT_NEAR(C(2,4), 10031.59683241144, 1e-3);
    EXPECT_NEAR(C(2,5), 5928.99925863273, 1e-3);
    EXPECT_NEAR(C(2,6), -11907.649424368026, 1e-3);
    EXPECT_NEAR(C(2,7), 4871.331563318454, 1e-3);
    EXPECT_NEAR(C(2,8), -3405.679414434461, 1e-3);
    EXPECT_NEAR(C(2,9), -2125.822852635124, 1e-3);
    EXPECT_NEAR(C(2,10), -4268.476240994926, 1e-3);
    EXPECT_NEAR(C(2,11), -5596.464166986412, 1e-3);
    EXPECT_NEAR(C(2,12), 9694.540906570754, 1e-3);
    EXPECT_NEAR(C(2,13), 2380.33336518298, 1e-3);
    EXPECT_NEAR(C(2,14), -1959.3210623942073, 1e-3);
    EXPECT_NEAR(C(2,15), -1352.6920484037776, 1e-3);
    EXPECT_NEAR(C(2,16), -2585.1177354686906, 1e-3);
    EXPECT_NEAR(C(3,0), -10395.780991760936, 1e-3);
    EXPECT_NEAR(C(3,1), -5479.189540253313, 1e-3);
    EXPECT_NEAR(C(3,2), 7506.554597237626, 1e-3);
    EXPECT_NEAR(C(3,3), -7425.384196638553, 1e-3);
    EXPECT_NEAR(C(3,4), -13640.612970980545, 1e-3);
    EXPECT_NEAR(C(3,5), 1101.7301348858825, 1e-3);
    EXPECT_NEAR(C(3,6), 5519.829733023518, 1e-3);
    EXPECT_NEAR(C(3,7), 1062.7999055690411, 1e-3);
    EXPECT_NEAR(C(3,8), 3572.989344618954, 1e-3);
    EXPECT_NEAR(C(3,9), 4734.204241953994, 1e-3);
    EXPECT_NEAR(C(3,10), 11956.12602385433, 1e-3);
    EXPECT_NEAR(C(3,11), 12884.01318635887, 1e-3);
    EXPECT_NEAR(C(3,12), -12228.336285351039, 1e-3);
    EXPECT_NEAR(C(3,13), 4875.797585375406, 1e-3);
    EXPECT_NEAR(C(3,14), 2328.501662811349, 1e-3);
    EXPECT_NEAR(C(3,15), -6142.695015883409, 1e-3);
    EXPECT_NEAR(C(3,16), 7762.594543580601, 1e-3);
    EXPECT_NEAR(C(4,0), -2717.792171763375, 1e-3);
    EXPECT_NEAR(C(4,1), -2499.5511374937482, 1e-3);
    EXPECT_NEAR(C(4,2), 2090.5612624115483, 1e-3);
    EXPECT_NEAR(C(4,3), -3064.006461033248, 1e-3);
    EXPECT_NEAR(C(4,4), -5576.7211107421235, 1e-3);
    EXPECT_NEAR(C(4,5), -1641.4716767029408, 1e-3);
    EXPECT_NEAR(C(4,6), 4038.4483101883734, 1e-3);
    EXPECT_NEAR(C(4,7), -1370.91522095207, 1e-3);
    EXPECT_NEAR(C(4,8), 1937.3315105609197, 1e-3);
    EXPECT_NEAR(C(4,9), 2103.3717017250833, 1e-3);
    EXPECT_NEAR(C(4,10), 3594.5487174500713, 1e-3);
    EXPECT_NEAR(C(4,11), 4418.417561130801, 1e-3);
    EXPECT_NEAR(C(4,12), -5189.646536586026, 1e-3);
    EXPECT_NEAR(C(4,13), 441.2974280586406, 1e-3);
    EXPECT_NEAR(C(4,14), 1359.8973495063365, 1e-3);
    EXPECT_NEAR(C(4,15), -1344.630215259572, 1e-3);
    EXPECT_NEAR(C(4,16), 2122.8407088439335, 1e-3);
    EXPECT_NEAR(C(5,0), -10471.036152954122, 1e-3);
    EXPECT_NEAR(C(5,1), -2163.4105528607283, 1e-3);
    EXPECT_NEAR(C(5,2), 6725.36419609658, 1e-3);
    EXPECT_NEAR(C(5,3), -5205.392063768218, 1e-3);
    EXPECT_NEAR(C(5,4), -12932.875502511086, 1e-3);
    EXPECT_NEAR(C(5,5), 6466.00725003804, 1e-3);
    EXPECT_NEAR(C(5,6), 3548.5137945928, 1e-3);
    EXPECT_NEAR(C(5,7), 5913.981147366713, 1e-3);
    EXPECT_NEAR(C(5,8), 1098.9270318076528, 1e-3);
    EXPECT_NEAR(C(5,9), 1414.9347808405869, 1e-3);
    EXPECT_NEAR(C(5,10), 14191.174485002624, 1e-3);
    EXPECT_NEAR(C(5,11), 12824.783668631826, 1e-3);
    EXPECT_NEAR(C(5,12), -11223.726566723395, 1e-3);
    EXPECT_NEAR(C(5,13), 7301.5192921220105, 1e-3);
    EXPECT_NEAR(C(5,14), -334.31861990233546, 1e-3);
    EXPECT_NEAR(C(5,15), -5910.1569935696125, 1e-3);
    EXPECT_NEAR(C(5,16), 10446.751713311965, 1e-3);
    EXPECT_NEAR(C(6,0), -1002.5140035879847, 1e-3);
    EXPECT_NEAR(C(6,1), 8526.276429944806, 1e-3);
    EXPECT_NEAR(C(6,2), -1661.2537272837967, 1e-3);
    EXPECT_NEAR(C(6,3), 5040.722215242443, 1e-3);
    EXPECT_NEAR(C(6,4), -802.1951822723107, 1e-3);
    EXPECT_NEAR(C(6,5), 14345.897984129151, 1e-3);
    EXPECT_NEAR(C(6,6), -3040.9215740036743, 1e-3);
    EXPECT_NEAR(C(6,7), 13069.852866425572, 1e-3);
    EXPECT_NEAR(C(6,8), -6204.104876258651, 1e-3);
    EXPECT_NEAR(C(6,9), -8783.368888314006, 1e-3);
    EXPECT_NEAR(C(6,10), 8042.9890505002495, 1e-3);
    EXPECT_NEAR(C(6,11), 1780.565801386674, 1e-3);
    EXPECT_NEAR(C(6,12), 210.87911487308912, 1e-3);
    EXPECT_NEAR(C(6,13), 6851.380000882786, 1e-3);
    EXPECT_NEAR(C(6,14), -7102.361042685092, 1e-3);
    EXPECT_NEAR(C(6,15), 486.35066164164994, 1e-3);
    EXPECT_NEAR(C(6,16), 8721.097786103488, 1e-3);
    EXPECT_NEAR(C(7,0), 5177.612223690735, 1e-3);
    EXPECT_NEAR(C(7,1), -3470.1348455233615, 1e-3);
    EXPECT_NEAR(C(7,2), -2472.683986608261, 1e-3);
    EXPECT_NEAR(C(7,3), -1308.8269549233016, 1e-3);
    EXPECT_NEAR(C(7,4), 1764.493842688337, 1e-3);
    EXPECT_NEAR(C(7,5), -10900.377537690294, 1e-3);
    EXPECT_NEAR(C(7,6), 4912.636121641312, 1e-3);
    EXPECT_NEAR(C(7,7), -9696.215351553717, 1e-3);
    EXPECT_NEAR(C(7,8), 3259.058932683156, 1e-3);
    EXPECT_NEAR(C(7,9), 3432.4911237880997, 1e-3);
    EXPECT_NEAR(C(7,10), -7599.442080189817, 1e-3);
    EXPECT_NEAR(C(7,11), -4114.209038153032, 1e-3);
    EXPECT_NEAR(C(7,12), 751.5064847821494, 1e-3);
    EXPECT_NEAR(C(7,13), -6992.249237047363, 1e-3);
    EXPECT_NEAR(C(7,14), 3586.9941591141373, 1e-3);
    EXPECT_NEAR(C(7,15), 3252.504610751057, 1e-3);
    EXPECT_NEAR(C(7,16), -6846.3888392612425, 1e-3);
    EXPECT_NEAR(C(8,0), 11200.647156314923, 1e-3);
    EXPECT_NEAR(C(8,1), 13227.853784989928, 1e-3);
    EXPECT_NEAR(C(8,2), -10926.378132288404, 1e-3);
    EXPECT_NEAR(C(8,3), 10016.285887412289, 1e-3);
    EXPECT_NEAR(C(8,4), 3521.5355276424348, 1e-3);
    EXPECT_NEAR(C(8,5), 8837.960434774792, 1e-3);
    EXPECT_NEAR(C(8,6), 4084.8074481944586, 1e-3);
    EXPECT_NEAR(C(8,7), 8628.066180172142, 1e-3);
    EXPECT_NEAR(C(8,8), -7771.287220858609, 1e-3);
    EXPECT_NEAR(C(8,9), -13901.881401178925, 1e-3);
    EXPECT_NEAR(C(8,10), 304.0672549244371, 1e-3);
    EXPECT_NEAR(C(8,11), -6828.121485893746, 1e-3);
    EXPECT_NEAR(C(8,12), 3429.5877812098984, 1e-3);
    EXPECT_NEAR(C(8,13), -574.9748210911167, 1e-3);
    EXPECT_NEAR(C(8,14), -9103.31790706104, 1e-3);
    EXPECT_NEAR(C(8,15), 9799.24862464, 1e-3);
    EXPECT_NEAR(C(8,16), 4225.130900929495, 1e-3);
    EXPECT_NEAR(C(9,0), -7084.366415995656, 1e-3);
    EXPECT_NEAR(C(9,1), -4163.057177020202, 1e-3);
    EXPECT_NEAR(C(9,2), 6567.388196008686, 1e-3);
    EXPECT_NEAR(C(9,3), -1444.5695343116502, 1e-3);
    EXPECT_NEAR(C(9,4), 7746.585459767588, 1e-3);
    EXPECT_NEAR(C(9,5), 2275.2677979670234, 1e-3);
    EXPECT_NEAR(C(9,6), -15097.074018583666, 1e-3);
    EXPECT_NEAR(C(9,7), 1164.4305026976117, 1e-3);
    EXPECT_NEAR(C(9,8), 719.6562605532157, 1e-3);
    EXPECT_NEAR(C(9,9), 5617.900356782161, 1e-3);
    EXPECT_NEAR(C(9,10), -3388.044646384443, 1e-3);
    EXPECT_NEAR(C(9,11), -990.5477534269688, 1e-3);
    EXPECT_NEAR(C(9,12), 7606.7431511882105, 1e-3);
    EXPECT_NEAR(C(9,13), 3732.198910693002, 1e-3);
    EXPECT_NEAR(C(9,14), 2917.2384627927127, 1e-3);
    EXPECT_NEAR(C(9,15), -7636.204982549654, 1e-3);
    EXPECT_NEAR(C(9,16), -4128.433129445192, 1e-3);
    EXPECT_NEAR(C(10,0), 8328.620964232512, 1e-3);
    EXPECT_NEAR(C(10,1), 11312.390737842243, 1e-3);
    EXPECT_NEAR(C(10,2), -8401.030461528153, 1e-3);
    EXPECT_NEAR(C(10,3), 8713.469459485108, 1e-3);
    EXPECT_NEAR(C(10,4), 4136.889182726509, 1e-3);
    EXPECT_NEAR(C(10,5), 9078.442726308354, 1e-3);
    EXPECT_NEAR(C(10,6), 855.242863811176, 1e-3);
    EXPECT_NEAR(C(10,7), 8618.701794894288, 1e-3);
    EXPECT_NEAR(C(10,8), -7016.647804104277, 1e-3);
    EXPECT_NEAR(C(10,9), -11679.55601704177, 1e-3);
    EXPECT_NEAR(C(10,10), 407.2555139521944, 1e-3);
    EXPECT_NEAR(C(10,11), -5808.733956564029, 1e-3);
    EXPECT_NEAR(C(10,12), 4122.330267362519, 1e-3);
    EXPECT_NEAR(C(10,13), 672.7662454875203, 1e-3);
    EXPECT_NEAR(C(10,14), -7881.094155497581, 1e-3);
    EXPECT_NEAR(C(10,15), 7176.719159643056, 1e-3);
    EXPECT_NEAR(C(10,16), 3681.7027741304655, 1e-3);
    EXPECT_NEAR(C(11,0), 2422.6430897845676, 1e-3);
    EXPECT_NEAR(C(11,1), 4920.629294245684, 1e-3);
    EXPECT_NEAR(C(11,2), -2589.046902154812, 1e-3);
    EXPECT_NEAR(C(11,3), 4395.887360658665, 1e-3);
    EXPECT_NEAR(C(11,4), 4916.415909086045, 1e-3);
    EXPECT_NEAR(C(11,5), 5670.849400433857, 1e-3);
    EXPECT_NEAR(C(11,6), -4431.302791350954, 1e-3);
    EXPECT_NEAR(C(11,7), 5065.244960619341, 1e-3);
    EXPECT_NEAR(C(11,8), -3649.6703709313865, 1e-3);
    EXPECT_NEAR(C(11,9), -4646.292047298557, 1e-3);
    EXPECT_NEAR(C(11,10), -1019.1977337495534, 1e-3);
    EXPECT_NEAR(C(11,11), -3660.2039739664833, 1e-3);
    EXPECT_NEAR(C(11,12), 4845.01357335413, 1e-3);
    EXPECT_NEAR(C(11,13), 1495.5109863757982, 1e-3);
    EXPECT_NEAR(C(11,14), -3402.9121455347267, 1e-3);
    EXPECT_NEAR(C(11,15), 1560.6629609195195, 1e-3);
    EXPECT_NEAR(C(11,16), 588.2422806602153, 1e-3);
    EXPECT_NEAR(C(12,0), -12057.894016275211, 1e-3);
    EXPECT_NEAR(C(12,1), -14556.212617938478, 1e-3);
    EXPECT_NEAR(C(12,2), 11940.69932497678, 1e-3);
    EXPECT_NEAR(C(12,3), -10708.337510079731, 1e-3);
    EXPECT_NEAR(C(12,4), -2600.091322906247, 1e-3);
    EXPECT_NEAR(C(12,5), -9855.473287033625, 1e-3);
    EXPECT_NEAR(C(12,6), -5620.56839548374, 1e-3);
    EXPECT_NEAR(C(12,7), -9666.19512647499, 1e-3);
    EXPECT_NEAR(C(12,8), 8451.099019930421, 1e-3);
    EXPECT_NEAR(C(12,9), 15426.681390828724, 1e-3);
    EXPECT_NEAR(C(12,10), -1361.7431339900345, 1e-3);
    EXPECT_NEAR(C(12,11), 6641.665212323354, 1e-3);
    EXPECT_NEAR(C(12,12), -2606.837296667572, 1e-3);
    EXPECT_NEAR(C(12,13), 446.7430407796927, 1e-3);
    EXPECT_NEAR(C(12,14), 10125.354545834334, 1e-3);
    EXPECT_NEAR(C(12,15), -10827.645062671514, 1e-3);
    EXPECT_NEAR(C(12,16), -5467.067388132122, 1e-3);
    EXPECT_NEAR(C(13,0), 6300.56505831038, 1e-3);
    EXPECT_NEAR(C(13,1), 1248.9491914439454, 1e-3);
    EXPECT_NEAR(C(13,2), -5031.753843599625, 1e-3);
    EXPECT_NEAR(C(13,3), 197.46710970251596, 1e-3);
    EXPECT_NEAR(C(13,4), -4954.22897981504, 1e-3);
    EXPECT_NEAR(C(13,5), -5614.68452995823, 1e-3);
    EXPECT_NEAR(C(13,6), 12082.219216231133, 1e-3);
    EXPECT_NEAR(C(13,7), -4421.121726230983, 1e-3);
    EXPECT_NEAR(C(13,8), 888.2341420525178, 1e-3);
    EXPECT_NEAR(C(13,9), -2255.1657879806717, 1e-3);
    EXPECT_NEAR(C(13,10), -216.18846546792568, 1e-3);
    EXPECT_NEAR(C(13,11), -449.3188600825025, 1e-3);
    EXPECT_NEAR(C(13,12), -5196.387594791427, 1e-3);
    EXPECT_NEAR(C(13,13), -4961.829318854618, 1e-3);
    EXPECT_NEAR(C(13,14), -489.6306857805703, 1e-3);
    EXPECT_NEAR(C(13,15), 6085.913846109087, 1e-3);
    EXPECT_NEAR(C(13,16), 412.55176522848365, 1e-3);
    EXPECT_NEAR(C(14,0), -20028.44892177344, 1e-3);
    EXPECT_NEAR(C(14,1), -14527.735719176446, 1e-3);
    EXPECT_NEAR(C(14,2), 17120.037488082216, 1e-3);
    EXPECT_NEAR(C(14,3), -12149.73082787527, 1e-3);
    EXPECT_NEAR(C(14,4), -5959.857455066225, 1e-3);
    EXPECT_NEAR(C(14,5), -1475.4985484550846, 1e-3);
    EXPECT_NEAR(C(14,6), -10704.723106844012, 1e-3);
    EXPECT_NEAR(C(14,7), -2370.366392149374, 1e-3);
    EXPECT_NEAR(C(14,8), 7317.590599828078, 1e-3);
    EXPECT_NEAR(C(14,9), 15525.681202953709, 1e-3);
    EXPECT_NEAR(C(14,10), 6518.588927132803, 1e-3);
    EXPECT_NEAR(C(14,11), 12854.857316117314, 1e-3);
    EXPECT_NEAR(C(14,12), -4900.490904327291, 1e-3);
    EXPECT_NEAR(C(14,13), 7451.853069895695, 1e-3);
    EXPECT_NEAR(C(14,14), 8883.368364603582, 1e-3);
    EXPECT_NEAR(C(14,15), -16399.4929412852, 1e-3);
    EXPECT_NEAR(C(14,16), 575.2515662554396, 1e-3);
    EXPECT_NEAR(C(15,0), -11189.516048141946, 1e-3);
    EXPECT_NEAR(C(15,1), -6790.371722467483, 1e-3);
    EXPECT_NEAR(C(15,2), 9481.902491908526, 1e-3);
    EXPECT_NEAR(C(15,3), -5170.647267187302, 1e-3);
    EXPECT_NEAR(C(15,4), 143.196521137318, 1e-3);
    EXPECT_NEAR(C(15,5), 1698.8490520269922, 1e-3);
    EXPECT_NEAR(C(15,6), -10292.00495271429, 1e-3);
    EXPECT_NEAR(C(15,7), 784.7083106899537, 1e-3);
    EXPECT_NEAR(C(15,8), 2725.917934848373, 1e-3);
    EXPECT_NEAR(C(15,9), 7709.738435184499, 1e-3);
    EXPECT_NEAR(C(15,10), 2419.231208588016, 1e-3);
    EXPECT_NEAR(C(15,11), 5320.468634313363, 1e-3);
    EXPECT_NEAR(C(15,12), 652.2891693994227, 1e-3);
    EXPECT_NEAR(C(15,13), 5239.437926026856, 1e-3);
    EXPECT_NEAR(C(15,14), 4085.7216945034993, 1e-3);
    EXPECT_NEAR(C(15,15), -9680.81458757679, 1e-3);
    EXPECT_NEAR(C(15,16), -310.9216441809037, 1e-3);
    EXPECT_NEAR(C(16,0), -5277.129283946672, 1e-3);
    EXPECT_NEAR(C(16,1), -5637.838268692839, 1e-3);
    EXPECT_NEAR(C(16,2), 4960.358577904321, 1e-3);
    EXPECT_NEAR(C(16,3), -4431.1763445224715, 1e-3);
    EXPECT_NEAR(C(16,4), -2020.305950526723, 1e-3);
    EXPECT_NEAR(C(16,5), -3280.0741865746504, 1e-3);
    EXPECT_NEAR(C(16,6), -1718.8797262366706, 1e-3);
    EXPECT_NEAR(C(16,7), -3238.2226996007294, 1e-3);
    EXPECT_NEAR(C(16,8), 3278.375441071807, 1e-3);
    EXPECT_NEAR(C(16,9), 5898.041194520771, 1e-3);
    EXPECT_NEAR(C(16,10), 568.3693223017656, 1e-3);
    EXPECT_NEAR(C(16,11), 3477.8167486706616, 1e-3);
    EXPECT_NEAR(C(16,12), -1894.881896157847, 1e-3);
    EXPECT_NEAR(C(16,13), 673.3218667678564, 1e-3);
    EXPECT_NEAR(C(16,14), 3785.257118522992, 1e-3);
    EXPECT_NEAR(C(16,15), -4467.415336372328, 1e-3);
    EXPECT_NEAR(C(16,16), -1258.1315480236108, 1e-3);
    Matrix<double, 3, 3, ColumnStorage> D = m3n * mn3;
    EXPECT_NEAR(D(0,0), -17023.468800983774, 1e-3);
    EXPECT_NEAR(D(0,1), -10267.176425391335, 1e-3);
    EXPECT_NEAR(D(0,2), 16865.26488807608, 1e-3);
    EXPECT_NEAR(D(1,0), 7303.122295458777, 1e-3);
    EXPECT_NEAR(D(1,1), -44368.48940848036, 1e-3);
    EXPECT_NEAR(D(1,2), 9310.518648178957, 1e-3);
    EXPECT_NEAR(D(2,0), 4245.603620299172, 1e-3);
    EXPECT_NEAR(D(2,1), 426.82116862444616, 1e-3);
    EXPECT_NEAR(D(2,2), 15149.13453790523, 1e-3);
    Matrix<double, 3, 3, ColumnStorage> E = m33 * m33;
    EXPECT_NEAR(E(0,0), 1007.7908195004993, 1e-3);
    EXPECT_NEAR(E(0,1), -607.95814861256, 1e-3);
    EXPECT_NEAR(E(0,2), 604.4094363728194, 1e-3);
    EXPECT_NEAR(E(1,0), -10187.579170749012, 1e-3);
    EXPECT_NEAR(E(1,1), 13191.72608537688, 1e-3);
    EXPECT_NEAR(E(1,2), 7242.09561800042, 1e-3);
    EXPECT_NEAR(E(2,0), 6671.361228260809, 1e-3);
    EXPECT_NEAR(E(2,1), -8188.7348033358185, 1e-3);
    EXPECT_NEAR(E(2,2), -3728.08807567251, 1e-3);
  }
  {
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=83.43418160115675; m33(0,1)=-44.22588669239988; m33(0,2)=68.25021983082604; m33(1,0)=-79.62901156336082; m33(1,1)=-24.457448558278756; m33(1,2)=70.53678443361443; m33(2,0)=-14.4144840341188; m33(2,1)=-13.109846066792016; m33(2,2)=82.37875945025877;
    Matrix<double, 3,-1, ColumnStorage> m3n; m3n.resize(3, 10);
    m3n(0,0)=-48.62443660946782; m3n(0,1)=98.11359341012644; m3n(0,2)=-2.808187060457044; m3n(0,3)=48.367831590297925; m3n(0,4)=20.718823921747827; m3n(0,5)=-15.974119404669395; m3n(0,6)=-15.182001543493627; m3n(0,7)=-34.20173512456826; m3n(0,8)=45.74973718511376; m3n(0,9)=76.68294886484051; m3n(1,0)=88.65710783758146; m3n(1,1)=-98.45973218127433; m3n(1,2)=2.424684538053185; m3n(1,3)=20.68840625351571; m3n(1,4)=53.53371648631625; m3n(1,5)=-32.93466067778516; m3n(1,6)=92.146212009326; m3n(1,7)=25.51085919145399; m3n(1,8)=43.015739514779966; m3n(1,9)=-34.74673727634277; m3n(2,0)=-85.25567920912924; m3n(2,1)=92.3441805996942; m3n(2,2)=-26.113505762348453; m3n(2,3)=-29.372384225036896; m3n(2,4)=45.89609572062153; m3n(2,5)=45.83125862400976; m3n(2,6)=-31.494552210426832; m3n(2,7)=25.41679278089562; m3n(2,8)=-14.780156364881833; m3n(2,9)=-23.69804647869465;
    Matrix<double,-1, 3, ColumnStorage> mn3; mn3.resize(10, 3);
    mn3(0,0)=-61.82152702094024; mn3(0,1)=-83.432982804468; mn3(0,2)=70.25344716791878; mn3(1,0)=6.517898058100229; mn3(1,1)=-52.65708646818727; mn3(1,2)=6.238799074556667; mn3(2,0)=-6.242760888536324; mn3(2,1)=53.50897861440629; mn3(2,2)=-81.51297686179959; mn3(3,0)=87.02845297184587; mn3(3,1)=-43.76220730453782; mn3(3,2)=61.46217169482554; mn3(4,0)=28.905294338736155; mn3(4,1)=-53.97768161511518; mn3(4,2)=-25.55611791367916; mn3(5,0)=-97.00959474301645; mn3(5,1)=-50.75647429646901; mn3(5,2)=-92.87137126950047; mn3(6,0)=-26.01116465035433; mn3(6,1)=68.69912155029814; mn3(6,2)=-27.680352707754068; mn3(7,0)=-3.0040376744443478; mn3(7,1)=23.47084622717594; mn3(7,2)=-95.7304466018079; mn3(8,0)=55.55896199260414; mn3(8,1)=-52.903603854543626; mn3(8,2)=-88.71999600476343; mn3(9,0)=-94.87264283519269; mn3(9,1)=42.051846079602484; mn3(9,2)=-30.567898769417724;
    Matrix<double, 3, -1, ColumnStorage> A = m33 * m3n;
    EXPECT_NEAR(A(0,0), -13796.598127878484, 1e-3);
    EXPECT_NEAR(A(0,1), 18843.006955362252, 1e-3);
    EXPECT_NEAR(A(0,2), -2123.78512165077, 1e-3);
    EXPECT_NEAR(A(0,3), 1115.8956534305055, 1e-3);
    EXPECT_NEAR(A(0,4), 2493.5006604116707, 1e-3);
    EXPECT_NEAR(A(0,5), 3251.7704682727244, 1e-3);
    EXPECT_NEAR(A(0,6), -7491.455917142258, 1e-3);
    EXPECT_NEAR(A(0,7), -2247.1324527942234, 1e-3);
    EXPECT_NEAR(A(0,8), 905.9337377003601, 1e-3);
    EXPECT_NEAR(A(0,9), 6317.287465283401, 1e-3);
    EXPECT_NEAR(A(1,0), -4310.072295341935, 1e-3);
    EXPECT_NEAR(A(1,1), 1109.0469313669687, 1e-3);
    EXPECT_NEAR(A(1,2), -1677.6511642149965, 1e-3);
    EXPECT_NEAR(A(1,3), -6429.30178707938, 1e-3);
    EXPECT_NEAR(A(1,4), 278.24542344836095, 1e-3);
    EXPECT_NEAR(A(1,5), 5310.290717983232, 1e-3);
    EXPECT_NEAR(A(1,6), -3266.2579036966154, 1e-3);
    EXPECT_NEAR(A(1,7), 3892.3386687486527, 1e-3);
    EXPECT_NEAR(A(1,8), -5737.606291117975, 1e-3);
    EXPECT_NEAR(A(1,9), -6927.954878332272, 1e-3);
    EXPECT_NEAR(A(2,0), -7484.641960639763, 1e-3);
    EXPECT_NEAR(A(2,1), 7483.734147187244, 1e-3);
    EXPECT_NEAR(A(2,2), -2142.5068831060803, 1e-3);
    EXPECT_NEAR(A(2,3), -3388.0797321290343, 1e-3);
    EXPECT_NEAR(A(2,4), 2780.3934899304872, 1e-3);
    EXPECT_NEAR(A(2,5), 4437.549250355403, 1e-3);
    EXPECT_NEAR(A(2,6), -3583.6640767619574, 1e-3);
    EXPECT_NEAR(A(2,7), 2252.360786355155, 1e-3);
    EXPECT_NEAR(A(2,8), -2440.959525527753, 1e-3);
    EXPECT_NEAR(A(2,9), -2602.0364353947125, 1e-3);
    Matrix<double, -1, 3, ColumnStorage> B = mn3 * m33;
    EXPECT_NEAR(B(0,0), 472.99024763294545, 1e-3);
    EXPECT_NEAR(B(0,1), 3853.6578561503516, 1e-3);
    EXPECT_NEAR(B(0,2), -4317.035307391297, 1e-3);
    EXPECT_NEAR(B(1,0), 4646.918167853264, 1e-3);
    EXPECT_NEAR(B(1,1), 917.8084670252903, 1e-3);
    EXPECT_NEAR(B(1,2), -2755.469053587066, 1e-3);
    EXPECT_NEAR(B(2,0), -3606.7592189490183, 1e-3);
    EXPECT_NEAR(B(2,1), 36.021122940445075, 1e-3);
    EXPECT_NEAR(B(2,2), -3366.6564261793233, 1e-3);
    EXPECT_NEAR(B(3,0), 9859.943568614623, 1e-3);
    EXPECT_NEAR(B(3,1), -3584.3581760501465, 1e-3);
    EXPECT_NEAR(B(3,2), 7916.043121224392, 1e-3);
    EXPECT_NEAR(B(4,0), 7078.257264227201, 1e-3);
    EXPECT_NEAR(B(4,1), 376.8308710745352, 1e-3);
    EXPECT_NEAR(B(4,2), -3939.9006895116026, 1e-3);
    EXPECT_NEAR(B(5,0), -2713.5353677835656, 1e-3);
    EXPECT_NEAR(B(5,1), 6749.238585640807, 1e-3);
    EXPECT_NEAR(B(5,2), -17851.7530065964, 1e-3);
    EXPECT_NEAR(B(6,0), -7241.665377251976, 1e-3);
    EXPECT_NEAR(B(6,1), -166.95324767826315, 1e-3);
    EXPECT_NEAR(B(6,2), 790.2743049191699, 1e-3);
    EXPECT_NEAR(B(7,0), -739.6947163711407, 1e-3);
    EXPECT_NEAR(B(7,1), 813.8306344442041, 1e-3);
    EXPECT_NEAR(B(7,2), -6435.623643536263, 1e-3);
    EXPECT_NEAR(B(8,0), 10127.031173457359, 1e-3);
    EXPECT_NEAR(B(8,1), -0.1516973433525928, 1e-3);
    EXPECT_NEAR(B(8,2), -7248.381940585862, 1e-3);
    EXPECT_NEAR(B(9,0), -10823.547760258154, 1e-3);
    EXPECT_NEAR(B(9,1), 3568.0863374175688, 1e-3);
    EXPECT_NEAR(B(9,2), -6027.022307106614, 1e-3);
    Matrix<double, -1, -1, ColumnStorage> C = mn3 * m3n;
    EXPECT_NEAR(C(0,0), -10380.395387060182, 1e-3);
    EXPECT_NEAR(C(0,1), 8636.753988912476, 1e-3);
    EXPECT_NEAR(C(0,2), -1863.2560485760405, 1e-3);
    EXPECT_NEAR(C(0,3), -6779.779894154755, 1e-3);
    EXPECT_NEAR(C(0,4), -2522.9880440600973, 1e-3);
    EXPECT_NEAR(C(0,5), 6955.185338793224, 1e-3);
    EXPECT_NEAR(C(0,6), -8962.059663210392, 1e-3);
    EXPECT_NEAR(C(0,7), 1771.5737247293423, 1e-3);
    EXPECT_NEAR(C(0,8), -7455.60700316234, 1e-3);
    EXPECT_NEAR(C(0,9), -3506.5025178785004, 1e-3);
    EXPECT_NEAR(C(1,0), -5517.247166926614, 1e-3);
    EXPECT_NEAR(C(1,1), 6400.213819531088, 1e-3);
    EXPECT_NEAR(C(1,2), -308.8972159500482, 1e-3);
    EXPECT_NEAR(C(1,3), -957.3830049041243, 1e-3);
    EXPECT_NEAR(C(1,4), -2397.5498362701187, 1e-3);
    EXPECT_NEAR(C(1,5), 1916.0576071522241, 1e-3);
    EXPECT_NEAR(C(1,6), -5147.593975053395, 1e-3);
    EXPECT_NEAR(C(1,7), -1407.6806779945746, 1e-3);
    EXPECT_NEAR(C(1,8), -2059.1018178163677, 1e-3);
    EXPECT_NEAR(C(1,9), 2181.6262423032294, 1e-3);
    EXPECT_NEAR(C(2,0), 11996.946225099719, 1e-3);
    EXPECT_NEAR(C(2,1), -13408.228463787187, 1e-3);
    EXPECT_NEAR(C(2,2), 2275.8628244288643, 1e-3);
    EXPECT_NEAR(C(2,3), 3199.2971561816175, 1e-3);
    EXPECT_NEAR(C(2,4), -1005.9355615411343, 1e-3);
    EXPECT_NEAR(C(2,5), -5398.419769798115, 1e-3);
    EXPECT_NEAR(C(2,6), 7592.641998852255, 1e-3);
    EXPECT_NEAR(C(2,7), -493.22516858392413, 1e-3);
    EXPECT_NEAR(C(2,8), 3220.8981596035815, 1e-3);
    EXPECT_NEAR(C(2,9), -406.27742154358816, 1e-3);
    EXPECT_NEAR(C(3,0), -13351.539420469044, 1e-3);
    EXPECT_NEAR(C(3,1), 18523.16334389458, 1e-3);
    EXPECT_NEAR(C(3,2), -1955.4944976487998, 1e-3);
    EXPECT_NEAR(C(3,3), 1498.7167113139499, 1e-3);
    EXPECT_NEAR(C(3,4), 2281.2473099522485, 1e-3);
    EXPECT_NEAR(C(3,5), 2867.9792352487652, 1e-3);
    EXPECT_NEAR(C(3,6), -7289.5113150353445, 1e-3);
    EXPECT_NEAR(C(3,7), -2530.7643234660923, 1e-3);
    EXPECT_NEAR(C(3,8), 1190.6446329104454, 1e-3);
    EXPECT_NEAR(C(3,9), 6737.658927364371, 1e-3);
    EXPECT_NEAR(C(4,0), -4012.2046013464783, 1e-3);
    EXPECT_NEAR(C(4,1), 5790.671603693257, 1e-3);
    EXPECT_NEAR(C(4,2), 455.3095088492487, 1e-3);
    EXPECT_NEAR(C(4,3), 1032.0183174284862, 1e-3);
    EXPECT_NEAR(C(4,4), -3463.668234375362, 1e-3);
    EXPECT_NEAR(C(4,5), 144.7309554457369, 1e-3);
    EXPECT_NEAR(C(4,6), -4607.800627215939, 1e-3);
    EXPECT_NEAR(C(4,7), -3015.1828091315924, 1e-3);
    EXPECT_NEAR(C(4,8), -621.7568538684508, 1e-3);
    EXPECT_NEAR(C(4,9), 4697.721599700322, 1e-3);
    EXPECT_NEAR(C(5,0), 8134.926511598956, 1e-3);
    EXPECT_NEAR(C(5,1), -13096.621750853385, 1e-3);
    EXPECT_NEAR(C(5,2), 2574.549739068081, 1e-3);
    EXPECT_NEAR(C(5,3), -3014.3607009809293, 1e-3);
    EXPECT_NEAR(C(5,4), -8989.540762523215, 1e-3);
    EXPECT_NEAR(C(5,5), -1035.1217274404419, 1e-3);
    EXPECT_NEAR(C(5,6), -279.274772944955, 1e-3);
    EXPECT_NEAR(C(5,7), -337.4372037240329, 1e-3);
    EXPECT_NEAR(C(5,8), -5248.8373517687205, 1e-3);
    EXPECT_NEAR(C(5,9), -3474.489842740049, 1e-3);
    EXPECT_NEAR(C(6,0), 9715.350925159317, 1e-3);
    EXPECT_NEAR(C(6,1), -11872.26543106796, 1e-3);
    EXPECT_NEAR(C(6,2), 962.4489637371604, 1e-3);
    EXPECT_NEAR(C(6,3), 976.2096598330678, 1e-3);
    EXPECT_NEAR(C(6,4), 1868.378438086711, 1e-3);
    EXPECT_NEAR(C(6,5), -3115.702210894597, 1e-3);
    EXPECT_NEAR(C(6,6), 7597.045674655366, 1e-3);
    EXPECT_NEAR(C(6,7), 1938.654791224102, 1e-3);
    EXPECT_NEAR(C(6,8), 2174.259512125085, 1e-3);
    EXPECT_NEAR(C(6,9), -3725.712851406799, 1e-3);
    EXPECT_NEAR(C(7,0), 10388.491230505912, 1e-3);
    EXPECT_NEAR(C(7,1), -11445.819814461482, 1e-3);
    EXPECT_NEAR(C(7,2), 2565.202866637059, 1e-3);
    EXPECT_NEAR(C(7,3), 3152.107073155857, 1e-3);
    EXPECT_NEAR(C(7,4), -3199.4122406259708, 1e-3);
    EXPECT_NEAR(C(7,5), -5112.464356204228, 1e-3);
    EXPECT_NEAR(C(7,6), 5223.344425725888, 1e-3);
    EXPECT_NEAR(C(7,7), -1731.6561700494206, 1e-3);
    EXPECT_NEAR(C(7,8), 2287.0928430543386, 1e-3);
    EXPECT_NEAR(C(7,9), 1222.730778109246, 1e-3);
    EXPECT_NEAR(C(8,0), 172.07978139116224, 1e-3);
    EXPECT_NEAR(C(8,1), 2467.1887403056076, 1e-3);
    EXPECT_NEAR(C(8,2), 2032.495618472463, 1e-3);
    EXPECT_NEAR(C(8,3), 4198.693079267832, 1e-3);
    EXPECT_NEAR(C(8,4), -5752.9116080214635, 1e-3);
    EXPECT_NEAR(C(8,5), -3211.2923333034114, 1e-3);
    EXPECT_NEAR(C(8,6), -2924.166397283912, 1e-3);
    EXPECT_NEAR(C(8,7), -5504.807044495687, 1e-3);
    EXPECT_NEAR(C(8,8), 1577.4156802813009, 1e-3);
    EXPECT_NEAR(C(8,9), 8201.14325447851, 1e-3);
    EXPECT_NEAR(C(9,0), 10947.410831743817, 1e-3);
    EXPECT_NEAR(C(9,1), -16271.476972118351, 1e-3);
    EXPECT_NEAR(C(9,2), 1166.6175896450293, 1e-3);
    EXPECT_NEAR(C(9,3), -2820.9462681665877, 1e-3);
    EXPECT_NEAR(C(9,4), -1117.4051840410439, 1e-3);
    EXPECT_NEAR(C(9,5), -1270.4216307139711, 1e-3);
    EXPECT_NEAR(C(9,6), 6277.997217950279, 1e-3);
    EXPECT_NEAR(C(9,7), 3540.6497761247797, 1e-3);
    EXPECT_NEAR(C(9,8), -2079.708895133557, 1e-3);
    EXPECT_NEAR(C(9,9), -8011.878981122818, 1e-3);
    Matrix<double, 3, 3, ColumnStorage> D = m3n * mn3;
    EXPECT_NEAR(D(0,0), 5785.30500553185, 1e-3);
    EXPECT_NEAR(D(0,1), -4725.404827912739, 1e-3);
    EXPECT_NEAR(D(0,2), -1356.7445522530809, 1e-3);
    EXPECT_NEAR(D(1,0), 3618.0196548571616, 1e-3);
    EXPECT_NEAR(D(1,1), -1013.657716872972, 1e-3);
    EXPECT_NEAR(D(1,2), 631.6541237148256, 1e-3);
    EXPECT_NEAR(D(2,0), 2529.8649084863705, 1e-3);
    EXPECT_NEAR(D(2,1), -4446.661982843832, 1e-3);
    EXPECT_NEAR(D(2,2), -10045.11307849653, 1e-3);
    Matrix<double, 3, 3, ColumnStorage> E = m33 * m33;
    EXPECT_NEAR(E(0,0), 9499.134598207258, 1e-3);
    EXPECT_NEAR(E(0,1), -3503.0481890490837, 1e-3);
    EXPECT_NEAR(E(0,2), 8197.217841547641, 1e-3);
    EXPECT_NEAR(E(1,0), -5713.0103104769905, 1e-3);
    EXPECT_NEAR(E(1,1), 3195.104046838671, 1e-3);
    EXPECT_NEAR(E(1,2), -1349.114523610807, 1e-3);
    EXPECT_NEAR(E(2,0), -1346.183907389449, 1e-3);
    EXPECT_NEAR(E(2,1), -121.84613215831658, 1e-3);
    EXPECT_NEAR(E(2,2), 4877.7419185158815, 1e-3);
  }
  {
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=81.84758582945432; m33(0,1)=79.21502926741178; m33(0,2)=-46.36545422961669; m33(1,0)=61.67190010409536; m33(1,1)=-38.5901489121749; m33(1,2)=-59.678134300371944; m33(2,0)=-34.47167396842592; m33(2,1)=-87.98604544462401; m33(2,2)=94.53517522102999;
    Matrix<double, 3,-1, ColumnStorage> m3n; m3n.resize(3, 18);
    m3n(0,0)=-73.91580925065236; m3n(0,1)=-52.14744304510241; m3n(0,2)=9.169231467565382; m3n(0,3)=-28.50576278223346; m3n(0,4)=67.34464767793972; m3n(0,5)=-34.684121347380454; m3n(0,6)=-61.15526409760825; m3n(0,7)=99.09243185307338; m3n(0,8)=-30.516609564391302; m3n(0,9)=68.71860642362694; m3n(0,10)=29.009301443176923; m3n(0,11)=-49.24190237569428; m3n(0,12)=50.53439589982935; m3n(0,13)=-77.02250847202401; m3n(0,14)=-0.05051377915768285; m3n(0,15)=41.19793449683681; m3n(0,16)=60.8799382872773; m3n(0,17)=-1.7098764116632736; m3n(1,0)=72.18924333031939; m3n(1,1)=86.08785975954777; m3n(1,2)=66.09706041661047; m3n(1,3)=21.608137349663536; m3n(1,4)=83.82256848332821; m3n(1,5)=16.44885873077135; m3n(1,6)=-14.507808421127933; m3n(1,7)=19.55337477581469; m3n(1,8)=-75.01590976841727; m3n(1,9)=-92.59846934030813; m3n(1,10)=68.53325732458515; m3n(1,11)=-34.89001188866443; m3n(1,12)=-45.2883099226425; m3n(1,13)=-92.3013673337336; m3n(1,14)=62.657125254362626; m3n(1,15)=42.76723013196133; m3n(1,16)=52.068828592168984; m3n(1,17)=63.43597336979934; m3n(2,0)=16.44946758401109; m3n(2,1)=-15.100505519485765; m3n(2,2)=33.525440741947534; m3n(2,3)=-16.849394714264207; m3n(2,4)=-65.78832954926979; m3n(2,5)=45.98172472055896; m3n(2,6)=-67.11063023807395; m3n(2,7)=7.924149998325518; m3n(2,8)=-20.93195510208639; m3n(2,9)=16.985037957135546; m3n(2,10)=-95.32996649895755; m3n(2,11)=41.501154967135164; m3n(2,12)=58.82684982043526; m3n(2,13)=3.2303065481773956; m3n(2,14)=28.652037233534116; m3n(2,15)=-60.44952644648844; m3n(2,16)=19.668763678818962; m3n(2,17)=57.66895215528987;
    Matrix<double,-1, 3, ColumnStorage> mn3; mn3.resize(18, 3);
    mn3(0,0)=72.03481060848608; mn3(0,1)=-12.370116255229789; mn3(0,2)=-71.33220049059176; mn3(1,0)=74.82288990046416; mn3(1,1)=24.951894706717212; mn3(1,2)=-44.011203285979825; mn3(2,0)=-96.19012694563449; mn3(2,1)=97.50109556697262; mn3(2,2)=6.212993899936919; mn3(3,0)=60.68874561643241; mn3(3,1)=-29.122147514554953; mn3(3,2)=13.32731011674737; mn3(4,0)=-97.54748261221557; mn3(4,1)=-63.60924708719817; mn3(4,2)=15.004667663748734; mn3(5,0)=7.30878678364671; mn3(5,1)=-55.479738541366096; mn3(5,2)=79.90269442370936; mn3(6,0)=-73.31481779159685; mn3(6,1)=-63.7978492458229; mn3(6,2)=-85.10463852461893; mn3(7,0)=-89.55215688583478; mn3(7,1)=31.465026309608504; mn3(7,2)=-68.65841116768527; mn3(8,0)=-0.5623403930786708; mn3(8,1)=9.257213861938965; mn3(8,2)=-46.354519140450876; mn3(9,0)=-83.67730694202329; mn3(9,1)=-76.41848091535546; mn3(9,2)=-90.50462095774347; mn3(10,0)=46.593866425888564; mn3(10,1)=-88.46388973875636; mn3(10,2)=-53.2925446993026; mn3(11,0)=-48.06532296671442; mn3(11,1)=16.025057666153586; mn3(11,2)=-85.24695217563412; mn3(12,0)=-3.9803779015100673; mn3(12,1)=27.74268584169073; mn3(12,2)=-33.75555087303026; mn3(13,0)=33.47705472771614; mn3(13,1)=-37.76977798106018; mn3(13,2)=81.8162877816591; mn3(14,0)=-23.627266722981304; mn3(14,1)=-90.97908271575793; mn3(14,2)=73.62101811945178; mn3(15,0)=-41.6713855485237; mn3(15,1)=-57.329385199457896; mn3(15,2)=12.979363076026544; mn3(16,0)=-79.88438132214077; mn3(16,1)=-93.98179933537551; mn3(16,2)=75.64708901925817; mn3(17,0)=-27.207833502955054; mn3(17,1)=54.55988455057735; mn3(17,2)=57.8702040407976;
    Matrix<double, 3, -1, ColumnStorage> A = m33 * m3n;
    EXPECT_NEAR(A(0,0), -1094.0445549608107, 1e-3);
    EXPECT_NEAR(A(0,1), 3251.4518075086085, 1e-3);
    EXPECT_NEAR(A(0,2), 4431.93774667488, 1e-3);
    EXPECT_NEAR(A(0,3), 159.79120603589558, 1e-3);
    EXPECT_NEAR(A(0,4), 15202.309829210613, 1e-3);
    EXPECT_NEAR(A(0,5), -3667.778326055267, 1e-3);
    EXPECT_NEAR(A(0,6), -3043.032341213443, 1e-3);
    EXPECT_NEAR(A(0,7), 9291.99066223063, 1e-3);
    EXPECT_NEAR(A(0,8), -7469.57870214998, 1e-3);
    EXPECT_NEAR(A(0,9), -2498.2574215616146, 1e-3);
    EXPECT_NEAR(A(0,10), 12223.22247289932, 1e-3);
    EXPECT_NEAR(A(0,11), -8718.36404510608, 1e-3);
    EXPECT_NEAR(A(0,12), -2178.9301030647594, 1e-3);
    EXPECT_NEAR(A(0,13), -13765.53651813484, 1e-3);
    EXPECT_NEAR(A(0,14), 3630.7868590243434, 1e-3);
    EXPECT_NEAR(A(0,15), 9562.528617972202, 1e-3);
    EXPECT_NEAR(A(0,16), 8195.558593004896, 1e-3);
    EXPECT_NEAR(A(0,17), 2211.2860691079927, 1e-3);
    EXPECT_NEAR(A(1,0), -8325.995589842081, 1e-3);
    EXPECT_NEAR(A(1,1), -5637.005229417556, 1e-3);
    EXPECT_NEAR(A(1,2), -3985.947232112105, 1e-3);
    EXPECT_NEAR(A(1,3), -1586.325352097349, 1e-3);
    EXPECT_NEAR(A(1,4), 4844.671750405232, 1e-3);
    EXPECT_NEAR(A(1,5), -5517.9031180260135, 1e-3);
    EXPECT_NEAR(A(1,6), 793.3343534237462, 1e-3);
    EXPECT_NEAR(A(1,7), 4883.752426164002, 1e-3);
    EXPECT_NEAR(A(1,8), 2262.037859926344, 1e-3);
    EXPECT_NEAR(A(1,9), 6797.760375229668, 1e-3);
    EXPECT_NEAR(A(1,10), 4833.464678675801, 1e-3);
    EXPECT_NEAR(A(1,11), -4167.142429667561, 1e-3);
    EXPECT_NEAR(A(1,12), 1353.5581955988375, 1e-3);
    EXPECT_NEAR(A(1,13), -1380.9796060608696, 1e-3);
    EXPECT_NEAR(A(1,14), -4130.9632007188475, 1e-3);
    EXPECT_NEAR(A(1,15), 4497.876079097766, 1e-3);
    EXPECT_NEAR(A(1,16), 571.442502995309, 1e-3);
    EXPECT_NEAR(A(1,17), -5995.030457664878, 1e-3);
    EXPECT_NEAR(A(2,0), -2248.5910663265126, 1e-3);
    EXPECT_NEAR(A(2,1), -7204.449621306876, 1e-3);
    EXPECT_NEAR(A(2,2), -2962.364304360626, 1e-3);
    EXPECT_NEAR(A(2,3), -2511.433675651995, 1e-3);
    EXPECT_NEAR(A(2,4), -15916.01031957076, 1e-3);
    EXPECT_NEAR(A(2,5), 4095.240094593579, 1e-3);
    EXPECT_NEAR(A(2,6), -2959.7061722810786, 1e-3);
    EXPECT_NEAR(A(2,7), -4387.195216628778, 1e-3);
    EXPECT_NEAR(A(2,8), 5673.505818184753, 1e-3);
    EXPECT_NEAR(A(2,9), 7384.211274692781, 1e-3);
    EXPECT_NEAR(A(2,10), -16042.004561623913, 1e-3);
    EXPECT_NEAR(A(2,11), 8690.603932572734, 1e-3);
    EXPECT_NEAR(A(2,12), 7803.940630789626, 1e-3);
    EXPECT_NEAR(A(2,13), 11081.704696654344, 1e-3);
    EXPECT_NEAR(A(2,14), -2802.5860152221894, 1e-3);
    EXPECT_NEAR(A(2,15), -10897.687794726038, 1e-3);
    EXPECT_NEAR(A(2,16), -4820.573681857651, 1e-3);
    EXPECT_NEAR(A(2,17), -70.79363673644202, 1e-3);
    Matrix<double, -1, 3, ColumnStorage> B = mn3 * m33;
    EXPECT_NEAR(B(0,0), 7591.927128780045, 1e-3);
    EXPECT_NEAR(B(0,1), 12459.84249300416, 1e-3);
    EXPECT_NEAR(B(0,2), -9345.103327295785, 1e-3);
    EXPECT_NEAR(B(1,0), 9180.043511529033, 1e-3);
    EXPECT_NEAR(B(1,1), 8836.571813357277, 1e-3);
    EXPECT_NEAR(B(1,2), -9118.886614692303, 1e-3);
    EXPECT_NEAR(B(2,0), -2074.0241453691797, 1e-3);
    EXPECT_NEAR(B(2,1), -11928.94228189118, 1e-3);
    EXPECT_NEAR(B(2,2), -771.43808046263, 1e-3);
    EXPECT_NEAR(B(3,0), 2711.7944541678894, 1e-3);
    EXPECT_NEAR(B(3,1), 4758.671455850471, 1e-3);
    EXPECT_NEAR(B(3,2), 183.99377046902433, 1e-3);
    EXPECT_NEAR(B(4,0), -12424.16509931825, 1e-3);
    EXPECT_NEAR(B(4,1), -6592.737743746769, 1e-3);
    EXPECT_NEAR(B(4,2), 9737.383417412177, 1e-3);
    EXPECT_NEAR(B(5,0), -5577.713970913626, 1e-3);
    EXPECT_NEAR(B(5,1), -4310.384971816705, 1e-3);
    EXPECT_NEAR(B(5,2), 10525.667286507749, 1e-3);
    EXPECT_NEAR(B(6,0), -7001.47607489165, 1e-3);
    EXPECT_NEAR(B(6,1), 4142.353658351905, 1e-3);
    EXPECT_NEAR(B(6,2), -838.7704710111966, 1e-3);
    EXPECT_NEAR(B(7,0), -3022.3495226246328, 1e-3);
    EXPECT_NEAR(B(7,1), -2267.134694328909, 1e-3);
    EXPECT_NEAR(B(7,2), -4216.282564750577, 1e-3);
    EXPECT_NEAR(B(8,0), 2122.8016357206525, 1e-3);
    EXPECT_NEAR(B(8,1), 3676.767755515355, 1e-3);
    EXPECT_NEAR(B(8,2), -4908.512673572416, 1e-3);
    EXPECT_NEAR(B(9,0), -8441.812696742065, 1e-3);
    EXPECT_NEAR(B(9,1), 4283.643932271676, 1e-3);
    EXPECT_NEAR(B(9,2), -115.62148837821992, 1e-3);
    EXPECT_NEAR(B(10,0), 194.9425364528795, 1e-3);
    EXPECT_NEAR(B(10,1), 11793.769430749962, 1e-3);
    EXPECT_NEAR(B(10,2), -1919.0059397107564, 1e-3);
    EXPECT_NEAR(B(11,0), -7.129749188752859, 1e-3);
    EXPECT_NEAR(B(11,1), 3074.636880922094, 1e-3);
    EXPECT_NEAR(B(11,2), -6786.610572509313, 1e-3);
    EXPECT_NEAR(B(12,0), 2548.7701722402567, 1e-3);
    EXPECT_NEAR(B(12,1), 1584.1173033047476, 1e-3);
    EXPECT_NEAR(B(12,2), -4662.166618568711, 1e-3);
    EXPECT_NEAR(B(13,0), -2409.6622621739793, 1e-3);
    EXPECT_NEAR(B(13,1), -3089.264388155817, 1e-3);
    EXPECT_NEAR(B(13,2), 8436.368135502003, 1e-3);
    EXPECT_NEAR(B(14,0), -10082.527375670392, 1e-3);
    EXPECT_NEAR(B(14,1), -4838.360521013305, 1e-3);
    EXPECT_NEAR(B(14,2), 13484.726718523982, 1e-3);
    EXPECT_NEAR(B(15,0), -7393.734794639859, 1e-3);
    EXPECT_NEAR(B(15,1), -2230.653343398936, 1e-3);
    EXPECT_NEAR(B(15,2), 6580.429831275325, 1e-3);
    EXPECT_NEAR(B(16,0), -14942.061686243549, 1e-3);
    EXPECT_NEAR(B(16,1), -9357.160185258152, 1e-3);
    EXPECT_NEAR(B(16,2), 16463.844883776535, 1e-3);
    EXPECT_NEAR(B(17,0), -856.9665443530935, 1e-3);
    EXPECT_NEAR(B(17,1), -9352.513799300583, 1e-3);
    EXPECT_NEAR(B(17,2), 3476.2413204197096, 1e-3);
    Matrix<double, -1, -1, ColumnStorage> C = mn3 * m3n;
    EXPECT_NEAR(C(0,0), -7390.877372383017, 1e-3);
    EXPECT_NEAR(C(0,1), -3744.1957296350456, 1e-3);
    EXPECT_NEAR(C(0,2), -2548.56792983103, 1e-3);
    EXPECT_NEAR(C(0,3), -1118.797992439918, 1e-3);
    EXPECT_NEAR(C(0,4), 8507.090337374515, 1e-3);
    EXPECT_NEAR(C(0,5), -5981.916013815904, 1e-3);
    EXPECT_NEAR(C(0,6), 561.3043409870556, 1e-3);
    EXPECT_NEAR(C(0,7), 6330.979985713471, 1e-3);
    EXPECT_NEAR(C(0,8), 222.81975244519893, 1e-3);
    EXPECT_NEAR(C(0,9), 4884.005496902301, 1e-3);
    EXPECT_NEAR(C(0,10), 8042.0114579540705, 1e-3);
    EXPECT_NEAR(C(0,11), -6075.9063151323735, 1e-3);
    EXPECT_NEAR(C(0,12), 4.208650983207446, 1e-3);
    EXPECT_NEAR(C(0,13), -4636.948040278472, 1e-3);
    EXPECT_NEAR(C(0,14), -2822.5275385360583, 1e-3);
    EXPECT_NEAR(C(0,15), 6750.647540336169, 1e-3);
    EXPECT_NEAR(C(0,16), 2338.3611672819943, 1e-3);
    EXPECT_NEAR(C(0,17), -5021.534246049641, 1e-3);
    EXPECT_NEAR(C(1,0), -4453.296920715603, 1e-3);
    EXPECT_NEAR(C(1,1), -1089.1757591684013, 1e-3);
    EXPECT_NEAR(C(1,2), 859.8203007623836, 1e-3);
    EXPECT_NEAR(C(1,3), -852.1574462115194, 1e-3);
    EXPECT_NEAR(C(1,4), 10025.876607072578, 1e-3);
    EXPECT_NEAR(C(1,5), -4208.447035889998, 1e-3);
    EXPECT_NEAR(C(1,6), -1984.1913105002636, 1e-3);
    EXPECT_NEAR(C(1,7), 7553.524490633965, 1e-3);
    EXPECT_NEAR(C(1,8), -3233.889468271122, 1e-3);
    EXPECT_NEAR(C(1,9), 2083.685507214241, 1e-3);
    EXPECT_NEAR(C(1,10), 8076.180923474875, 1e-3);
    EXPECT_NEAR(C(1,11), -6381.509110769582, 1e-3);
    EXPECT_NEAR(C(1,12), 62.05995384346491, 1e-3);
    EXPECT_NEAR(C(1,13), -8208.310348425037, 1e-3);
    EXPECT_NEAR(C(1,14), 298.6237697935435, 1e-3);
    EXPECT_NEAR(C(1,15), 6810.128337111614, 1e-3);
    EXPECT_NEAR(C(1,16), 4988.782891497511, 1e-3);
    EXPECT_NEAR(C(1,17), -1083.1701429478385, 1e-3);
    EXPECT_NEAR(C(2,0), 14250.701829723137, 1e-3);
    EXPECT_NEAR(C(2,1), 13315.91045929192, 1e-3);
    EXPECT_NEAR(C(2,2), 5770.839624339297, 1e-3);
    EXPECT_NEAR(C(2,3), 4744.104818881641, 1e-3);
    EXPECT_NEAR(C(2,4), 1286.1595609353883, 1e-3);
    EXPECT_NEAR(C(2,5), 5225.735957676298, 1e-3);
    EXPECT_NEAR(C(2,6), 4051.047465316941, 1e-3);
    EXPECT_NEAR(C(2,7), -7576.005441023441, 1e-3);
    EXPECT_NEAR(C(2,8), -4508.7869487877015, 1e-3);
    EXPECT_NEAR(C(2,9), -15532.975746702656, 1e-3);
    EXPECT_NEAR(C(2,10), 3299.3747831577234, 1e-3);
    EXPECT_NEAR(C(2,11), 1592.6168797242397, 1e-3);
    EXPECT_NEAR(C(2,12), -8911.078931472908, 1e-3);
    EXPECT_NEAR(C(2,13), -1570.609694894654, 1e-3);
    EXPECT_NEAR(C(2,14), 6292.012216759778, 1e-3);
    EXPECT_NEAR(C(2,15), -168.5552959837027, 1e-3);
    EXPECT_NEAR(C(2,16), -657.0792509144089, 1e-3);
    EXPECT_NEAR(C(2,17), 6707.846978968542, 1e-3);
    EXPECT_NEAR(C(3,0), -6368.9363821277475, 1e-3);
    EXPECT_NEAR(C(3,1), -5873.07537661933, 1e-3);
    EXPECT_NEAR(C(3,2), -921.6152421291467, 1e-3);
    EXPECT_NEAR(C(3,3), -2583.811458141482, 1e-3);
    EXPECT_NEAR(C(3,4), 769.1875171684871, 1e-3);
    EXPECT_NEAR(C(3,5), -1971.149202730446, 1e-3);
    EXPECT_NEAR(C(3,6), -4183.341910285674, 1e-3);
    EXPECT_NEAR(C(3,7), 5549.966729055489, 1e-3);
    EXPECT_NEAR(C(3,8), 53.64297828972185, 1e-3);
    EXPECT_NEAR(C(3,9), 7093.477176309152, 1e-3);
    EXPECT_NEAR(C(3,10), -1505.7895406148973, 1e-3);
    EXPECT_NEAR(C(3,11), -1419.2584514912464, 1e-3);
    EXPECT_NEAR(C(3,12), 5169.765610645171, 1e-3);
    EXPECT_NEAR(C(3,13), -1943.3340909703422, 1e-3);
    EXPECT_NEAR(C(3,14), -1445.9210767010186, 1e-3);
    EXPECT_NEAR(C(3,15), 449.1477965462043, 1e-3);
    EXPECT_NEAR(C(3,16), 2440.502693850091, 1e-3);
    EXPECT_NEAR(C(3,17), -1182.5900193062319, 1e-3);
    EXPECT_NEAR(C(4,0), 2865.2164959533898, 1e-3);
    EXPECT_NEAR(C(4,1), -615.7102158139965, 1e-3);
    EXPECT_NEAR(C(4,2), -4595.781598313731, 1e-3);
    EXPECT_NEAR(C(4,3), 1153.368483556138, 1e-3);
    EXPECT_NEAR(C(4,4), -12888.323339569197, 1e-3);
    EXPECT_NEAR(C(4,5), 3026.9897027834854, 1e-3);
    EXPECT_NEAR(C(4,6), 5881.400128333127, 1e-3);
    EXPECT_NEAR(C(4,7), -10791.093483450648, 1e-3);
    EXPECT_NEAR(C(4,8), 7434.446950937133, 1e-3);
    EXPECT_NEAR(C(4,9), -558.353299277454, 1e-3);
    EXPECT_NEAR(C(4,10), -8619.52769268405, 1e-3);
    EXPECT_NEAR(C(4,11), 7645.462040830391, 1e-3);
    EXPECT_NEAR(C(4,12), -1166.0704780655578, 1e-3);
    EXPECT_NEAR(C(4,13), 13433.041963349124, 1e-3);
    EXPECT_NEAR(C(4,14), -3550.7307735056816, 1e-3);
    EXPECT_NEAR(C(4,15), -7646.171162448929, 1e-3);
    EXPECT_NEAR(C(4,16), -8955.620442613694, 1e-3);
    EXPECT_NEAR(C(4,17), -3003.016903153978, 1e-3);
    EXPECT_NEAR(C(5,0), -3230.918453420944, 1e-3);
    EXPECT_NEAR(C(5,1), -6363.837571741524, 1e-3);
    EXPECT_NEAR(C(5,2), -921.2586254760781, 1e-3);
    EXPECT_NEAR(C(5,3), -2753.468389884133, 1e-3);
    EXPECT_NEAR(C(5,4), -9414.911305044527, 1e-3);
    EXPECT_NEAR(C(5,5), 2507.986470028751, 1e-3);
    EXPECT_NEAR(C(5,6), -5004.4015484699885, 1e-3);
    EXPECT_NEAR(C(5,7), 272.5902720074541, 1e-3);
    EXPECT_NEAR(C(5,8), 2266.304055515758, 1e-3);
    EXPECT_NEAR(C(5,9), 6996.73880841473, 1e-3);
    EXPECT_NEAR(C(5,10), -11207.305581354087, 1e-3);
    EXPECT_NEAR(C(5,11), 4891.84427557317, 1e-3);
    EXPECT_NEAR(C(5,12), 7582.352523472485, 1e-3);
    EXPECT_NEAR(C(5,13), 4816.024831736409, 1e-3);
    EXPECT_NEAR(C(5,14), -1187.1951456193453, 1e-3);
    EXPECT_NEAR(C(5,15), -6901.687866407328, 1e-3);
    EXPECT_NEAR(C(5,16), -872.2192941846378, 1e-3);
    EXPECT_NEAR(C(5,17), 1075.9963230068786, 1e-3);
    EXPECT_NEAR(C(6,0), -586.3203686874361, 1e-3);
    EXPECT_NEAR(C(6,1), -383.91694991096523, 1e-3);
    EXPECT_NEAR(C(6,2), -7742.261346106473, 1e-3);
    EXPECT_NEAR(C(6,3), 2145.3037617891396, 1e-3);
    EXPECT_NEAR(C(6,4), -4686.168155815363, 1e-3);
    EXPECT_NEAR(C(6,5), -2419.7998338084603, 1e-3);
    EXPECT_NEAR(C(6,6), 11120.579946422178, 1e-3);
    EXPECT_NEAR(C(6,7), -9186.788763251157, 1e-3);
    EXPECT_NEAR(C(6,8), 8804.579844851005, 1e-3);
    EXPECT_NEAR(C(6,9), -576.0144371426865, 1e-3);
    EXPECT_NEAR(C(6,10), 1613.9362707707191, 1e-3);
    EXPECT_NEAR(C(6,11), 2304.128027211377, 1e-3);
    EXPECT_NEAR(C(6,12), -5822.061048071743, 1e-3);
    EXPECT_NEAR(C(6,13), 11260.605821712677, 1e-3);
    EXPECT_NEAR(C(6,14), -6432.107694393403, 1e-3);
    EXPECT_NEAR(C(6,15), -604.3412644332251, 1e-3);
    EXPECT_NEAR(C(6,16), -9459.183882737228, 1e-3);
    EXPECT_NEAR(C(6,17), -8829.614715510741, 1e-3);
    EXPECT_NEAR(C(7,0), 7761.362278144544, 1e-3);
    EXPECT_NEAR(C(7,1), 8415.449489838957, 1e-3);
    EXPECT_NEAR(C(7,2), -1043.1822049480181, 1e-3);
    EXPECT_NEAR(C(7,3), 4389.505821252333, 1e-3);
    EXPECT_NEAR(C(7,4), 1123.5430486197001, 1e-3);
    EXPECT_NEAR(C(7,5), 466.5694870112446, 1e-3);
    EXPECT_NEAR(C(7,6), 9627.806475806296, 1e-3);
    EXPECT_NEAR(C(7,7), -8802.75310048212, 1e-3);
    EXPECT_NEAR(C(7,8), 1809.605412774244, 1e-3);
    EXPECT_NEAR(C(7,9), -10233.678417206598, 1e-3);
    EXPECT_NEAR(C(7,10), 6103.759267300478, 1e-3);
    EXPECT_NEAR(C(7,11), 462.5000632183641, 1e-3);
    EXPECT_NEAR(C(7,12), -9989.42005565717, 1e-3);
    EXPECT_NEAR(C(7,13), 3771.4790956760366, 1e-3);
    EXPECT_NEAR(C(7,14), 8.828359317167669, 1e-3);
    EXPECT_NEAR(C(7,15), 1806.6765695130387, 1e-3);
    EXPECT_NEAR(C(7,16), -5164.00878695949, 1e-3);
    EXPECT_NEAR(C(7,17), -1810.3209369584433, 1e-3);
    EXPECT_NEAR(C(8,0), -52.670050704210766, 1e-3);
    EXPECT_NEAR(C(8,1), 1526.2350144642605, 1e-3);
    EXPECT_NEAR(C(8,2), -947.3372898702949, 1e-3);
    EXPECT_NEAR(C(8,3), 997.1066802393269, 1e-3);
    EXPECT_NEAR(C(8,4), 3787.679208570153, 1e-3);
    EXPECT_NEAR(C(8,5), -1959.6858531824469, 1e-3);
    EXPECT_NEAR(C(8,6), 3010.969183927579, 1e-3);
    EXPECT_NEAR(C(8,7), -242.03406782620326, 1e-3);
    EXPECT_NEAR(C(8,8), 293.0131158704351, 1e-3);
    EXPECT_NEAR(C(8,9), -1683.1803492048357, 1e-3);
    EXPECT_NEAR(C(8,10), 5037.088674466954, 1e-3);
    EXPECT_NEAR(C(8,11), -2219.059673235955, 1e-3);
    EXPECT_NEAR(C(8,12), -3174.5514384277726, 1e-3);
    EXPECT_NEAR(C(8,13), -960.8799361847086, 1e-3);
    EXPECT_NEAR(C(8,14), -748.0925939624093, 1e-3);
    EXPECT_NEAR(C(8,15), 3174.8468636302855, 1e-3);
    EXPECT_NEAR(C(8,16), -463.9590490275407, 1e-3);
    EXPECT_NEAR(C(8,17), -2085.0146418941818, 1e-3);
    EXPECT_NEAR(C(9,0), -820.2692838446931, 1e-3);
    EXPECT_NEAR(C(9,1), -848.4803418407137, 1e-3);
    EXPECT_NEAR(C(9,2), -8852.500852733023, 1e-3);
    EXPECT_NEAR(C(9,3), 2258.9725122556993, 1e-3);
    EXPECT_NEAR(C(9,4), -6086.664275268895, 1e-3);
    EXPECT_NEAR(C(9,5), -2516.281495815183, 1e-3);
    EXPECT_NEAR(C(9,6), 12299.794637901821, 1e-3);
    EXPECT_NEAR(C(9,7), -10503.199224948288, 1e-3);
    EXPECT_NEAR(C(9,8), 10180.58823675411, 1e-3);
    EXPECT_NEAR(C(9,9), -211.17798252789837, 1e-3);
    EXPECT_NEAR(C(9,10), 963.1748459421864, 1e-3);
    EXPECT_NEAR(C(9,11), 3030.625187541404, 1e-3);
    EXPECT_NEAR(C(9,12), -6091.820054464178, 1e-3);
    EXPECT_NEAR(C(9,13), 13206.208691192167, 1e-3);
    EXPECT_NEAR(C(9,14), -7377.077242946326, 1e-3);
    EXPECT_NEAR(C(9,15), -1244.5774917965596, 1e-3);
    EXPECT_NEAR(C(9,16), -10853.40406819046, 1e-3);
    EXPECT_NEAR(C(9,17), -9923.909522820088, 1e-3);
    EXPECT_NEAR(C(10,0), -10706.798591784622, 1e-3);
    EXPECT_NEAR(C(10,1), -9240.673563930026, 1e-3);
    EXPECT_NEAR(C(10,2), -7206.629167827211, 1e-3);
    EXPECT_NEAR(C(10,3), -2341.7864624378713, 1e-3);
    EXPECT_NEAR(C(10,4), -771.3954443271415, 1e-3);
    EXPECT_NEAR(C(10,5), -5521.680462267907, 1e-3);
    EXPECT_NEAR(C(10,6), 2010.45321967469, 1e-3);
    EXPECT_NEAR(C(10,7), 2465.033825400574, 1e-3);
    EXPECT_NEAR(C(10,8), 6329.829493513254, 1e-3);
    EXPECT_NEAR(C(10,9), 10488.310455824314, 1e-3);
    EXPECT_NEAR(C(10,10), 369.3134979805192, 1e-3);
    EXPECT_NEAR(C(10,11), -1419.56661330577, 1e-3);
    EXPECT_NEAR(C(10,12), 3225.9404243461836, 1e-3);
    EXPECT_NEAR(C(10,13), 4404.4102549043055, 1e-3);
    EXPECT_NEAR(C(10,14), -7072.186627122322, 1e-3);
    EXPECT_NEAR(C(10,15), 1357.7246163434352, 1e-3);
    EXPECT_NEAR(C(10,16), -2817.7778663635836, 1e-3);
    EXPECT_NEAR(C(10,17), -8764.787917284159, 1e-3);
    EXPECT_NEAR(C(11,0), 3307.357054774187, 1e-3);
    EXPECT_NEAR(C(11,1), 5173.318680701192, 1e-3);
    EXPECT_NEAR(C(11,2), -2239.4545107015274, 1e-3);
    EXPECT_NEAR(C(11,3), 3152.7698870223876, 1e-3);
    EXPECT_NEAR(C(11,4), 3714.573835752135, 1e-3);
    EXPECT_NEAR(C(11,5), -1989.1044841250823, 1e-3);
    EXPECT_NEAR(C(11,6), 8427.935739789928, 1e-3);
    EXPECT_NEAR(C(11,7), -5125.075418164574, 1e-3);
    EXPECT_NEAR(C(11,8), 2049.0417901738124, 1e-3);
    EXPECT_NEAR(C(11,9), -6234.800540983421, 1e-3);
    EXPECT_NEAR(C(11,10), 7830.497052812183, 1e-3);
    EXPECT_NEAR(C(11,11), -1730.1334840224158, 1e-3);
    EXPECT_NEAR(C(11,12), -8169.5094912519435, 1e-3);
    EXPECT_NEAR(C(11,13), 1947.6032234013098, 1e-3);
    EXPECT_NEAR(C(11,14), -1435.9868412755184, 1e-3);
    EXPECT_NEAR(C(11,15), 3858.293191957865, 1e-3);
    EXPECT_NEAR(C(11,16), -3768.5100718551807, 1e-3);
    EXPECT_NEAR(C(11,17), -3817.3515130815485, 1e-3);
    EXPECT_NEAR(C(12,0), 1741.6755127096, 1e-3);
    EXPECT_NEAR(C(12,1), 3105.60086028112, 1e-3);
    EXPECT_NEAR(C(12,2), 665.543255384377, 1e-3);
    EXPECT_NEAR(C(12,3), 1281.692074817022, 1e-3);
    EXPECT_NEAR(C(12,4), 4278.127341426385, 1e-3);
    EXPECT_NEAR(C(12,5), -957.7470176679531, 1e-3);
    EXPECT_NEAR(C(12,6), 2106.2917836187726, 1e-3);
    EXPECT_NEAR(C(12,7), -119.44624079859844, 1e-3);
    EXPECT_NEAR(C(12,8), -1253.1055041742427, 1e-3);
    EXPECT_NEAR(C(12,9), -3415.795579603211, 1e-3);
    EXPECT_NEAR(C(12,10), 5003.744179140882, 1e-3);
    EXPECT_NEAR(C(12,11), -2172.835606578186, 1e-3);
    EXPECT_NEAR(C(12,12), -3443.2980690046506, 1e-3);
    EXPECT_NEAR(C(12,13), -2363.1499230798345, 1e-3);
    EXPECT_NEAR(C(12,14), 771.3127051530116, 1e-3);
    EXPECT_NEAR(C(12,15), 3063.001547026253, 1e-3);
    EXPECT_NEAR(C(12,16), 538.2740398034294, 1e-3);
    EXPECT_NEAR(C(12,17), -179.9570137287352, 1e-3);
    EXPECT_NEAR(C(13,0), -3855.220911025884, 1e-3);
    EXPECT_NEAR(C(13,1), -6232.729459944897, 1e-3);
    EXPECT_NEAR(C(13,2), 553.4146742648229, 1e-3);
    EXPECT_NEAR(C(13,3), -3148.9784578861754, 1e-3);
    EXPECT_NEAR(C(13,4), -6294.016248562053, 1e-3);
    EXPECT_NEAR(C(13,5), 1979.66205160222, 1e-3);
    EXPECT_NEAR(C(13,6), -6990.08405679258, 1e-3);
    EXPECT_NEAR(C(13,7), 3227.1206768728703, 1e-3);
    EXPECT_NEAR(C(13,8), 99.153186043823, 1e-3);
    EXPECT_NEAR(C(13,9), 7187.572929908995, 1e-3);
    EXPECT_NEAR(C(13,10), -9416.88391473703, 1e-3);
    EXPECT_NEAR(C(13,11), 3064.7845801257945, 1e-3);
    EXPECT_NEAR(C(13,12), 8215.266622283485, 1e-3);
    EXPECT_NEAR(C(13,13), 1172.0071103281305, 1e-3);
    EXPECT_NEAR(C(13,14), -24.03343850848166, 1e-3);
    EXPECT_NEAR(C(13,15), -5181.879131140527, 1e-3);
    EXPECT_NEAR(C(13,16), 1680.6781596587584, 1e-3);
    EXPECT_NEAR(C(13,17), 2265.055329203277, 1e-3);
    EXPECT_NEAR(C(14,0), -3610.2560488691165, 1e-3);
    EXPECT_NEAR(C(14,1), -7711.807558601297, 1e-3);
    EXPECT_NEAR(C(14,2), -3761.9167241146474, 1e-3);
    EXPECT_NEAR(C(14,3), -2532.8448484312735, 1e-3);
    EXPECT_NEAR(C(14,4), -14060.67414633914, 1e-3);
    EXPECT_NEAR(C(14,5), 2708.210295896059, 1e-3);
    EXPECT_NEAR(C(14,6), -2175.9140860463503, 1e-3);
    EXPECT_NEAR(C(14,7), -3536.8474281144954, 1e-3);
    EXPECT_NEAR(C(14,8), 6004.87088763137, 1e-3);
    EXPECT_NEAR(C(14,9), 8051.34674586371, 1e-3);
    EXPECT_NEAR(C(14,10), -13938.792580505547, 1e-3);
    EXPECT_NEAR(C(14,11), 7393.070120763748, 1e-3);
    EXPECT_NEAR(C(14,12), 7257.191820439504, 1e-3);
    EXPECT_NEAR(C(14,13), 10455.143541689657, 1e-3);
    EXPECT_NEAR(C(14,14), -3589.9021263856957, 1e-3);
    EXPECT_NEAR(C(14,15), -9314.673636321446, 1e-3);
    EXPECT_NEAR(C(14,16), -4727.56639620616, 1e-3);
    EXPECT_NEAR(C(14,17), -1485.299990769496, 1e-3);
    EXPECT_NEAR(C(15,0), -844.8871405459986, 1e-3);
    EXPECT_NEAR(C(15,1), -2958.30281241883, 1e-3);
    EXPECT_NEAR(C(15,2), -3736.259549170726, 1e-3);
    EXPECT_NEAR(C(15,3), -269.60100991616355, 1e-3);
    EXPECT_NEAR(C(15,4), -8465.731710390837, 1e-3);
    EXPECT_NEAR(C(15,5), 1099.1459348206556, 1e-3);
    EXPECT_NEAR(C(15,6), 2509.095089787078, 1e-3);
    EXPECT_NEAR(C(15,7), -5147.451467265114, 1e-3);
    EXPECT_NEAR(C(15,8), 5300.60194483182, 1e-3);
    EXPECT_NEAR(C(15,9), 2665.468749560255, 1e-3);
    EXPECT_NEAR(C(15,10), -6375.149540282098, 1e-3);
    EXPECT_NEAR(C(15,11), 4590.85978861212, 1e-3);
    EXPECT_NEAR(C(15,12), 1254.0477120223948, 1e-3);
    EXPECT_NEAR(C(15,13), 8543.14261030008, 1e-3);
    EXPECT_NEAR(C(15,14), -3218.104295909373, 1e-3);
    EXPECT_NEAR(C(15,15), -4953.1903738924275, 1e-3);
    EXPECT_NEAR(C(15,16), -5266.73728674051, 1e-3);
    EXPECT_NEAR(C(15,17), -2816.9861653915223, 1e-3);
    EXPECT_NEAR(C(16,0), 364.5980497181499, 1e-3);
    EXPECT_NEAR(C(16,1), -5067.235021212527, 1e-3);
    EXPECT_NEAR(C(16,2), -4408.2970515020725, 1e-3);
    EXPECT_NEAR(C(16,3), -1028.2140663034477, 1e-3);
    EXPECT_NEAR(C(16,4), -18234.276947927585, 1e-3);
    EXPECT_NEAR(C(16,5), 4703.209858201399, 1e-3);
    EXPECT_NEAR(C(16,6), 1172.096557101979, 1e-3);
    EXPECT_NEAR(C(16,7), -9154.160076473887, 1e-3);
    EXPECT_NEAR(C(16,8), 7904.489182962106, 1e-3);
    EXPECT_NEAR(C(16,9), 4497.896083171546, 1e-3);
    EXPECT_NEAR(C(16,10), -15969.70339800403, 1e-3);
    EXPECT_NEAR(C(16,11), 10352.126566737821, 1e-3);
    EXPECT_NEAR(C(16,12), 4669.447848531086, 1e-3);
    EXPECT_NEAR(C(16,13), 15071.907307316187, 1e-3);
    EXPECT_NEAR(C(16,14), -3717.150899402488, 1e-3);
    EXPECT_NEAR(C(16,15), -11883.243457691216, 1e-3);
    EXPECT_NEAR(C(16,16), -8268.993688476176, 1e-3);
    EXPECT_NEAR(C(16,17), -1462.7461432631103, 1e-3);
    EXPECT_NEAR(C(17,0), 6901.659858672904, 1e-3);
    EXPECT_NEAR(C(17,1), 5241.893302131366, 1e-3);
    EXPECT_NEAR(C(17,2), 5296.897158637401, 1e-3);
    EXPECT_NEAR(C(17,3), 979.4396167259955, 1e-3);
    EXPECT_NEAR(C(17,4), -1066.1363566727787, 1e-3);
    EXPECT_NEAR(C(17,5), 4502.099423881991, 1e-3);
    EXPECT_NEAR(C(17,6), -3011.347974325525, 1e-3);
    EXPECT_NEAR(C(17,7), -1170.6883396657358, 1e-3);
    EXPECT_NEAR(C(17,8), -4473.905057049284, 1e-3);
    EXPECT_NEAR(C(17,9), -5938.918586676401, 1e-3);
    EXPECT_NEAR(C(17,10), -2566.878248695689, 1e-3);
    EXPECT_NEAR(C(17,11), 1837.8507664697272, 1e-3);
    EXPECT_NEAR(C(17,12), -441.5345884991666, 1e-3);
    EXPECT_NEAR(C(17,13), -2753.3978600448118, 1e-3);
    EXPECT_NEAR(C(17,14), 5078.039131531166, 1e-3);
    EXPECT_NEAR(C(17,15), -2285.7578335356784, 1e-3);
    EXPECT_NEAR(C(17,16), 2322.6934194056034, 1e-3);
    EXPECT_NEAR(C(17,17), 6844.895444174535, 1e-3);
    Matrix<double, 3, 3, ColumnStorage> D = m3n * mn3;
    EXPECT_NEAR(D(0,0), -34378.04803859063, 1e-3);
    EXPECT_NEAR(D(0,1), -6752.9479796515, 1e-3);
    EXPECT_NEAR(D(0,2), -1238.1855610108241, 1e-3);
    EXPECT_NEAR(D(1,0), -1545.8389513054522, 1e-3);
    EXPECT_NEAR(D(1,1), -5228.3518455833555, 1e-3);
    EXPECT_NEAR(D(1,2), 12159.335869971404, 1e-3);
    EXPECT_NEAR(D(2,0), -2498.468258260737, 1e-3);
    EXPECT_NEAR(D(2,1), 20617.01542063802, 1e-3);
    EXPECT_NEAR(D(2,2), 12733.398339264346, 1e-3);
    Matrix<double, 3, 3, ColumnStorage> E = m33 * m33;
    EXPECT_NEAR(E(0,0), 13182.663499434022, 1e-3);
    EXPECT_NEAR(E(0,1), 7506.152094343197, 1e-3);
    EXPECT_NEAR(E(0,2), -12905.471989608142, 1e-3);
    EXPECT_NEAR(E(1,0), 4724.973516968021, 1e-3);
    EXPECT_NEAR(E(1,1), 11625.384001389544, 1e-3);
    EXPECT_NEAR(E(1,2), -6198.140455027622, 1e-3);
    EXPECT_NEAR(E(2,0), -11506.475637798316, 1e-3);
    EXPECT_NEAR(E(2,1), -7653.056289517146, 1e-3);
    EXPECT_NEAR(E(2,2), 15786.037212275063, 1e-3);
  }
}
TEST(TestLabo1Extra, ProductMatrixVector){
  {
    Vector<double, 3> u; u(0) = 89.63885274026418; u(1) = 33.98267508829284; u(2) = 58.18085749457168;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-37.761291293282206; m33(0,1)=-58.77833883088219; m33(0,2)=-80.31292383738193; m33(1,0)=82.42200051847567; m33(1,1)=-21.616077216647483; m33(1,2)=-81.41765352024458; m33(2,0)=-1.826095889555674; m33(2,1)=-72.65845670305742; m33(2,2)=-68.43559055076148;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=-0.6810804556978075; m44(0,1)=-0.3717461369121619; m44(0,2)=-0.6308202775413543; m44(0,3)=65.25663257716863; m44(1,0)=-0.7322085856273928; m44(1,1)=0.3457881173505905; m44(1,2)=0.5867718168356992; m44(1,3)=-72.82746334890318; m44(2,0)=0.0; m44(2,1)=0.8615308396047228; m44(2,2)=-0.5077052416609282; m44(2,3)=-50.951590508183095; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), -10054.998796995307, 1e-3);
    EXPECT_NEAR(v(1), 1916.692541293076, 1e-3);
    EXPECT_NEAR(v(2), -6614.459208480986, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), -45.129230953732865, 1e-3);
    EXPECT_NEAR(w(1), -92.57210823264782, 1e-3);
    EXPECT_NEAR(w(2), -51.21319422167322, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = 21.26102327359945; u(1) = -63.632003812151375; u(2) = 21.749676556807557;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-72.46587508929531; m33(0,1)=26.74413795088728; m33(0,2)=66.40155978725781; m33(1,0)=30.554539344667063; m33(1,1)=34.707428553000256; m33(1,2)=-78.73225643210714; m33(2,0)=29.88002386285075; m33(2,1)=84.40743250651678; m33(2,2)=89.33116036637102;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=-0.8156253236747055; m44(0,1)=0.0; m44(0,2)=0.5785804450381398; m44(0,3)=-36.44550865077372; m44(1,0)=-0.4886547783002762; m44(1,1)=0.5354367269787551; m44(1,2)=-0.6888570381774334; m44(1,3)=26.24571159164249; m44(2,0)=-0.3097932197851331; m44(2,1)=-0.8445753438280554; m44(2,2)=-0.43671575374937205; m44(2,3)=58.09911341828064; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), -1798.269296618443, 1e-3);
    EXPECT_NEAR(v(1), -3271.2835658593685, 1e-3);
    EXPECT_NEAR(v(2), -2792.8103398519333, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), -41.2026000982854, 1e-3);
    EXPECT_NEAR(w(1), -33.19691864907287, 1e-3);
    EXPECT_NEAR(w(2), 95.75618766923024, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = 60.89920397428068; u(1) = 41.99263628824008; u(2) = 2.8397811977043403;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=37.756340946034896; m33(0,1)=34.695096214807364; m33(0,2)=71.82563147437446; m33(1,0)=74.91874228380777; m33(1,1)=11.371524438829937; m33(1,2)=22.662878030996694; m33(2,0)=-33.183135422386044; m33(2,1)=-48.81237469926953; m33(2,2)=77.28631280104915;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=0.09071108841607319; m44(0,1)=0.15875989354807826; m44(0,2)=-0.9831412892555038; m44(0,3)=-20.28034322391565; m44(1,0)=0.8682639927927074; m44(1,1)=-0.49610244790735053; m44(1,2)=0.0; m44(1,3)=-65.91591665493024; m44(2,0)=-0.487738800238444; m44(2,1)=-0.8536261812883538; m44(2,2)=-0.18284749208295362; m44(2,3)=-28.08938117342305; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), 3960.2387427031354, 1e-3);
    EXPECT_NEAR(v(1), 5104.369672559086, 1e-3);
    EXPECT_NEAR(v(2), -3851.1106117734685, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), -10.881269828726621, 1e-3);
    EXPECT_NEAR(w(1), -33.87198031100272, 1e-3);
    EXPECT_NEAR(w(2), -94.15754648234068, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = 5.188467455547638; u(1) = 18.80451508110363; u(2) = -21.656727889135595;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=87.9457818703861; m33(0,1)=73.05874068692381; m33(0,2)=39.940251688233246; m33(1,0)=75.10237717805055; m33(1,1)=72.18489393198146; m33(1,2)=99.55423077694917; m33(2,0)=-23.406607601688265; m33(2,1)=36.642344803461384; m33(2,2)=59.655570064408465;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=0.17067228277067772; m44(0,1)=-0.6737686724718157; m44(0,2)=-0.7189622715340582; m44(0,3)=-18.335201879756795; m44(1,0)=-0.9693828421385298; m44(1,1)=-0.24555428191629253; m44(1,2)=0.0; m44(1,3)=29.845708309352148; m44(2,0)=-0.1765442643114522; m44(2,1)=0.6969496901700587; m44(2,2)=-0.6950491005034012; m44(2,3)=-31.894796135192152; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), 965.1628555052321, 1e-3);
    EXPECT_NEAR(v(1), -408.9507197542059, 1e-3);
    EXPECT_NEAR(v(2), -724.347344278602, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), -14.549197180540624, 1e-3);
    EXPECT_NEAR(w(1), 20.198567783425617, 1e-3);
    EXPECT_NEAR(w(2), -4.652500106271733, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = 37.47349664672282; u(1) = -60.74514266373965; u(2) = -40.46471876369226;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-18.595918421354753; m33(0,1)=-63.34971612297557; m33(0,2)=51.78315639657973; m33(1,0)=60.68830258069576; m33(1,1)=-63.44130757420927; m33(1,2)=0.1227343978225548; m33(2,0)=69.14823593166864; m33(2,1)=49.45675635266332; m33(2,2)=81.76280170074256;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=-0.250151688477416; m44(0,1)=-0.2581347286114716; m44(0,2)=-0.9331616122819132; m44(0,3)=15.902624286413442; m44(1,0)=-0.7181238873483027; m44(1,1)=0.6959152839389017; m44(1,2)=0.0; m44(1,3)=-12.358184768214258; m44(2,0)=0.6494014283720508; m44(2,1)=0.6701256445360971; m44(2,2)=-0.3594570980846258; m44(2,3)=-95.12313555065694; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), 1055.9425967082998, 1e-3);
    EXPECT_NEAR(v(1), 6122.987769732011, 1e-3);
    EXPECT_NEAR(v(2), -3721.5403091682488, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), 59.969118945113756, 1e-3);
    EXPECT_NEAR(w(1), -81.54227105743792, 1e-3);
    EXPECT_NEAR(w(2), -96.94934080054827, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = -18.242981648343232; u(1) = 56.21809486615007; u(2) = 68.42388784251386;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=72.32617531563085; m33(0,1)=16.921578626504015; m33(0,2)=-27.34080821434577; m33(1,0)=75.31926937290174; m33(1,1)=-81.4337114340538; m33(1,2)=49.516021610363254; m33(2,0)=40.651084247784695; m33(2,1)=-19.615350275581747; m33(2,2)=96.61096468197644;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=0.8628144975844739; m44(0,1)=-0.39604187777629973; m44(0,2)=0.3141687027784186; m44(0,3)=-15.592609294116613; m44(1,0)=-0.5055206650158348; m44(1,1)=-0.6759578736217757; m44(1,2)=0.5362180622943203; m44(1,3)=10.857285613068584; m44(2,0)=0.0; m44(2,1)=-0.6214754895699024; m44(2,2)=-0.7834336065448367; m44(2,3)=-95.09026591014809; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), -2238.9105712501655, 1e-3);
    EXPECT_NEAR(v(1), -2564.0174545638056, 1e-3);
    EXPECT_NEAR(v(2), 4766.163205213616, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), -32.1009941127323, 1e-3);
    EXPECT_NEAR(w(1), 18.768550516577342, 1e-3);
    EXPECT_NEAR(w(2), -183.634007166056, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = -59.27939726364973; u(1) = 96.57872437189005; u(2) = -50.71931054476342;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-53.51188145034156; m33(0,1)=-39.773533094835024; m33(0,2)=-81.91533947789623; m33(1,0)=-48.98656664587613; m33(1,1)=-30.35481126192778; m33(1,2)=-24.41812181189411; m33(2,0)=50.987332445586844; m33(2,1)=-15.614790715203753; m33(2,2)=1.953005394977339;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=-0.9781360701985449; m44(0,1)=0.0; m44(0,2)=-0.20796593032645286; m44(0,3)=31.079492180635583; m44(1,0)=0.17988007252338098; m44(1,1)=0.5018585333987298; m44(1,2)=-0.846038516832336; m44(1,3)=89.95140758767585; m44(2,0)=0.10436947679053606; m44(2,1)=-0.8649497167205016; m44(2,2)=-0.4908859336542387; m44(2,3)=-66.61272043333199; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), 3485.5645301169448, 1e-3);
    EXPECT_NEAR(v(1), 1210.7354976539962, 1e-3);
    EXPECT_NEAR(v(2), -4629.6099911875845, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), 99.6106974667983, 1e-3);
    EXPECT_NEAR(w(1), 170.66757254759543, 1e-3);
    EXPECT_NEAR(w(2), -131.4380242858257, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = -33.64679408120854; u(1) = 57.74585710730173; u(2) = -38.78100535372986;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-48.76215910463826; m33(0,1)=-17.88064937607517; m33(0,2)=-10.666843689761578; m33(1,0)=54.129177432133815; m33(1,1)=-50.3409670888066; m33(1,2)=67.92880818886752; m33(2,0)=-36.14536761608753; m33(2,1)=92.53432169416001; m33(2,2)=68.69365938680332;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=0.4751126538005149; m44(0,1)=0.5241078534879362; m44(0,2)=-0.7068089728568109; m44(0,3)=7.21266115268952; m44(1,0)=-0.7408885299063788; m44(1,1)=0.671628011813954; m44(1,2)=0.0; m44(1,3)=-99.71424185587028; m44(2,0)=0.4747127051720829; m44(2,1)=0.5236666608245202; m44(2,2)=0.7074044641427562; m44(2,3)=-11.057694172067542; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), 1021.8278247323343, 1e-3);
    EXPECT_NEAR(v(1), -7362.603053042772, 1e-3);
    EXPECT_NEAR(v(2), 3895.640286793221, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), 48.90246330164035, 1e-3);
    EXPECT_NEAR(w(1), -36.001982853511294, 1e-3);
    EXPECT_NEAR(w(2), -24.22453095406812, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = 15.282052878141911; u(1) = -2.259998336973041; u(2) = 91.08586195638563;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-88.39582865245377; m33(0,1)=-64.58071224128338; m33(0,2)=-4.675696828923634; m33(1,0)=-86.1584474938788; m33(1,1)=-34.543435043656444; m33(1,2)=-62.495745585883625; m33(2,0)=-59.183456388092395; m33(2,1)=-57.14307430989349; m33(2,2)=44.41751022537625;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=0.44386855289227883; m44(0,1)=0.5950916475208161; m44(0,2)=0.6699601770286612; m44(0,3)=-72.72024311218823; m44(1,0)=-0.8960919080949868; m44(1,1)=0.29477162558569525; m44(1,2)=0.33185686823727545; m44(1,3)=15.476209050615353; m44(2,0)=0.0; m44(2,1)=-0.7476467212531113; m44(2,2)=0.6640966648007446; m44(2,3)=99.8824543736142; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), -1630.8073013173835, 1e-3);
    EXPECT_NEAR(v(1), -6931.088700045262, 1e-3);
    EXPECT_NEAR(v(2), 3270.5057477108207, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), -6.258026348579378, 1e-3);
    EXPECT_NEAR(w(1), 31.343370633361097, 1e-3);
    EXPECT_NEAR(w(2), 162.0619518560263, 1e-3);
  }
  {
    Vector<double, 3> u; u(0) = -45.53190350588168; u(1) = 98.18869916536156; u(2) = 82.67567746788419;
    Matrix<double, 3, 3, ColumnStorage> m33;
    m33(0,0)=-51.297389589304785; m33(0,1)=-66.59459838930371; m33(0,2)=27.56805306675247; m33(1,0)=96.48690448918092; m33(1,1)=9.10079699500524; m33(1,2)=83.88487605323621; m33(2,0)=41.570057963368356; m33(2,1)=24.52264689542079; m33(2,2)=-76.44940699537474;
    Matrix<double, 4, 4, ColumnStorage> m44;
    m44(0,0)=0.774965095070908; m44(0,1)=0.0; m44(0,2)=0.6320040359220331; m44(0,3)=-94.78257020280037; m44(1,0)=-0.5539089538751407; m44(1,1)=0.4815245168438749; m44(1,2)=0.6792046896887713; m44(1,3)=63.87247725975902; m44(2,0)=-0.3043254380407359; m44(2,1)=-0.8764326212997054; m44(2,2)=0.3731646929748866; m44(2,3)=-95.85244653326883; m44(3,0)=0.0; m44(3,1)=0.0; m44(3,2)=0.0; m44(3,3)=1.0;
    Vector<double, 3> v = m33 * u;
    EXPECT_NEAR(v(0), -1923.9617306372265, 1e-3);
    EXPECT_NEAR(v(1), 3435.6019505357876, 1e-3);
    EXPECT_NEAR(v(2), -5805.423584529748, 1e-3);
    Vector<double, 3> w = m44 * u;
    EXPECT_NEAR(w(0), -77.81684429970429, 1e-3);
    EXPECT_NEAR(w(1), 192.52698008315832, 1e-3);
    EXPECT_NEAR(w(2), -137.20006524672516, 1e-3);
  }
}
TEST(TestLabo1Extra, RigidTransformInverse){
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=-0.7899179842354741; m(0,1)=0.5558875173441905; m(0,2)=0.2588795979645317; m(0,3)=63.53646575655944; m(1,0)=-0.6132125065435026; m(1,1)=-0.7160740240561843; m(1,2)=-0.3334792555626483; m(1,3)=46.40415080808421; m(2,0)=0.0; m(2,1)=-0.4221694684991984; m(2,2)=0.9065169275127214; m(2,3)=37.91755407005138; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), -0.7899179842354742, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.6132125065435026, 1e-3);
    EXPECT_NEAR(mi(0,2), 5.0321798256853854e-17, 1e-3);
    EXPECT_NEAR(mi(0,3), 78.64420258691568, 1e-3);
    EXPECT_NEAR(mi(1,0), 0.5558875173441905, 1e-3);
    EXPECT_NEAR(mi(1,1), -0.7160740240561843, 1e-3);
    EXPECT_NEAR(mi(1,2), -0.42216946849919834, 1e-3);
    EXPECT_NEAR(mi(1,3), 13.917312440360101, 1e-3);
    EXPECT_NEAR(mi(2,0), 0.25887959796453164, 1e-3);
    EXPECT_NEAR(mi(2,1), -0.33347925556264824, 1e-3);
    EXPECT_NEAR(mi(2,2), 0.9065169275127212, 1e-3);
    EXPECT_NEAR(mi(2,3), -35.34637765902901, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=0.6589112893907124; m(0,1)=-0.32720889915223983; m(0,2)=0.6773258071482646; m(0,3)=-47.579657162583366; m(1,0)=-0.7522206542720485; m(1,1)=-0.2866202043457096; m(1,2)=0.5933067888937011; m(1,3)=30.029355381737275; m(2,0)=0.0; m(2,1)=-0.9004350030826229; m(2,2)=-0.4349905806147956; m(2,3)=80.66547089822612; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), 0.6589112893907124, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.7522206542720486, 1e-3);
    EXPECT_NEAR(mi(0,2), 5.551115123125783e-17, 1e-3);
    EXPECT_NEAR(mi(0,3), 53.939474602384124, 1e-3);
    EXPECT_NEAR(mi(1,0), -0.3272088991522398, 1e-3);
    EXPECT_NEAR(mi(1,1), -0.28662020434570956, 1e-3);
    EXPECT_NEAR(mi(1,2), -0.9004350030826228, 1e-3);
    EXPECT_NEAR(mi(1,3), 65.67254627057903, 1e-3);
    EXPECT_NEAR(mi(2,0), 0.6773258071482645, 1e-3);
    EXPECT_NEAR(mi(2,1), 0.5933067888937011, 1e-3);
    EXPECT_NEAR(mi(2,2), -0.43499058061479545, 1e-3);
    EXPECT_NEAR(mi(2,3), 49.49902929898342, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=-0.12921677297502387; m(0,1)=0.0; m(0,2)=-0.9916163701663668; m(0,3)=-85.67624239250289; m(1,0)=0.5536164401240612; m(1,1)=-0.8296411663169171; m(1,2)=-0.07214133611645579; m(1,3)=-80.61895745285052; m(2,0)=-0.8226857618837724; m(2,1)=-0.5582969954713223; m(2,2)=0.1072035542387071; m(2,3)=-59.16846832515195; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), -0.12921677297502387, 1e-3);
    EXPECT_NEAR(mi(0,1), 0.5536164401240611, 1e-3);
    EXPECT_NEAR(mi(0,2), -0.8226857618837723, 1e-3);
    EXPECT_NEAR(mi(0,3), -15.115883774598393, 1e-3);
    EXPECT_NEAR(mi(1,0), -0.0, 1e-3);
    EXPECT_NEAR(mi(1,1), -0.829641166316917, 1e-3);
    EXPECT_NEAR(mi(1,2), -0.5582969954713222, 1e-3);
    EXPECT_NEAR(mi(1,3), -99.91838398100924, 1e-3);
    EXPECT_NEAR(mi(2,0), -0.991616370166367, 1e-3);
    EXPECT_NEAR(mi(2,1), -0.07214133611645579, 1e-3);
    EXPECT_NEAR(mi(2,2), 0.10720355423870709, 1e-3);
    EXPECT_NEAR(mi(2,3), -84.43085369439521, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=0.6178488588834932; m(0,1)=0.656563779114608; m(0,2)=0.4326508887441579; m(0,3)=-3.573389719025613; m(1,0)=-0.7862968825935693; m(1,1)=0.5159084191865928; m(1,2)=0.33996428553015007; m(1,3)=9.98340634305292; m(2,0)=0.0; m(2,1)=-0.5502385909468138; m(2,2)=0.8350074808244923; m(2,3)=57.03623931292819; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), 0.6178488588834931, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.7862968825935694, 1e-3);
    EXPECT_NEAR(mi(0,2), -0.0, 1e-3);
    EXPECT_NEAR(mi(0,3), 10.057736045453359, 1e-3);
    EXPECT_NEAR(mi(1,0), 0.656563779114608, 1e-3);
    EXPECT_NEAR(mi(1,1), 0.5159084191865929, 1e-3);
    EXPECT_NEAR(mi(1,2), -0.5502385909468138, 1e-3);
    EXPECT_NEAR(mi(1,3), 28.57917482608178, 1e-3);
    EXPECT_NEAR(mi(2,0), 0.4326508887441579, 1e-3);
    EXPECT_NEAR(mi(2,1), 0.33996428553015007, 1e-3);
    EXPECT_NEAR(mi(2,2), 0.8350074808244924, 1e-3);
    EXPECT_NEAR(mi(2,3), -49.473657871198526, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=-0.30532791727234754; m(0,1)=0.42993321248800975; m(0,2)=-0.8496659906892062; m(0,3)=-4.900019523419871; m(1,0)=-0.9522472698486095; m(1,1)=-0.13785349298616878; m(1,2)=0.272436325656807; m(1,3)=61.254180348498465; m(2,0)=0.0; m(2,1)=0.8922745358191345; m(2,2)=0.45149324771113447; m(2,3)=41.98722428204593; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), -0.3053279172723474, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.9522472698486094, 1e-3);
    EXPECT_NEAR(mi(0,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(0,3), 56.83301324799237, 1e-3);
    EXPECT_NEAR(mi(1,0), 0.42993321248800975, 1e-3);
    EXPECT_NEAR(mi(1,1), -0.13785349298616878, 1e-3);
    EXPECT_NEAR(mi(1,2), 0.8922745358191346, 1e-3);
    EXPECT_NEAR(mi(1,3), -26.91334720059331, 1e-3);
    EXPECT_NEAR(mi(2,0), -0.8496659906892063, 1e-3);
    EXPECT_NEAR(mi(2,1), 0.27243632565680703, 1e-3);
    EXPECT_NEAR(mi(2,2), 0.4514932477111345, 1e-3);
    EXPECT_NEAR(mi(2,3), -39.80819202150404, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=-0.8426665329724763; m(0,1)=-0.13329457405486883; m(0,2)=0.5216758291656588; m(0,3)=54.75958681320196; m(1,0)=-0.5384358032376251; m(1,1)=0.20860959822407732; m(1,2)=-0.81643672217793; m(1,3)=91.96965943681118; m(2,0)=0.0; m(2,1)=-0.9688728461755547; m(2,2)=-0.24755889792871488; m(2,3)=99.00199341303772; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), -0.8426665329724762, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.5384358032376252, 1e-3);
    EXPECT_NEAR(mi(0,2), -2.7755575615628914e-17, 1e-3);
    EXPECT_NEAR(mi(0,3), 95.66382861923651, 1e-3);
    EXPECT_NEAR(mi(1,0), -0.13329457405486886, 1e-3);
    EXPECT_NEAR(mi(1,1), 0.20860959822407737, 1e-3);
    EXPECT_NEAR(mi(1,2), -0.9688728461755547, 1e-3);
    EXPECT_NEAR(mi(1,3), 84.03374523091135, 1e-3);
    EXPECT_NEAR(mi(2,0), 0.5216758291656588, 1e-3);
    EXPECT_NEAR(mi(2,1), -0.8164367221779302, 1e-3);
    EXPECT_NEAR(mi(2,2), -0.2475588979287149, 1e-3);
    EXPECT_NEAR(mi(2,3), 71.02947881694217, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=-0.7135830808790772; m(0,1)=0.0; m(0,2)=-0.7005706150582712; m(0,3)=46.98894352455778; m(1,0)=0.5815768734392242; m(1,1)=0.5575439866421585; m(1,2)=-0.5923791380862643; m(1,3)=-32.31315706340996; m(2,0)=0.39059893364393755; m(2,1)=-0.8301473983330724; m(2,2)=-0.39785395571371457; m(2,3)=7.702713412699751; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), -0.7135830808790772, 1e-3);
    EXPECT_NEAR(mi(0,1), 0.581576873439224, 1e-3);
    EXPECT_NEAR(mi(0,2), 0.39059893364393744, 1e-3);
    EXPECT_NEAR(mi(0,3), 49.314428298230084, 1e-3);
    EXPECT_NEAR(mi(1,0), -5.551115123125783e-17, 1e-3);
    EXPECT_NEAR(mi(1,1), 0.5575439866421584, 1e-3);
    EXPECT_NEAR(mi(1,2), -0.8301473983330723, 1e-3);
    EXPECT_NEAR(mi(1,3), 24.41039390978577, 1e-3);
    EXPECT_NEAR(mi(2,0), -0.7005706150582711, 1e-3);
    EXPECT_NEAR(mi(2,1), -0.5923791380862641, 1e-3);
    EXPECT_NEAR(mi(2,2), -0.3978539557137144, 1e-3);
    EXPECT_NEAR(mi(2,3), 16.841987936840617, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=0.655199358191179; m(0,1)=-0.7015590749923188; m(0,2)=0.2802296653136303; m(0,3)=-24.378695814492147; m(1,0)=-0.7554560219005917; m(1,1)=-0.6084550818878111; m(1,2)=0.24304035117451178; m(1,3)=36.943036725120294; m(2,0)=0.0; m(2,1)=-0.3709410702804682; m(2,2)=-0.928656407063011; m(2,3)=-32.64950630748629; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), 0.6551993581911789, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.7554560219005915, 1e-3);
    EXPECT_NEAR(mi(0,2), 5.1550786254351327e-17, 1e-3);
    EXPECT_NEAR(mi(0,3), 43.88174541248007, 1e-3);
    EXPECT_NEAR(mi(1,0), -0.7015590749923187, 1e-3);
    EXPECT_NEAR(mi(1,1), -0.6084550818878111, 1e-3);
    EXPECT_NEAR(mi(1,2), -0.37094107028046824, 1e-3);
    EXPECT_NEAR(mi(1,3), -6.735959663194609, 1e-3);
    EXPECT_NEAR(mi(2,0), 0.28022966531363025, 1e-3);
    EXPECT_NEAR(mi(2,1), 0.24304035117451175, 1e-3);
    EXPECT_NEAR(mi(2,2), -0.9286564070630109, 1e-3);
    EXPECT_NEAR(mi(2,3), -32.467188070139514, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=-0.12316316348384228; m(0,1)=0.47851608243384774; m(0,2)=-0.8693981792095123; m(0,3)=-97.68194268706864; m(1,0)=-0.9684362001788849; m(1,1)=-0.24926156178416892; m(1,2)=0.0; m(1,3)=-93.30408292578261; m(2,0)=-0.2167075479620758; m(2,1)=0.8419566691161013; m(2,2)=0.4941121390809829; m(2,3)=-48.17348057895294; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), -0.12316316348384225, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.9684362001788847, 1e-3);
    EXPECT_NEAR(mi(0,2), -0.2167075479620758, 1e-3);
    EXPECT_NEAR(mi(0,3), -112.82942545947078, 1e-3);
    EXPECT_NEAR(mi(1,0), 0.47851608243384763, 1e-3);
    EXPECT_NEAR(mi(1,1), -0.2492615617841688, 1e-3);
    EXPECT_NEAR(mi(1,2), 0.8419566691161011, 1e-3);
    EXPECT_NEAR(mi(1,3), 64.04524235620795, 1e-3);
    EXPECT_NEAR(mi(2,0), -0.8693981792095123, 1e-3);
    EXPECT_NEAR(mi(2,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(2,2), 0.49411213908098284, 1e-3);
    EXPECT_NEAR(mi(2,3), -61.12140157794279, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
  {
    Matrix<double, 4, 4, ColumnStorage> m;
    m(0,0)=-0.8820615884895145; m(0,1)=-0.11346792289034995; m(0,2)=-0.45726620757093356; m(0,3)=-48.8253349197771; m(1,0)=-0.12758811649101956; m(1,1)=0.9918272392560481; m(1,2)=0.0; m(1,3)=50.033634014775515; m(2,0)=0.4535290802601621; m(2,1)=0.058341734158967; m(2,2)=-0.8893298687290875; m(2,3)=92.22065810812657; m(3,0)=0.0; m(3,1)=0.0; m(3,2)=0.0; m(3,3)=1.0;
    Matrix<double, 4, 4, ColumnStorage> mi = m.inverse();
    EXPECT_NEAR(mi(0,0), -0.8820615884895142, 1e-3);
    EXPECT_NEAR(mi(0,1), -0.12758811649101953, 1e-3);
    EXPECT_NEAR(mi(0,2), 0.453529080260162, 1e-3);
    EXPECT_NEAR(mi(0,3), -78.50800560549041, 1e-3);
    EXPECT_NEAR(mi(1,0), -0.11346792289034992, 1e-3);
    EXPECT_NEAR(mi(1,1), 0.991827239256048, 1e-3);
    EXPECT_NEAR(mi(1,2), 0.05834173415896697, 1e-3);
    EXPECT_NEAR(mi(1,3), -60.545143551904374, 1e-3);
    EXPECT_NEAR(mi(2,0), -0.45726620757093345, 1e-3);
    EXPECT_NEAR(mi(2,1), 6.120531779240618e-18, 1e-3);
    EXPECT_NEAR(mi(2,2), -0.8893298687290875, 1e-3);
    EXPECT_NEAR(mi(2,3), 59.68841003726312, 1e-3);
    EXPECT_NEAR(mi(3,0), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,1), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,2), 0.0, 1e-3);
    EXPECT_NEAR(mi(3,3), 1.0, 1e-3);
  }
}
int main(int argc, char** argv)
{
    ::testing::InitGoogleTest(&argc, argv);
    const int ret = RUN_ALL_TESTS();
    return ret;
}
